name: Check Windows Compilation

env:
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"

on:
  pull_request:
    branches:
      - "master"
      - "candidate-*"
      - "!candidate-7.10.*"
      - "!candidate-7.8.*"
      - "!candidate-7.6.*"
      - "!candidate-7.4.*"
      - "!candidate-7.2.*"
      - "!candidate-7.0.*"
      - "!candidate-6.*"

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: hpcc-systems/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["docs/**", "esp/src/**/*", "dockerfiles/**", "helm/**", "ecllibrary/**", "testing/**", "initfiles/**" ]'

  build:
    strategy:
      matrix:
        triplet: ["x86-windows", "x64-windows"]
        include:
          - os: "windows-2019"
            triplet: "x86-windows"
          - os: "windows-2019"
            triplet: "x64-windows"
      fail-fast: false

    name: "Check Windows compilation"
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Display build summary
        working-directory: .
        run: |
          echo Option:${{ matrix.triplet }}
          echo "Checkout to $Env:GITHUB_WORKSPACE"

      - name: "Remove builtin vcpkg (old)"
        working-directory: .
        shell: "bash"
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"

      - name: Check out source code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: "Bootstrap vcpkg"
        working-directory: .
        shell: "bash"
        run: |
          ./vcpkg/bootstrap-vcpkg.sh

      - name: "Setup NuGet Credentials"
        working-directory: ./vcpkg
        shell: "bash"
        run: |
          `./vcpkg.exe fetch nuget | tail -n 1` \
            sources add \
            -source "https://nuget.pkg.github.com/hpcc-systems/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "hpcc-systems" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          `./vcpkg.exe fetch nuget | tail -n 1` \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/hpcc-systems/index.json"

      - name: "vcpkg package restore"
        working-directory: ./vcpkg
        shell: "bash"
        run: >
          ./vcpkg.exe install --keep-going icu zlib openssl libxslt winflexbison --triplet ${{ matrix.triplet }}

      - name: Windows compilation
        working-directory: .
        run: |
          mkdir build
          cd build
          cmake $Env:GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=..\vcpkg\scripts\buildsystems\vcpkg.cmake  -G "Visual Studio 16 2019" -T host=x64 -A x64 -DUSE_OPENLDAP=0 -DUSE_ICU=1 -DUSE_LIBXSLT=1 -DUSE_CBLAS=0 -DUSE_ZLIB=1 -DUSE_LIBARCHIVE=0 -DUSE_BOOST_REGEX=0 -DUSE_OPENSSL=1 -DUSE_APR=0 -DUSE_AZURE=0 -DUSE_AWS=0 -DWSSQL_SERVICE=0 -DUSE_PYTHON3=0 -DUSE_PYTHON2=0 -DUSE_CASSANDRA=0 -DUSE_TBB=0 -DUSE_JAVA=0 -DUSE_NATIVE_LIBRARIES=1 -DINCLUDE_CONFIG_MANAGER=0 -DINCLUDE_TREEVIEW=0 -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE
          cmake --build . --config Debug --target ALL_BUILD -- /maxcpucount:3
