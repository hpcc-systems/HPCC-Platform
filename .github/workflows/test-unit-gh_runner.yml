name: Unittest Package (gh-runner)

on:
  workflow_call:
    inputs:
      os:
        type: string
        description: 'Operating System'
        required: false
        default: 'ubuntu-22.04'
      asset-name:
        type: string
        description: 'Asset Name'
        required: false
        default: 'build-docker-package'
      dependencies:
        type: string
        description: 'Dependencies'
        required: false
        default: 'bison flex build-essential binutils-dev curl lsb-release libcppunit-dev python3-dev default-jdk r-base-dev r-cran-rcpp r-cran-rinside r-cran-inline libtool autotools-dev automake git cmake xmlstarlet'

jobs:

  main:
    runs-on: ${{ inputs.os }}
    steps:

      - name: Free additional disk space (remove Android SDK + Tools)
        run: |
          sudo rm -rf /usr/local/lib/android

      - name: Download Package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.asset-name }}
          path: ${{ inputs.asset-name }}

      - name: Install Dependencies
        shell: "bash"
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ inputs.dependencies }}
          sudo apt-get install -y gdb
          echo 'core_%e.%p' | sudo tee /proc/sys/kernel/core_pattern
          ulimit -c unlimited
          ulimit -c

      - name: Install Package
        shell: "bash"
        run: |
          sudo apt-get install -y -f ./${{ inputs.asset-name }}/*.deb
          sudo chown -R $USER:$USER /opt/HPCCSystems
          sudo chown -R $USER:$USER /var/*/HPCCSystems

      - name: Run Tests
        timeout-minutes: 10 # generous, expected time is approx 1 min.
        shell: "bash"
        run: |
          ulimit -c unlimited
          ulimit -c

          export LANG="en_US.UTF-8"
          sudo update-locale
          mkdir -p /home/runner/HPCCSystems-regression/log
          logFile="/home/runner/HPCCSystems-regression/log/unittests.log"
          echo "pwd: $(pwd)"
          while read test
          do
            echo "$test" | tee -a $logFile
            echo "--------------------------------------" | tee -a  $logFile
            /opt/HPCCSystems/bin/unittests -e "$test" 2>&1 | tee -a $logFile
            echo " " | tee -a $logFile
          done< <(/opt/HPCCSystems/bin/unittests -l | sort )

      - name: Check for Core files
        shell: "bash"
        run: |
          set +e     # Ignore intermediate error(s) in this step

          mkdir -p /home/runner/HPCCSystems-regression/log
          ls -l
          shopt -s nullglob
          CORE_FILES=(core_*)
          echo "NUM_OF_CORES=${#CORE_FILES[@]}" >> $GITHUB_ENV
          echo "NUM_OF_CORES=${#CORE_FILES[@]}"
          echo "cores: $(sudo find / -iname 'core_*.[0-9]*' -type f -print 2>&1 )"
          #CORE_FILES=$(sudo find / -iname 'core_*.[0-9]*' -type f -print)
          #echo "NUM_OF_CORES=${#CORE_FILES[@]}" >> $GITHUB_ENV
          #echo "NUM_OF_CORES=${#CORE_FILES[@]}"
          echo "${CORE_FILES[*]}"
          echo "Let's go...."
          if [[ ${#CORE_FILES[@]} -ne 0 ]]
          then
              mkdir -p $HOME/.config/gdb/
              echo "set auto-load safe-path /" >> $HOME/.config/gdb/gdbinit
              echo "set solib-search-path /" >> $HOME/.config/gdb/gdbinit
              echo "set sysroot /" >> $HOME/.config/gdb/gdbinit
              for core in ${CORE_FILES[@]}
              do
                  echo "$core"
                  coreName=${core##*/}
                  component=$( echo $coreName | tr '_.' ' ' | awk '{print $2 }' )
                  compNamePart=$( find /opt/HPCCSystems/bin/ -iname "$component*" -type f -print | head -n 1);
                  compName=${compNamePart##*/}
                  echo "component: '${component}', compName: '${compName}', core: '${core}'"
                  sudo gdb --batch --quiet -ex "set interactive-mode off" -ex "echo \n Backtrace for all threads\n==========================" -ex "thread apply all bt" -ex "echo \n Registers:\n==========================\n" -ex "info reg" -ex "echo \n Disas:\n==========================\n" -ex "disas" -ex "quit" "/opt/HPCCSystems/bin/${compName}" $core 2>&1 | sudo tee "$core.trace" 2>&1
                  sudo chown $USER:$USER $core.trace
                  ls -l $core.trace
                  cp -v "$core.trace" /home/runner/HPCCSystems-regression/log/ 
              done
              exit -1
          fi
          echo "  End."

      - name: unittests-logs-artifact
        if: ${{ failure() || cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-unit-${{ inputs.asset-name }}
          path: |
              /var/log/HPCCSystems
              /home/runner/HPCCSystems-regression
          if-no-files-found: error
