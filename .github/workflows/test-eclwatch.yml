name: Test ECL Watch (test-eclwatch.yml)

on:
  workflow_call:
    inputs:
      os:
        type: string
        description: 'Operating System'
        required: false
        default: 'ubuntu-22.04'
      asset-name:
        type: string
        description: 'Asset Name'
        required: false
        default: 'build-docker-package'
      dependencies:
        type: string
        description: 'Dependencies'
        required: false
        default: 'bison flex build-essential binutils-dev curl lsb-release libcppunit-dev python3-dev default-jdk r-base-dev r-cran-rcpp r-cran-rinside r-cran-inline libtool autotools-dev automake git cmake xmlstarlet'

jobs:

  build:
    name: "Test eclwatch"
    runs-on: ${{ inputs.os }}

    steps:

      - name: Download Package
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.asset-name }}
          path: ${{ inputs.asset-name }}

      - name: Install Package
        shell: "bash"
        run: |
          sudo apt-get install -y xmlstarlet
          sudo apt-get install -y -f ./${{ inputs.asset-name }}/*.deb
          sudo chown -R $USER:$USER /opt/HPCCSystems
          sudo xmlstarlet ed -L -u 'Environment/Software/ThorCluster/@slavesPerNode' -v 2 -u 'Environment/Software/ThorCluster/@channelsPerSlave' -v 1 /etc/HPCCSystems/environment.xml

      - name: Start HPCC-Platform
        shell: "bash"
        run: |
          export LANG="en_US.UTF-8"
          sudo update-locale
          sudo /etc/init.d/hpcc-init start

      - uses: actions/checkout@v4
          
      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        working-directory: ${{ github.workspace }}/esp/src
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ${{ github.workspace }}/esp/src
        run: CI=1 npx playwright install --with-deps

      - name: Set Server IP
        working-directory: ${{ github.workspace }}/esp/src
        run: |
          echo "http://localhost:8010" > lws.target.txt
          echo "" >> lws.target.txt

      - name: Test
        working-directory: ${{ github.workspace }}/esp/src
        run: npm run test-ci

      - name: Upload Playwright test results
        if: ${{ failure() || cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: eclwatch-test-results
          path: ${{ github.workspace }}/esp/src/test-results/*
