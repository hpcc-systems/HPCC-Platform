name: Docker target branch build
on:
  push:
    branches:
      - "master"
      - "candidate-*.x"
      - "!candidate-8.2.*"
      - "!candidate-8.0.*"
      - "!candidate-7.12.*"
      - "!candidate-7.10.*"
      - "!candidate-7.8.*"
      - "!candidate-7.6.*"
      - "!candidate-7.4.*"
      - "!candidate-7.2.*"
      - "!candidate-7.0.*"
      - "!candidate-6.*"

jobs:
  check-skip:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-20.04
    # Map a step output to a job output
    outputs:
      changed: ${{ steps.skip_check.outputs.dockerfiles || steps.skip_check.outputs.platform }}
    steps:
      - id: skip_check
        uses: hpcc-systems/github-actions/changed-modules@main
        with:
          github_token: ${{ github.token }}

  build-images:
    needs: check-skip
    if: ${{ needs.check-skip.outputs.changed }}
    runs-on: ubuntu-20.04
    steps:
      - name: vars
        id: vars
        run: |
          echo ::set-output name=base_ver::8.6
          # echo ::set-output name=container_registry::ghcr.io
          # echo ::set-output name=cr_user::${{ github.repository_owner }}
          echo ::set-output name=container_registry::docker.io
          echo ::set-output name=cr_user::${{ secrets.DOCKER_USERNAME }}
          echo ::set-output name=build_base_sha::${{ github.sha }}
          echo ::set-output name=build_base_label::${GITHUB_REF##*/}
          echo ::set-output name=build_user::${{ github.actor }}
          echo ::set-output name=build_type::RelWithDebInfo
          echo ::set-output name=use_cppunit::1
          echo ::set-output name=platform_build_base::smoketest-platform-build-base
          echo ::set-output name=platform_build::smoketest-platform-build-vcpkg

      - name: tracing
        run: |
          echo "Action     = ${{ github.action }}"
          echo "Event      = ${{ github.event_name }}"
          echo "Actor      = ${{ github.actor }}"
          echo "Ref        = ${{ github.ref }}"
          echo "Sha        = ${{ github.sha }}"
          echo "github.repository = ${{ github.repository }}"
          echo "repository_owner = ${{ github.repository_owner }}"
          echo "github.workspace = ${{ github.workspace }}"
          echo "runner.workspace = ${{ runner.workspace }}"
          echo "build_base_sha = ${{ steps.vars.outputs.build_base_sha }}"
          echo "build_base_label = ${{ steps.vars.outputs.build_base_label }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check if build-base image prebuilt
        id: check-images
        run: |
          build_base_missing=$(docker manifest inspect ${{ steps.vars.outputs.container_registry }}/${{ steps.vars.outputs.cr_user }}/${{ steps.vars.outputs.platform_build_base }}:${{ steps.vars.outputs.base_ver }} > /dev/null ; echo $?)
          echo build_base_missing=${build_base_missing}
          echo ::set-output name=build_base_missing::${build_base_missing}

      # build build-base only if missing
      - name: HPCC build-base image
        if: ${{ steps.check-images.outputs.build_base_missing == '1' }}
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/platform-build-base
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ steps.vars.outputs.container_registry }}/${{ steps.vars.outputs.cr_user }}/${{ steps.vars.outputs.platform_build_base }}:${{ steps.vars.outputs.base_ver }}
          push: true
          build-args: |
            BASE_VER=${{ steps.vars.outputs.base_ver }}

      # build branch image
      - name: branch image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfiles/platform-build/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            ${{ steps.vars.outputs.container_registry }}/${{ steps.vars.outputs.cr_user }}/${{ steps.vars.outputs.platform_build }}:${{ steps.vars.outputs.build_base_label }}-${{ steps.vars.outputs.build_base_sha }}
            ${{ steps.vars.outputs.container_registry }}/${{ steps.vars.outputs.cr_user }}/${{ steps.vars.outputs.platform_build }}:${{ steps.vars.outputs.build_base_label }}-latest
          push: true
          build-args: |
            CR_USER=${{ steps.vars.outputs.cr_user }}
            CR_REPO=${{ steps.vars.outputs.container_registry }}
            CR_CONTAINER_NAME=${{ steps.vars.outputs.platform_build_base }}
            BASE_VER=${{ steps.vars.outputs.base_ver }}
            BUILD_USER=${{ github.repository_owner }}
            BUILD_TAG=${{ steps.vars.outputs.build_base_sha }}
            BUILD_TYPE=${{ steps.vars.outputs.build_type }}
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN}}
            NUGET_ACTOR=${{ secrets.LNB_ACTOR }}
            NUGET_TOKEN=${{ secrets.LNB_TOKEN }}
            USE_CPPUNIT=${{ steps.vars.outputs.use_cppunit }}
            BUILD_THREADS=${{ steps.vars.outputs.build_threads }}
