name: UI test Package (gh-runner)

on:
  workflow_call:
    inputs:
      os:
        type: string
        description: 'Operating System'
        required: false
        default: 'ubuntu-22.04'
      asset-name:
        type: string
        description: 'Asset Name'
        required: false
        default: 'build-docker-package'
      dependencies:
        type: string
        description: 'Dependencies'
        required: false
        default: 'bison flex build-essential binutils-dev curl lsb-release libcppunit-dev python3-dev default-jdk r-base-dev r-cran-rcpp r-cran-rinside r-cran-inline pkg-config libtool autotools-dev automake git cmake xmlstarlet'

jobs:

  main:
    timeout-minutes: 30 # the ui-tests run step has its own timeout, however the job can sometimes take time to download dependencies
    runs-on: ${{ inputs.os }}
    steps:

      - name: Free additional disk space (remove Android SDK + Tools)
        run: |
          sudo rm -rf /usr/local/lib/android

      - name: Download UI Test Files
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.asset-name }}-ecl_watch_ui_tests
          path: ${{ inputs.asset-name }}-ecl_watch_ui_tests

      - name: Check ECLWatch UI Test Directory
        id: check
        run: |
          if [[ ! -d ${{ inputs.asset-name }}-ecl_watch_ui_tests ]]
          then
              echo "ECLWatch UI ${{ inputs.asset-name }}-ecl_watch_ui_tests directory missing."
          else
              javaFilesCount=$(find ${{ inputs.asset-name }}-ecl_watch_ui_tests/ -iname '*.java' -type f -print | wc -l )
              echo "Number of test java files is $javaFilesCount"
              if [[ ${javaFilesCount} -eq 0 ]]
              then
                echo "No java files, do nothing."
              else
                echo "runtests=true" >> $GITHUB_OUTPUT
              fi
          fi

      - name: Install Dependencies
        if: steps.check.outputs.runtests
        shell: "bash"
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            wget \
            net-tools \
            tzdata \
            unzip \
            xvfb \
            libxi6 \
            default-jdk \
            gdb \
            ${{ inputs.dependencies }}

      - name: Download Package
        if: steps.check.outputs.runtests
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.asset-name }}
          path: ${{ inputs.asset-name }}

      - name: Download Support Files
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.asset-name }}-support-files
          path: ${{ inputs.asset-name }}-support-files

      - name: Install Package
        if: steps.check.outputs.runtests
        shell: "bash"
        run: |
          sudo apt-get install -y -f ./${{ inputs.asset-name }}/*.deb
          sudo chown -R $USER:$USER /opt/HPCCSystems

          sudo xmlstarlet ed -L -u 'Environment/Software/ThorCluster/@slavesPerNode' -v 2 -u 'Environment/Software/ThorCluster/@channelsPerSlave' -v 1 /etc/HPCCSystems/environment.xml

          chmod +x ./${{ inputs.asset-name }}-support-files/*
          sudo cp ./${{ inputs.asset-name }}-support-files/* /opt/HPCCSystems/bin

          chmod +x ./${{ inputs.asset-name }}-ecl_watch_ui_tests/*

      - name: Start HPCC-Platform
        shell: "bash"
        run: |
          export LANG="en_US.UTF-8"
          sudo update-locale
          sudo /etc/init.d/hpcc-init start

      - name: Run Setup
        working-directory: /opt/HPCCSystems/testing/regress
        shell: "bash"
        run: |
          /opt/HPCCSystems/bin/timeoutcmd $((8 * 60)) \
              ./ecl-test setup --preAbort '/opt/HPCCSystems/bin/smoketest-preabort.sh' --pq 2 --generateStackTrace
          grep Failure: /home/runner/HPCCSystems-regression/log/setup_*.log
          if [[ "$(grep -ohP '(?<=^Failure: )[0-9]+$' /home/runner/HPCCSystems-regression/log/setup_*.log | awk '{s+=$1} END {print s}')" -gt 0 ]]; then exit 1; fi

      - name: Run spray tests
        working-directory: /opt/HPCCSystems/testing/regress
        shell: "bash"
        run: |
          # force regression suite to timeout after 28 minutes, so it captures ZAP report of any inflight hung queries
           /opt/HPCCSystems/bin/timeoutcmd $((28 * 60)) \
           ./ecl-test query --preAbort /opt/HPCCSystems/bin/smoketest-preabort.sh --pq 2 --excludeclass python2,embedded-r,embedded-js,3rdpartyservice,mongodb --generateStackTrace *spray*
           # In this stage we don't care about the test results

      - name: Get content
        working-directory:  /home/runner/HPCCSystems-regression/log
        shell: "bash"
        run: |
                curl localhost:8010/WsWorkunits/WUQuery.json | python3 -m json.tool > workunits.json
                curl localhost:8010/WsDfu/DFUQuery.json?PageSize=250 | python3 -m json.tool > files.json
                curl localhost:8010/FileSpray/GetDFUWorkunits.json | python3 -m json.tool > dfu-workunits.json

      - name: Install UI Dependencies
        if: steps.check.outputs.runtests
        shell: "bash"
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/chromedriver
          sudo chown root:root /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          wget https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar
          wget https://repo1.maven.org/maven2/org/testng/testng/7.7.1/testng-7.7.1.jar
          wget https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.17.0/jackson-annotations-2.17.0.jar
          wget https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.17.0/jackson-core-2.17.0.jar
          wget https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.17.0/jackson-databind-2.17.0.jar
          wget https://repo1.maven.org/maven2/com/beust/jcommander/1.82/jcommander-1.82.jar
          wget https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.17.0/selenium-server-4.17.0.jar
          java -jar selenium-server-4.17.0.jar standalone &

      - name: Run ECL Watch UI Tests
        timeout-minutes: 80 # generous, current runtime is ~38 minutes, this should be increased if new tests are added
        if: steps.check.outputs.runtests
        shell: "bash"
        run: |
          export CLASSPATH=".:${{ github.workspace }}/selenium-server-4.17.0.jar:${{ github.workspace }}/testng-7.7.1.jar:${{ github.workspace }}/jackson-annotations-2.17.0.jar:${{ github.workspace }}/jackson-core-2.17.0.jar:${{ github.workspace }}/jackson-databind-2.17.0.jar:${{ github.workspace }}/jcommander-1.82.jar"
          pushd ${{ inputs.asset-name }}-ecl_watch_ui_tests
          find -iname '*.java' -type f -exec javac {} \;
          java TestRunner detail
          echo "ECL Watch UI test done"
          lines=$(wc -l < error_ecl_test.log)
          [[ $lines -ne 0 ]] && exit 1
          popd

      - name: Upload ECL Watch UI Test Logs To Artifact
        if: ${{ failure() || cancelled() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.asset-name }}-ecl_watch_ui_tests
          path: |
            ${{ inputs.asset-name }}-ecl_watch_ui_tests/*.log
            /home/runner/HPCCSystems-regression/log/*.json
          if-no-files-found: error
