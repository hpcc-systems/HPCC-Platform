{{ range $.Values.esp -}}
{{- if not .disabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name | quote }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ .name | quote }}
  template:
    metadata:
      labels:
        run: {{ .name | quote }}
    spec:
      containers:
      - name: {{ .name | quote }}
        args: [
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }}
              ]
{{- include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{ include "hpcc.addImageAttrs" (dict "root" $ "me" . "imagename" "esp") | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
{{ include "hpcc.addDataVolumeMount" . | indent 8 }}
{{ include "hpcc.addDllserverVolumeMount" . | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addDataVolume" $ | indent 6 }}
{{ include "hpcc.addDllserverVolume" $ | indent 6 }}
---
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: {{ .name }}-configmap 
data:
  {{ .name }}.yaml: |
    version: 1.0
    esp:
{{ toYaml . | indent 6 }}
      queues:
{{ include "hpcc.generateConfigMapQueues" $ | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  ports:
  - port: 8010
    protocol: TCP
    targetPort: 8010
  selector:
    run: {{ .name | quote }}
  type: LoadBalancer
{{- end }}
{{- end }}
