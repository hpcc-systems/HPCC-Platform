################################################################################
#    HPCC SYSTEMS software Copyright (C) 2019 HPCC SystemsÂ®.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
################################################################################


# Component: azureapi
#####################################################
# Description:
# ------------
#    Cmake Input File for azure direct reading hook
#####################################################

if (NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 7.0.0)
  set(EXTERNAL_AZURE_CXX_FLAGS "-fno-sanitize=all" )
endif()

find_package(azure-storage-blobs-cpp CONFIG REQUIRED)
find_package(azure-storage-files-shares-cpp CONFIG REQUIRED)
find_package(azure-storage-common-cpp CONFIG REQUIRED)
find_package(azure-identity-cpp CONFIG REQUIRED)

# Check if WorkloadIdentityCredential is available (added in azure-identity-cpp 1.6.0)
if(azure-identity-cpp_VERSION VERSION_GREATER_EQUAL "1.6.0")
    set(AZURE_HAS_WORKLOAD_IDENTITY_CREDENTIAL TRUE)
else()
    set(AZURE_HAS_WORKLOAD_IDENTITY_CREDENTIAL FALSE)
endif()

project( azureapi )
SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${STRICT_CXX_FLAGS}")

set (   SRCS
        azureblob.cpp
        azureblob.hpp
        azurefile.cpp
        azurefile.hpp
        azureapi.cpp
        azureapi.hpp
        azureapiutils.cpp
        azureapiutils.hpp
    )

include_directories (
        ${HPCC_SOURCE_DIR}/system/include
        ${HPCC_SOURCE_DIR}/system/jlib
    )

ADD_DEFINITIONS( -D_USRDLL -DAZURE_API_EXPORTS )

if(AZURE_HAS_WORKLOAD_IDENTITY_CREDENTIAL)
    ADD_DEFINITIONS( -DAZURE_HAS_WORKLOAD_IDENTITY_CREDENTIAL )
    message(STATUS "Azure WorkloadIdentityCredential support: ENABLED")
else()
    message(STATUS "Azure WorkloadIdentityCredential support: DISABLED (SDK < 1.6.0)")
endif()

HPCC_ADD_LIBRARY( azurefile SHARED ${SRCS}  )
install ( TARGETS azurefile DESTINATION filehooks CALC_DEPS)

target_link_libraries ( azurefile
        jlib
        CURL::libcurl
        Azure::azure-storage-common
        Azure::azure-storage-blobs
        Azure::azure-storage-files-shares
        Azure::azure-identity
    )
