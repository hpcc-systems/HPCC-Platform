eck-stack:
  eck-elasticsearch:
    enabled: true
    # Name of the Elasticsearch instance.
    #
    fullnameOverride: elasticsearch
    nodeSets:
    - name: default
      count: 1
      # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
      # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
      # and leave node.store.allow_mmap unset.
      # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
      #
      config:
        node.store.allow_mmap: false
  eck-apm-server:
    ssl.verification_mode: none
    enabled: true
    # Count of APM Server replicas to create.
    #
    count: 1
    # Reference to ECK-managed Elasticsearch resource.
    #
    elasticsearchRef:
      name: elasticsearch
    kibanaRef:
      name: kibana
    spec:
      config:
        output:
          elasticsearch:
            username: "elastic"
            protocol: "https"
            ssl.verification_mode: "none"
    http:
      service:
        spec:
          ports:
          - name: http
            port: 8200
            targetPort: 8200
  eck-kibana:
    enabled: true
    # Name of the Kibana instance.
    #
    fullnameOverride: kibana
    spec:
      config:
        xpack.fleet.packages:
        - name: apm
          version: latest
    http:
      service:
        metadata:
          annotations:
            hpcc.eclwatch.io/enabled: "true"
            #Optional but informative
            hpcc.eclwatch.io/description: "Provides Observability Management"
            hpcc.eclwatch.io/label : "HPCC Observability (tracing) on Kibana"
            hpcc.eclwatch.io/path: "/app/apm/traces/explorer/waterfall?comparisonEnabled=false&detailTab=timeline&environment=ENVIRONMENT_ALL&rangeFrom=now-1h&rangeTo=now&showCriticalPath=false&traceId={trace_id}&type=kql"
            hpcc.eclwatch.io/resource.type: "TRACES"
        spec:
          type: LoadBalancer # default is ClusterIP
    ingress:
      annotations: {}
      enabled: true
      hosts:
      - host: localhost
        path: /
      labels: {}
      pathType: Prefix
      tls:
        enabled: false
  eck-beats:
    enabled: true
    metadata:
      name: filebeat
    spec:
      type: filebeat
      elasticsearchRef:
        name: elasticsearch
      kibanaRef:
        name: kibana
      config:
        filebeat.inputs:
        - type: filestream
          paths:
          #Edit this list of paths to match your HPCC cluster component names
          - /var/log/containers/esdl-sandbox-*.log
          - /var/log/containers/eclwatch-*.log
          - /var/log/containers/mydali-*.log
          - /var/log/containers/eclqueries-*.log
          - /var/log/containers/sql2ecl-*.log
          - /var/log/containers/eclservices-*.log
          - /var/log/containers/dfuserver-*.log
          - /var/log/containers/eclscheduler-*.log
          - /var/log/containers/hthor-*.log
          - /var/log/containers/myeclccserver-*.log
          - /var/log/containers/roxie-*.log
          - /var/log/containers/sasha-*.log
          - /var/log/containers/thor-*.log
          - /var/log/containers/spray-service-*.log
          - /var/log/containers/dfs-*.log
          prospector:
            scanner:
              fingerprint.enabled: true
              symlinks: true
          file_identity.fingerprint: ~
          multiline.type: pattern
          multiline.pattern: '^([A-Z-0-9]{8})\s+'
          multiline.negate: true
          multiline.match: after
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
#        - add_host_metadata: {}
#        - add_cloud_metadata: {}
    daemonSet:
      podTemplate:
        spec:
          serviceAccount: elastic-beat-filebeat
          automountServiceAccountToken: true
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirstWithHostNet
          hostNetwork: true # Allows to provide richer host metadata
          containers:
          - name: filebeat
            securityContext:
              runAsUser: 0
              runAsGroup: 0
              capabilities:
                add:
                  - SYS_ADMIN
            volumeMounts:
            - name: varlogcontainers
              mountPath: /var/log/containers
            - name: varlogpods
              mountPath: /var/log/pods
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumes:
          - name: varlogcontainers
            hostPath:
              path: /var/log/containers
          - name: varlogpods
            hostPath:
              path: /var/log/pods
          - name: varlibdockercontainers
            hostPath:
              path: /var/lib/docker/containers
opentelemetry-collector:
  mode: daemonset
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 400Mi
  image:
    repository: otel/opentelemetry-collector-k8s
    tag: "0.123.0"
  extraEnvs:
    - name: ELASTIC_APM_SECRET_TOKEN
      valueFrom:
        secretKeyRef:
          name: eck-apm-eck-apm-server-apm-token
          key: secret-token
  extraVolumes:
  - name: apm-certs
    secret:
      defaultMode: 420
      optional: false
      secretName: eck-apm-eck-apm-server-apm-http-certs-public 
  extraVolumeMounts:
  - name: apm-certs
    mountPath: /etc/ca-certificates/tls.crt
    subPath: tls.crt
    readOnly: true
# Enable Kubernetes attributes enrichment
  presets:
    kubernetesAttributes:
      enabled: true

# Collector configuration
  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
            cors:
              allowed_origins:
                - http://*
                - https://*

    processors:
      batch:
        send_batch_size: 8192
        timeout: 5s
      memory_limiter:
        check_interval: 5s
        limit_mib: 800
        spike_limit_mib: 150
      k8sattributes: # Processor to enrich spans with Kubernetes attributes
        passthrough: false # If set to true, the processor will not enrich the spans with Kubernetes attributes.
        extract:
          metadata:
          - k8s.pod.name
          #- k8s.namespace.name
          #- k8s.node.name
          #- k8s.pod.uid
          #- k8s.pod.start_time
          #- k8s.deployment.name
          #- k8s.statefulset.name
          #- k8s.daemonset.name
          #- k8s.cronjob.name
          #- k8s.job.name
          #- k8s.container.name
          #- k8s.cluster.name

    exporters:
      #Full otlphttp config options documented here: https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlphttpexporter/config.go
      otlphttp:
        endpoint: https://eck-apm-eck-apm-server-apm-http.default.svc:8200
        headers:
          Authorization: "Bearer ${env:ELASTIC_APM_SECRET_TOKEN}"
        tls:
          ca_file: "/etc/ca-certificates/tls.crt"

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch, k8sattributes]
          exporters: [otlphttp]
  service:
  # Enable the creation of a Service.
  # By default, it's enabled on mode != daemonset.
  # However, to enable it on mode = daemonset, its creation must be explicitly enabled
    enabled: true

    type: LoadBalancer
    # trafficDistribution: PreferClose

