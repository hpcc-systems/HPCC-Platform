{{/*

---  DO NOT EDIT THIS FILE - all configuration of HPCC platform should be done via values.yaml ----
  
##############################################################################

    HPCC SYSTEMS software Copyright (C) 2021 HPCC SystemsÂ®.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
##############################################################################

*/}}
{{- $egress := (.Values.global.egress | default dict) -}}
{{- $egressRestricted := $egress.restricted | default false -}}
{{- $metrics := .Values.global.metrics -}}
---
##
## Default to no ingress, and egress only to dns servers
## 
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all-but-dns
spec:
  podSelector: {}
  policyTypes:
  - Ingress
{{- if $egressRestricted }}
  - Egress
  egress:
  - to:
 {{- if hasKey $egress "kubeSystemLabel" }}
    - namespaceSelector:
        matchLabels:
          name: {{ $egress.kubeSystemLabel }}
 {{- end }}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
##
## Pods that launch k8s jobs need access to k8s API server
## 
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1 
metadata:
  name: allow-apiserver
spec:
  policyTypes:
  - Egress
  podSelector: {}
  egress:
  - to:
 {{- if hasKey $egress "kubeApiCidr" }}
    - ipBlock:
        cidr: {{ $egress.kubeApiCidr | quote }}
 {{- end }}
    ports:
    - protocol: TCP
 {{- if hasKey $egress "kubeApiPort" }}
      port: {{ $egress.kubeApiPort }}
 {{- end }}
{{- end }}
---
##
## Many pods need access to dali
## 
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dali-server
spec:
  podSelector:
    matchLabels:
      app: dali
  ingress:
  - from:
    - podSelector:
        matchLabels:
          accessDali: "yes"
  egress:
  - to:
    - podSelector:
        matchLabels:
          accessDali: "yes"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dali-client
spec:
  podSelector:
    matchLabels:
      accessDali: "yes"
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: dali
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: dali
---
##
## Pods that run workunits, or which need to do DFU lookups, are allowed to access espservices
## 
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: esp-server
spec:
  podSelector:
    matchLabels:
      app: eclservices
  ingress:
  - from:
    - podSelector:
        matchLabels:
          accessEsp: "yes"
  egress:
  - to:
    - podSelector:
        matchLabels:
          accessEsp: "yes"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: esp-client
spec:
  podSelector:
    matchLabels:
      accessEsp: "yes"
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: eclservices
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: eclservices
---
##
## Provides access to pods labeled prometheusMetricsReporter: "yes"
## onto port declared in global.metrics.sinks[type=prometheus].configuration.port
## Only created if global.metrics.sinks[type=prometheus].settings.autodiscovery true
{{- if hasKey $metrics "sinks" }}
 {{ range $sink := $metrics.sinks -}}
  {{- if eq (get $sink "type") "prometheus" }}
   {{- if and (hasKey $sink "settings") (hasKey $sink.settings "autodiscovery") }}
    {{- if (eq $sink.settings.autodiscovery true ) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: hpcc-metrics-prometheus
spec:
  podSelector:
    matchLabels:
      prometheusMetricsReporter: "yes"
  ingress:
  - ports:
    - port: {{ $sink.settings.port | default 8767 }}
     {{ end }}
    {{ end }}
   {{ end }}
  {{ end }}
{{ end}}
