{{/*
Dafilesrv configmap
Pass in dict with root and me
*/}}
{{- define "hpcc.dafilesrvConfigMap" -}}
apiVersion: v1 
metadata:
  name: {{ .me.name }}-configmap 
data:
  {{ .me.name }}.yaml:
    version: 1.0
    dafilesrv:
{{ toYaml (omit .me "logging" "env") | indent 6 }}
{{- include "hpcc.generateLoggingConfig" . | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}


{{ range $.Values.dafilesrv -}}
{{- if not .disabled -}}
{{- $env := concat ($.Values.global.env | default list) (.env | default list) -}}
{{- $commonCtx := dict "root" $ "me" . "env" $env "exposure" "local" "visibility" .service.visibility "includeCategories" (list "data" "debug") -}}
{{- if (eq "spray" .application) -}}
 {{- $_ := set $commonCtx "includeCategories" (append $commonCtx.includeCategories "lz") -}}
{{- end -}}
{{- $_ := set $commonCtx "certificatesEnabled" (($.Values.certificates | default dict).enabled) -}}
{{- if $commonCtx.certificatesEnabled -}}
 {{- $externalCert := ne (include "hpcc.isVisibilityPublic" $commonCtx) "" -}}
 {{- $issuerName := ternary "public" "local" $externalCert -}}
 {{- $issuer := get $.Values.certificates.issuers $issuerName -}}
 {{- if $issuer }}
  {{- $_ := set $commonCtx "exposure" (ternary "public" "local" $externalCert) -}}
 {{ else }}
  {{- $_ := fail (printf "dafilesrv - unable to locate issuer '%s'" $issuerName) -}}
 {{ end }}
{{ end }}
{{- $configSHA := include "hpcc.getConfigSHA" ($commonCtx | merge (dict "configMapHelper" "hpcc.dafilesrvConfigMap" "component" "dafilesrv" "excludeKeys" "global")) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name | quote }}
spec:
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      server: {{ .name | quote }}
  template:
    metadata:
      labels:
        {{- include "hpcc.addStandardLabels" (dict "root" $ "component" "dafilesrv" "name" "dafilesrv" "instance" .name) | indent 8 }}
        server: {{ .name | quote }}
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      {{- include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" .name "type" "dafilesrv") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers:
      {{- include "hpcc.changePlaneMountPerms" $commonCtx | indent 6 }}
      {{- include "hpcc.addImagePullSecrets" $commonCtx | nindent 6 -}}
      containers:
      - name: {{ .name | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ {{ include "hpcc.componentCommand" (dict "me" . "root" $ "process" "dafilesrv") }} ] 
        args: [ {{- include "hpcc.componentStartArgs" (dict "me" . "root" $ "process" "dafilesrv") | nindent 16 }}
                {{ include "hpcc.configArg" . }}
              ]
        env:
{{ include "hpcc.mergeEnvironments" $env | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ .name }}.sentinel"
{{ include "hpcc.addSentinelProbes" . | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- include "hpcc.addResources" (dict "me" .resources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" . | indent 8 }}
{{ include "hpcc.addVolumeMounts" $commonCtx | indent 8 }}
{{- if $commonCtx.certificatesEnabled }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "name" .name "component" "dafilesrv" "certificate" .certificate "visibility" .service.visibility) | indent 8 }}
{{- else }}
 {{- if eq .application "stream" }}
  {{- $_ := fail (printf "dafilesrv[application=stream]- certificates must be enabled to use") -}}
 {{- end }}
{{- end }}
      volumes:
{{ include "hpcc.addConfigMapVolume" . | indent 6 }}
{{ include "hpcc.addVolumes" $commonCtx | indent 6 }}
{{- if $commonCtx.certificatesEnabled }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "name" .name "component" "dafilesrv" "certificate" .certificate "visibility" .service.visibility) | indent 6 }}
{{- end }}
---
kind: ConfigMap 
{{ include "hpcc.generateConfig" ($commonCtx | merge (dict "configMapHelper" "hpcc.dafilesrvConfigMap")) }}
---
{{- $service := deepCopy .service -}}
{{- if not (hasKey $service "labels") -}}
 {{- $_ := set $service "labels" dict -}}
{{- end -}}
{{- $_ := set $service "labels" (merge $service.labels (dict "server" .name)) -}}
{{ include "hpcc.addService" ( dict "root" $ "name" .name "service" $service "selector" .name "defaultPort" 7600 ) }}
---
{{ include "hpcc.addCertificate" (dict "root" $ "name" .name "service" .service "component" "dafilesrv" "visibility" .service.visibility) }}
{{- end }}
{{- end }}
