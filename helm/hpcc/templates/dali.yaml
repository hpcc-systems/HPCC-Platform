{{ range $dali := $.Values.dali -}}
{{- if not $dali.disabled -}}
{{- $commonCtx := dict "root" $ "me" $dali }}
{{- $sashaServices := $dali.services | default dict -}}
{{- $daliSecretsCategories := list "system" }}
{{- $tmpDaliScope := dict "aggregateSashaSecretsCategories" list "aggregateSashaAccess" list -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $dali.name | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: {{ $dali.name | quote }}
      app: dali
  template:
    metadata:
      labels:
        run: {{ $dali.name | quote }}
        app: dali
    spec:
      {{- include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $dali.name "type" "dali") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers: 
        {{- include "hpcc.checkDaliMount" (dict "root" $) | indent 6 }}
      containers:
      - name: {{ $dali.name | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ daserver ] 
        args: [
                {{ include "hpcc.configArg" $dali }}
              ]
{{ include "hpcc.addSentinelProbes" $dali | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- include "hpcc.addResources" (dict "me" $dali.resources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $dali | indent 8 }}
{{ include "hpcc.addDaliVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "secretsCategories" $daliSecretsCategories) | indent 8 }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "name" .name "component" "dali" "external" false) | indent 8 }}
{{- if not $sashaServices.disabled -}}
{{- range $sashaName, $_sasha := $dali.services -}}
{{- $sasha := ($_sasha | default dict) -}}
{{- if not $sasha.disabled -}}
{{- $_ := set $sasha "name" $sashaName -}}
{{- $sashaAccess := splitList " " (include "hpcc.getSashaServiceAccess" $sasha) -}}
{{- $sashaServiceSecretsCategories := append ((or (has "data" $sashaAccess) (has "dalidata" $sashaAccess)) | ternary (list "storage") list) "system" -}}
{{- $_ := set $tmpDaliScope "aggregateSashaAccess" ((concat $tmpDaliScope.aggregateSashaAccess $sashaAccess) | uniq) -}}
{{- $_ := set $tmpDaliScope "aggregateSashaSecretsCategories" ((concat $tmpDaliScope.aggregateSashaSecretsCategories $sashaServiceSecretsCategories) | uniq) -}}
{{- with ($sasha | merge (dict "access" $sashaAccess)) -}}
{{ include "hpcc.addSashaContainer" (dict "root" $ "me" . "dali" $dali) | indent 6 }}
        volumeMounts:
{{- include "hpcc.addSashaVolumeMounts" (dict "root" $ "me" .) | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" (dict "root" $ "secretsCategories" $sashaServiceSecretsCategories) | indent 8 }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
      volumes:
{{ include "hpcc.addConfigMapVolume" $dali | indent 6 }}
{{- if not $sashaServices.disabled -}}
{{- range $sashaName, $_sasha := $sashaServices -}}
{{- $sasha := ($_sasha | default dict) -}}
{{- if not $sasha.disabled -}}
{{- $_ := set $sasha "name" $sashaName -}}
{{- include "hpcc.addSashaVolumes" (dict "root" $ "me" $sasha) | indent 6 }}
{{- end }}
{{- end }}
{{- end }}
{{ include "hpcc.addDaliVolume" $commonCtx | indent 6 }}
{{- if has "data" $tmpDaliScope.aggregateSashaAccess }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6}}
{{- end }}
{{- if has "dll" $tmpDaliScope.aggregateSashaAccess }}
{{ include "hpcc.addDllVolume" $commonCtx | indent 6 -}}
{{- end -}}
{{- include "hpcc.addSecretVolumes" (dict "root" $ "secretsCategories" $tmpDaliScope.aggregateSashaSecretsCategories) | indent 6 }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "name" .name "component" "dali" "external" false) | indent 6 }}
---
{{- $storage := ($.Values.storage | default dict) -}}
{{- $daliStorage := ($storage.daliStorage | default dict) }}
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: {{ $dali.name }}-configmap 
data:
  {{ $dali.name }}.yaml: |
    version: "1.0"
    dali:
{{ toYaml (omit $dali "logging" "services") | indent 6 }}
      dataPath: {{ include "hpcc.getVolumeMountPrefix" (dict "root" $ "me" $daliStorage "path" "dalistorage") }}
{{- include "hpcc.generateLoggingConfig" $commonCtx | indent 6 }}
{{ include "hpcc.generateVaultConfig" (dict "root" $ "secretsCategories" $daliSecretsCategories ) | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" $ | indent 6 }}
---
{{- if not $sashaServices.disabled -}}
{{- range $sashaName, $_sasha := $sashaServices -}}
{{- $sasha := ($_sasha | default dict) -}}
{{- if not $sasha.disabled -}}
{{- $_ := set $sasha "name" $sashaName -}}
kind: ConfigMap
{{- with ($sasha | merge (pick $dali "logging") | merge (dict "inDaliPod" true "access" (splitList " " (include "hpcc.getSashaServiceAccess" $sasha)))) -}}
{{- $sashaSecretsCategories := append ((or (has "data" .access) (has "dalidata" .access)) | ternary (list "storage") list) "system" -}}
{{ include "hpcc.generateConfig" (dict "root" $ "me" . "secretsCategories" $sashaSecretsCategories "configMapHelper" "hpcc.sashaConfigMap") }}
{{- end }}
---
{{- if $sasha.servicePort -}}
{{ include "hpcc.addSashaService" (dict "root" $ "me" $sasha) }}
---
{{- end }}

{{- if $sasha.storage }}
{{- if and (not $sasha.storage.existingClaim) (not $sasha.storage.plane) }}
{{ include "hpcc.addPVC" (dict "root" $ "name" (printf "sasha-%s" $sashaName) "me" $sasha.storage) }}
{{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  ports:
  - port: 7070
    protocol: TCP
    targetPort: 7070
  selector:
    run: {{ .name | quote }}
  type: ClusterIP
---
{{ include "hpcc.addCertificate" (dict "root" $ "name" .name "service" . "component" "dali" "external" false) }}

{{- $storage := ($.Values.storage | default dict) -}}
{{- $daliStorage := ($storage.daliStorage | default dict) -}}
{{- if (and (not $daliStorage.existingClaim) (not $daliStorage.plane)) }}
{{- $services := (.services | default dict) -}}
{{- $modeForCoalescer := (hasKey $services "coalescer") | ternary "ReadWriteOnce" "ReadWriteMany" -}}
{{- include "hpcc.addPVC" (dict "root" $ "name" "dalistorage" "mode" $modeForCoalescer "me" $daliStorage) -}}
{{- end }}
{{- end }}
{{- end }}
