{{/*

---  DO NOT EDIT THIS FILE - all configuration of HPCC platform should be done via values.yaml ----
  
##############################################################################

    HPCC SYSTEMS software Copyright (C) 2021 HPCC SystemsÂ®.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
##############################################################################

*/}}

{{/*
roxie configmap
Pass in dict with root and me
*/}}
{{- define "hpcc.roxieConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .me.name }}-configmap
data:
  {{ .me.name }}.yaml:
    version: 1.0
    roxie:
{{-  $root := .root -}}
{{-  $component := .me }}
      services:
{{-  range $service := .me.services }}
      - name: {{ $service.name }}
{{    toYaml (omit $service "tls" "name") | indent 8 }}
{{-   if ne (int $service.servicePort) 0 }}
{{-    include "hpcc.addTLSServiceEntries" (dict "root" $root "service" $service "component" $component "visibility" $service.visibility "remoteClients" $service.remoteClients "trustClients" $service.trustClients "includeTrustedPeers" true "incluedRoxieAndEspServices" true) | indent 6 }}
{{-   end }}
{{-  end }}
{{   toYaml ( omit .me "logging" "tracing" "topoServer" "encryptInTransit" "env" "services") | indent 6 }}
      numChannels: {{ .numChannels }}
      topologyServers: "{{ .toponame }}:{{ .topoport }}"
      heartbeatInterval: {{ .heartbeatInterval }}
      resolveLocally: false
{{-  $mtlsEnabled := (eq (include "hpcc.isMtlsEnabled" (dict "root" .root)) "true") -}}
{{/* By default use encryption if local certificates are enabled, but allow it to be turned off via roxie .encryptInTransit value */}}
{{-  if (hasKey .me "encryptInTransit") -}}
{{-   if and (.me.encryptInTransit) (not $mtlsEnabled) -}}
{{-    $_ := fail (printf "Roxie %s encryptInTransit requires local cert-manager configuration." .me.name ) }}
{{-   end }}
      encryptInTransit: {{ .me.encryptInTransit }}
{{   else }}
      encryptInTransit: {{ $mtlsEnabled }}
{{   end -}}
{{-  include "hpcc.generateLoggingConfig" (dict "root" .root "me" .me) | indent 6 }}
{{- include "hpcc.generateTracingConfig" (dict "root" .root "me" .me) | indent 6 }}
{{   include "hpcc.generateVaultConfig" . | indent 6 }}
    global:
{{   include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}{{/*define "hpcc.roxieConfigMap"*/}}

{{- define "hpcc.roxieTopoConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .toponame }}-configmap
data:
  {{ .toponame }}.yaml:
    version: 1.0
    toposerver:
{{   toYaml ( omit .toposerver "logging" "tracing" "env") | indent 6 }}
{{-  include "hpcc.generateLoggingConfig" (dict "root" .root "me" .toposerver) | indent 6 }}
{{-  include "hpcc.generateTracingConfig" (dict "root" .root "me" .toposerver) | indent 6 }}
    global:
{{   include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}{{/*define "hpcc.roxieConfigMap"*/}}

{{  range $roxie := $.Values.roxie -}}
{{-  if not $roxie.disabled -}}
{{-   $env := concat ($.Values.global.env | default list) (.env | default list) -}}
{{-   $secretsCategories := list "system" "eclUser" "ecl" "storage" }}
{{-   $toposerver := ($roxie.topoServer | default dict) -}}
{{-   $enginePlaneDetails := dict -}}
{{-   $_ := include "hpcc.getEnginePlanes" (dict "root" $ "me" . "result" $enginePlaneDetails) -}}
{{-   $commonCtx := dict "root" $ "me" $roxie "includeCategories" $enginePlaneDetails.planeCategories "includeNames" $enginePlaneDetails.namedPlanes "secretsCategories" $secretsCategories "toposerver" $toposerver "env" $env }}
{{-   $_ := set $commonCtx "toponame" (printf "%s-toposerver" $roxie.name) -}}
{{-   $_ := set $commonCtx "numChannels" ($roxie.numChannels | int | default 1) -}}
{{-   $_ := set $commonCtx "topoport" ($toposerver.port | int | default 9004) -}}
{{-   $_ := set $commonCtx "heartbeatInterval" ($toposerver.heartbeatInterval | int | default 10000) -}}
{{-   $_ := set $toposerver "name" $commonCtx.toponame -}}
{{-   $configSHA := include "hpcc.getConfigSHA" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieConfigMap" "component" "roxie" "excludeKeys" "global")) }}
{{-   $topoconfigSHA := include "hpcc.getConfigSHA" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieTopoConfigMap" "component" "toposerver" "excludeKeys" "global")) }}
{{-   include "hpcc.checkDefaultStoragePlane" $commonCtx }}
{{-   $singleNode := (hasKey $roxie "singleNode") | ternary $roxie.singleNode ((hasKey $roxie "localAgent") | ternary $roxie.localAgent false) }}
{{-   if not $singleNode -}}
{{-    $servername := printf "%s-server" $roxie.name -}}
{{-    $udpkeyname := $roxie.name -}}
{{-    range $service := $roxie.services }}
{{-     range $remoteClient := $service.remoteClients }}
  {{     include "hpcc.addExternalRemoteClientCertificate" (dict "root" $ "client" $remoteClient.name "organization" $remoteClient.organization "instance" $service.name "component" "roxie" "visibility" $service.visibility "secretTemplate" $remoteClient.secretTemplate) }}
{{-     end }}
{{-     if ne (int $service.servicePort)  0 }}
{{-      $_ := set $service "port" $service.servicePort }} 
{{-     end }}
{{-    end }}

{{-   $_ := set $commonCtx "lifeCycleCtx" (dict "containers" list) -}}
{{-   $topServerMe := . | merge (dict "name" $commonCtx.toponame) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $commonCtx.toponame | quote }}
spec:
  replicas: {{ $toposerver.replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ $commonCtx.toponame | quote }}
  template:
    metadata:
      labels:
{{-    include "hpcc.addStandardLabels" (dict "root" $ "component" "topology-server" "name" "roxie" "instance" $commonCtx.toponame) | indent 8 }}
        app: "toposerver"
        run: {{ $commonCtx.toponame | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
        {{- include "hpcc.generateHelmVersion" . | nindent 8 }}
{{- if hasKey $.Values.global "metrics" }}
{{-     include "hpcc.generateMetricsReporterLabel"  $.Values.global.metrics | nindent 8}}
{{-    end }}
{{-    if hasKey $toposerver "labels" }}
{{      toYaml $toposerver.labels | indent 8 }}
{{-    end }}
      annotations:
        checksum/config: {{ $topoconfigSHA }}
{{-    include "hpcc.generateAnnotations" (dict "root" $commonCtx.root "me" $toposerver) | indent 8 }}
{{-    if hasKey $.Values.global "metrics" }}
{{-     include "hpcc.addPrometheusScrapeAnnotations"  $.Values.global.metrics | nindent 8 }}
{{-    end }}
    spec:
{{-    include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $commonCtx.toponame "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
{{-    include "hpcc.addImagePullSecrets" $commonCtx | nindent 6 -}}
      containers:
      - name: {{ $commonCtx.toponame | quote }}
{{     include "hpcc.addSentinelProbes" $toposerver | indent 8 }}
{{-    include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{-    $defaultResources := dict "cpu" "500m" "memory" "200Mi" }}
{{-    include "hpcc.addResources" (dict "me" .topoResources "defaults" $defaultResources "root" $) | indent 8 }}
{{     include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        workingDir: /var/lib/HPCCSystems
{{- include "hpcc.addCommandAndLifecycle" ($commonCtx | merge (dict "process" "toposerver" "containerName" $commonCtx.toponame "component" "Toposerver" "optional" false "overrideConfigName" $toposerver.name)) | nindent 8 }}
        env:
{{     include "hpcc.mergeEnvironments" (dict "env" $env "defaultArenas" 1) | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $commonCtx.toponame }}.sentinel"
        volumeMounts:
{{     include "hpcc.addEphemeralVolumeMounts" $toposerver | indent 8 }}
{{     include "hpcc.addVolumeMounts" ($commonCtx | merge (dict "includeCategories" (list "debug"))) | indent 8 -}}
{{     include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "topo" "name" $commonCtx.toponame "external" false) | indent 8 }}
{{-   include "hpcc.addPostRunContainer" ($commonCtx | merge (dict "me" $topServerMe)) | nindent 6 }}
      volumes:
{{     include "hpcc.addEphemeralVolumes" $toposerver | indent 6 }}
{{     include "hpcc.addVolumes" ($commonCtx | merge (dict "includeCategories" (list "debug"))) | indent 6 }}
{{     include "hpcc.addCertificateVolume" (dict "root" $ "component" "topo" "name" $commonCtx.toponame "external" false) | indent 6 }}

---
{{     include "hpcc.addCertificate" (dict "root" $ "name" $commonCtx.toponame "servicename" $commonCtx.toponame "component" "topo" "external" false) }}
{{     include "hpcc.addUDPCertificate" (dict "root" $ "name" $udpkeyname "component" "udpkey") }}

---
{{-    range $service := $roxie.services }}
{{-     if ne (int $service.servicePort)  0 }}
{{       include "hpcc.addService" ( dict "root" $ "name" $service.name "service" $service "selector" $servername "defaultPort" $service.servicePort) }}
---
{{-     end }}
{{-    end }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $commonCtx.toponame | quote }}
  labels:
    app: "toposerver"
    {{- include "hpcc.generateHelmVersion" . | nindent 4 }}
    {{- include "hpcc.addStandardLabels" (dict "root" $ "component" "topology-server" "name" "roxie" "instance" $commonCtx.toponame) | indent 4 }}
spec:
  ports:
  - port: {{ $commonCtx.topoport  }}
    protocol: TCP
    targetPort: {{ $commonCtx.topoport }}
  selector:
    run: {{ $commonCtx.toponame | quote }}
  clusterIP: None # Headless service
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ printf "%s-internal-traffic" $roxie.name }}
spec:
  podSelector:
    matchLabels:
      roxie-cluster: {{ $roxie.name | quote }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}
  egress:
  - to:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}

---
kind: ConfigMap 
{{     include "hpcc.generateConfig" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieConfigMap")) }}
---
kind: ConfigMap 
{{     include "hpcc.generateConfig" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieTopoConfigMap")) }}
---

{{-    $_ := set $commonCtx "instanceNames" list -}}
{{-    $_ := set $commonCtx "lifeCycleCtx" (dict "containers" list) -}}
{{     if $roxie.serverReplicas -}}
{{      $_ := set $commonCtx "instanceNames" (list $servername) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $servername | quote }}
spec:
  replicas: {{ $roxie.serverReplicas }}
  selector:
    matchLabels:
      run: {{ $servername | quote }}
  template:
    metadata:
      labels:
        app: "roxie"
        run: {{ $servername | quote }}
        server: {{ $roxie.name | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
        {{- include "hpcc.generateHelmVersion" . | nindent 8 }}
        {{- include "hpcc.addStandardLabels" (dict "root" $ "component" "roxie-server" "name" "roxie" "instance" $servername) | indent 8 }}
{{-     if hasKey $.Values.global "metrics" }}
{{-      include "hpcc.generateMetricsReporterLabel" $.Values.global.metrics | nindent 8}}
{{-     end }}
{{-     if hasKey $roxie "labels" }}
{{       toYaml $roxie.labels | indent 8 }}
{{-     end }}
      annotations:
        checksum/config: {{ $configSHA }}
{{-     include "hpcc.generateAnnotations" $commonCtx | indent 8 }}
{{-     if hasKey $.Values.global "metrics" }}
{{-      include "hpcc.addPrometheusScrapeAnnotations" $.Values.global.metrics | nindent 8 }}
{{-     end }}
{{-     if hasKey $roxie "annotations" }}
{{       toYaml $roxie.annotations | indent 8 }}
{{-     end }}
    spec:
{{-     include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $servername "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers:
{{-     include "hpcc.createConfigInitContainers" $commonCtx | indent 6 }}
{{-     include "hpcc.addImagePullSecrets" $commonCtx | nindent 6 -}}
      terminationGracePeriodSeconds: {{ add ($roxie.agentQueryReleaseDelaySeconds | default 60) 30 }}
      containers:
      - name: {{ $servername | quote }}
        workingDir: /var/lib/HPCCSystems
{{- include "hpcc.addCommandAndLifecycle" ($commonCtx | merge (dict "process" "roxie" "component" "Roxie" "optional" false)) | nindent 8 }}
        env:
{{      include "hpcc.mergeEnvironments" (dict "env" $env "defaultArenas" 8) | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $roxie.name }}.sentinel"
{{-     $local := dict "first" true }}
{{-     range $service := $roxie.services }}
{{-      if ne (int $service.servicePort)  0 }}
{{-       if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{-       end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.servicePort }}
{{-      end }}
{{-     end }}
        lifecycle:
          preStop:
            exec:
              command: ["testsocket", ".", "control:closedown"]        
{{      include "hpcc.addSentinelProbes" ( $roxie | merge (dict "readyProbeName" ".ready" )) | indent 8 }}
{{      include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{-     include "hpcc.addResources" (dict "me"  ($roxie.serverResources | default $roxie.resources) "root" $) | indent 8 }}
{{      include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{      include "hpcc.addEphemeralVolumeMounts" $roxie | indent 8 }}
{{      include "hpcc.addVolumeMounts" $commonCtx | indent 8 }}
{{      include "hpcc.addSecretVolumeMounts" $commonCtx | indent 8 }}
{{      include "hpcc.addVaultClientCertificateVolumeMounts" $commonCtx | indent 8 }}
{{      include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-server" "name" $servername "external" false) | indent 8 }}
{{      include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-server" "name" $servername "certificate" $roxie.certificate "external" true "includeRemote" true) | indent 8 }}
{{      include "hpcc.addUDPCertificateVolumeMount" (dict "root" $ "component" "udpkey" "name" $udpkeyname ) | indent 8 }}
{{-   include "hpcc.addPostRunContainer" $commonCtx | nindent 6 }}
      volumes:
{{      include "hpcc.addEphemeralVolumes" $roxie | indent 6 }}
{{      include "hpcc.addVolumes" $commonCtx | indent 6 }}
{{      include "hpcc.addSecretVolumes" $commonCtx | indent 6 }}
{{      include "hpcc.addVaultClientCertificateVolumes" $commonCtx | indent 6 }}
{{      include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-server" "name" $servername "external" false) | indent 6 }}
{{      include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-server" "name" $servername "certificate" $roxie.certificate "external" true "includeRemote" true) | indent 6 }}
{{      include "hpcc.addUDPCertificateVolume" (dict "root" $ "component" "udpkey" "name" $udpkeyname) | indent 6 }}

---
{{      include "hpcc.addCertificate" (dict "root" $ "name" $servername "services" $roxie.services "component" "roxie-server" "external" false) }}
{{      include "hpcc.addCertificate" (dict "root" $ "name" $servername "services" $roxie.services "component" "roxie-server" "external" true "includeRemote" true) }}
---
{{     end -}}{{/* if serverReplicas */}}

{{- $agentPublicCertName := printf "%s-agent" $roxie.name }}
{{     include "hpcc.addCertificate" (dict "root" $ "name" $agentPublicCertName "services" $roxie.services "component" "roxie-agent" "external" true "includeRemote" true) }}

{{     range $c, $e := until ($commonCtx.numChannels|int) -}}
{{- $channel := add $c 1 -}}
{{- $name := printf "%s-agent-%d" $roxie.name $channel }}
{{- $_ := set $commonCtx "instanceNames" (append $commonCtx.instanceNames $name) }}
{{- $_ := set $commonCtx "lifeCycleCtx" (dict "containers" list) -}}

{{      include "hpcc.addCertificate" (dict "root" $ "name" $name "services" $roxie.services "component" "roxie-agent" "external" false) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote}}
spec:
  replicas: {{ (hasKey $roxie "replicas") | ternary $roxie.replicas 1 }}
  selector:
    matchLabels:
      run: {{ $name | quote}}
  template:
    metadata:
      labels:
{{-     include "hpcc.addStandardLabels" (dict "root" $ "component" "roxie-agent" "name" "roxie" "instance" $name) | indent 8 }}
        app: "roxie"
        run: {{ $name | quote}}
{{-     if not $roxie.serverReplicas }}        
        server: {{ $servername | quote }}
{{-     end }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
        {{- include "hpcc.generateHelmVersion" . | nindent 8 }}
{{- if hasKey $.Values.global "metrics" }}
{{-      include "hpcc.generateMetricsReporterLabel" $.Values.global.metrics | nindent 8}}
{{-     end }}
{{-     if hasKey $roxie "labels" }}
{{       toYaml $roxie.labels | indent 8 }}
{{-     end }}
      annotations:
        checksum/config: {{ $configSHA }}
{{-     include "hpcc.generateAnnotations" $commonCtx | indent 8 }}
{{-     if hasKey $.Values.global "metrics" }}
{{-      include "hpcc.addPrometheusScrapeAnnotations" $.Values.global.metrics | nindent 8 }}
{{-     end }}
    spec:
{{-     include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $name "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers:
{{-     include "hpcc.createConfigInitContainers" $commonCtx | indent 6 }}
{{-     include "hpcc.addImagePullSecrets" $commonCtx | nindent 6 -}}
      terminationGracePeriodSeconds: {{ add ($roxie.agentQueryReleaseDelaySeconds | default 60) 30 }}
      containers:
      - name: {{ $name | quote}}
        workingDir: /var/lib/HPCCSystems
{{- $extraArgs := list (printf "--channels=%d" $channel) (printf "--server=%t" (not $roxie.serverReplicas)) -}}
{{- include "hpcc.addCommandAndLifecycle" ($commonCtx | merge (dict "process" "roxie" "extraArgs" $extraArgs "component" "Roxie" "optional" false)) | nindent 8 }}
        env:
{{      include "hpcc.mergeEnvironments" (dict "env" $env "defaultArenas" 8) | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $roxie.name }}.sentinel"
{{-     if not $roxie.serverReplicas }}
{{- $local := dict "first" true }}
{{-      range $service := $roxie.services }}
{{-       if ne (int $service.servicePort)  0 }}
{{-        if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{-        end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.servicePort }}
{{-       end }}
{{-      end }}
        lifecycle:
          preStop:
            exec:
              command: ["testsocket", ".", "control:closedown"]
{{       include "hpcc.addSentinelProbes" ( $roxie | merge (dict "readyProbeName" ".ready" )) | indent 8 }}
{{-     end }}{{/* not serverReplicas */}}
{{      include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{-     include "hpcc.addResources" (dict "me" ($roxie.channelResources | default $roxie.resources) "root" $) | indent 8 }}
{{      include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{      include "hpcc.addEphemeralVolumeMounts" $roxie | indent 8 }}
{{      include "hpcc.addVolumeMounts" $commonCtx | indent 8 }}
{{      include "hpcc.addSecretVolumeMounts" $commonCtx | indent 8 }}
{{      include "hpcc.addVaultClientCertificateVolumeMounts" $commonCtx | indent 8 }}
{{-     if not $roxie.serverReplicas }}

{{       include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-agent" "name" $name "external" false) | indent 8 }}
{{       include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-agent" "name" $agentPublicCertName "certificate" $roxie.certificate "external" true "includeRemote" true) | indent 8 }}
{{       include "hpcc.addUDPCertificateVolumeMount" (dict "root" $ "component" "udpkey" "name" $udpkeyname ) | indent 8 }}
{{-     end }}{{/* not serverReplicas */}}

{{-   include "hpcc.addPostRunContainer" $commonCtx | nindent 6 }}
      volumes:
{{      include "hpcc.addEphemeralVolumes" $roxie | indent 6 }}
{{      include "hpcc.addVolumes" $commonCtx | indent 6 }}
{{      include "hpcc.addSecretVolumes" $commonCtx | indent 6 }}
{{      include "hpcc.addVaultClientCertificateVolumes" $commonCtx | indent 6 }}
{{-     if not $roxie.serverReplicas }}
{{       include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-agent" "name" $name "external" false) | indent 6 }}
{{       include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-agent" "name" $agentPublicCertName "certificate" $roxie.certificate "external" true "includeRemote" true) | indent 6 }}
{{       include "hpcc.addUDPCertificateVolume" (dict "root" $ "component" "udpkey" "name" $udpkeyname) | indent 6 }}
{{-     end }}{{/* not serverReplicas */}}
---

{{-    end }}
{{-   end }}{{/* if not singlenode */}}
---
{{    include "hpcc.addEgress" (dict "root" $ "me" $roxie "labels" $commonCtx.instanceNames) }}
{{-   if hasKey . "hpa" }}
{{-    include "hpcc.addHorizontalPodAutoscaler" (dict "name" $roxie.name "kind" "Deployment" "hpa" $roxie.hpa) }}
{{-   end }}
{{-  end }}{{/* if not disabled */}}
{{- end }}{{/* range */}}

