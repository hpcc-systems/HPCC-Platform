{{/*
roxie configmap
Pass in dict with root and me
*/}}
{{- define "hpcc.roxieConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .me.name }}-configmap
data:
  {{ .me.name }}.yaml:
    version: 1.0
    roxie:
{{ toYaml ( omit .me "logging" "topoServer" "encryptInTransit" "env") | indent 6 }}
      numChannels: {{ .numChannels }}
      topologyServers: "{{ .toponame }}:{{ .topoport }}"
      resolveLocally: false
{{- $certificates := (.root.Values.certificates | default dict) -}}
{{- $issuers := ($certificates.issuers | default dict) -}}
{{- $mtlsEnabled := (and ($certificates.enabled) (hasKey $issuers "local")) -}}
{{/* By default use encryption if local certificates are enabled, but allow it to be turned off via roxie .encryptInTransit value */}}
{{- if (hasKey .me "encryptInTransit") -}}
  {{- if and (.me.encryptInTransit) (not $mtlsEnabled) -}}
    {{- $_ := fail (printf "Roxie %s encryptInTransit requires local cert-manager configuration." .me.name ) }}
  {{- end }}
      encryptInTransit: {{ .me.encryptInTransit }}
{{ else }}
      encryptInTransit: {{ $mtlsEnabled }}
{{ end -}}
{{- include "hpcc.generateLoggingConfig" (dict "root" .root "me" .me) | indent 6 }}
{{ include "hpcc.generateVaultConfig" . | indent 6 }}
      services:
{{ include "hpcc.generateConfigMapServices" .root | indent 6 }}
    global:
{{ include "hpcc.generateGlobalConfigMap" .root | indent 6 }}
{{- end -}}

{{- define "hpcc.roxieTopoConfigMap" -}}
apiVersion: v1
metadata:
  name: {{ .toponame }}-configmap
data:
  {{ .toponame }}.yaml:
    version: 1.0
    toposerver:
      port: {{ .topoport }}
      traceLevel: {{ .toposerver.traceLevel | default 1 }}
{{- include "hpcc.generateLoggingConfig" (dict "root" .root "me" .toposerver) | indent 6 }}
{{- end -}}

{{ range $roxie := $.Values.roxie -}}
{{- if not $roxie.disabled -}}
{{- $env := concat ($.Values.global.env | default list) (.env | default list) -}}
{{- $secretsCategories := list "system" "ecl-user" "ecl" "storage" }}
{{- $toposerver := ($roxie.topoServer | default dict) -}}
{{- $commonCtx := dict "root" $ "me" $roxie "secretsCategories" $secretsCategories "toposerver" $toposerver "env" $env }}
{{- $_ := set $commonCtx "toponame" (printf "%s-toposerver" $roxie.name) -}}
{{- $_ := set $commonCtx "numChannels" ($roxie.numChannels | int | default 1) -}}
{{- $_ := set $commonCtx "topoport" ($toposerver.port | int | default 9004) -}}
{{- $_ := set $toposerver "name" $commonCtx.toponame -}}
{{- $configSHA := include "hpcc.getConfigSHA" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieConfigMap" "component" "roxie" "excludeKeys" "global")) }}
{{- $topoconfigSHA := include "hpcc.getConfigSHA" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieTopoConfigMap" "component" "toposerver" "excludeKeys" "global")) }}
{{- include "hpcc.checkDefaultStoragePlane" $commonCtx }}
{{- if not $roxie.localAgent -}}
{{- $_ := set $roxie "localAgent" false -}}
{{- $servername := printf "%s-server" $roxie.name -}}
{{- $udpkeyname := $roxie.name -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $commonCtx.toponame | quote }}
spec:
  replicas: {{ $toposerver.replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ $commonCtx.toponame | quote }}
  template:
    metadata:
      labels:
        run: {{ $commonCtx.toponame | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
      annotations:
        checksum/config: {{ $topoconfigSHA }}
    spec:
      {{- include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $commonCtx.toponame "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
      containers:
      - name: {{ $commonCtx.toponame | quote }}
{{ include "hpcc.addSentinelProbes" $toposerver | indent 8 }}
{{- include "hpcc.addSecurityContext" $commonCtx | indent 8 }}
{{- if not $.Values.global.privileged }}
{{- include "hpcc.addStubResources" . | indent 8 }}
{{- end }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        workingDir: /var/lib/HPCCSystems
        command: [ toposerver ] 
        args: [ 
                {{ include "hpcc.configArg" $toposerver }}
              ]
        env:
{{ include "hpcc.mergeEnvironments" $env | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $commonCtx.toponame }}.sentinel"
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $toposerver | indent 8 }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "topo" "name" $commonCtx.toponame "external" false) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" $toposerver | indent 6 }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "component" "topo" "name" $commonCtx.toponame "external" false) | indent 6 }}

---
{{ include "hpcc.addCertificate" (dict "root" $ "name" $commonCtx.toponame "servicename" $commonCtx.toponame "component" "topo" "external" false) }}
{{ include "hpcc.addUDPCertificate" (dict "root" $ "name" $udpkeyname "component" "udpkey") }}

---
{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $service.name | quote }}
  labels:
    type: roxie-service
spec:
  ports:
  - port: {{ $service.port }}
    protocol: TCP
    targetPort: {{ $service.port }}
  selector:
    roxie-server: {{ $servername | quote }}
  type: {{ if $service.external -}} LoadBalancer {{- else -}} ClusterIP {{- end }}
---
{{- end }}
{{- end }}

apiVersion: v1
kind: Service
metadata:
  name: {{ $commonCtx.toponame | quote }}
spec:
  ports:
  - port: {{ $commonCtx.topoport  }}
    protocol: TCP
    targetPort: {{ $commonCtx.topoport }}
  selector:
    run: {{ $commonCtx.toponame | quote }}
  clusterIP: None # Headless service
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $roxie.name | quote }}
spec:
  podSelector:
    matchLabels:
      roxie-cluster: {{ $roxie.name | quote }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}
  egress:
  - to:
    - podSelector:
        matchLabels:
          roxie-cluster: {{ $roxie.name | quote }}

---
kind: ConfigMap 
{{ include "hpcc.generateConfig" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieConfigMap")) }}
---
kind: ConfigMap 
{{ include "hpcc.generateConfig" ($commonCtx | merge (dict "configMapHelper" "hpcc.roxieTopoConfigMap")) }}
---

{{ if $roxie.serverReplicas -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $servername | quote }}
spec:
  replicas: {{ $roxie.serverReplicas }}
  selector:
    matchLabels:
      run: {{ $servername | quote }}
  template:
    metadata:
      labels:
        run: {{ $servername | quote }}
        roxie-server: {{ $servername | quote }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      {{- include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $servername "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers:
        {{- include "hpcc.checkDataMount" (dict "root" $) | indent 6 }}
      containers:
      - name: {{ $servername | quote }}
        workingDir: /var/lib/HPCCSystems
        command: [ roxie ] 
        args: [
                {{ include "hpcc.configArg" . }},
                {{ include "hpcc.daliArg" $ }},
                "--server=true" 
              ]
        env:
{{ include "hpcc.mergeEnvironments" $env | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $roxie.name }}.sentinel"
{{- $local := dict "first" true }}
{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
{{- if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{- end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.port }}
{{- end }}
{{- end }}
{{ include "hpcc.addSentinelProbes" $roxie | indent 8 }}
{{ include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- include "hpcc.addResources" (dict "me" $roxie.serverResources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $roxie | indent 8 }}
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" $commonCtx | indent 8 }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-server" "name" $servername "external" false) | indent 8 }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-server" "name" $servername "external" true) | indent 8 }}
{{ include "hpcc.addUDPCertificateVolumeMount" (dict "root" $ "component" "udpkey" "name" $udpkeyname ) | indent 8 }}
      volumes:
{{ include "hpcc.addConfigMapVolume" $roxie | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addDllVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addSecretVolumes" $commonCtx | indent 6 }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-server" "name" $servername "external" false) | indent 6 }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-server" "name" $servername "external" true) | indent 6 }}
{{ include "hpcc.addUDPCertificateVolume" (dict "root" $ "component" "udpkey" "name" $udpkeyname) | indent 6 }}

---
{{ include "hpcc.addCertificate" (dict "root" $ "name" $servername "services" $roxie.services "component" "roxie-server" "external" false) }}
{{ include "hpcc.addCertificate" (dict "root" $ "name" $servername "services" $roxie.services "component" "roxie-server" "external" true) }}
---

{{ end -}}
{{ range $c, $e := until ($commonCtx.numChannels|int) -}}
{{- $channel := add $c 1 -}}
{{- $name := printf "%s-agent-%d" $roxie.name $channel }}

{{ include "hpcc.addCertificate" (dict "root" $ "name" $name "services" $roxie.services "component" "roxie-agent" "external" false) }}
{{ include "hpcc.addCertificate" (dict "root" $ "name" $name "services" $roxie.services "component" "roxie-agent" "external" true) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote}}
spec:
  replicas: {{ $roxie.replicas | default 1 }}
  selector:
    matchLabels:
      run: {{ $name | quote}}
  template:
    metadata:
      labels:
        run: {{ $name | quote}}
{{- if not $roxie.serverReplicas }}        
        roxie-server: {{ $servername | quote }}
{{- end }}
        roxie-cluster: {{ $roxie.name | quote }}
        accessDali: "yes"
        accessEsp: "yes"
      annotations:
        checksum/config: {{ $configSHA }}
    spec:
      {{- include "hpcc.placementsByPodTargetType" (dict "root" $ "pod" $name "target" $roxie.name "type" "roxie") | indent 6 }}
      serviceAccountName: "hpcc-default"
      initContainers:
        {{- include "hpcc.checkDataMount" (dict "root" $) | indent 6 }}
      containers:
      - name: {{ $name | quote}}
        workingDir: /var/lib/HPCCSystems
        command: [ roxie ]
        args: [ 
                {{ include "hpcc.configArg" $roxie }},
                {{ include "hpcc.daliArg" $ }},
                "--channels={{ $channel }}", 
                "--server={{ not $roxie.serverReplicas }}",
              ]
        env:
{{ include "hpcc.mergeEnvironments" $env | indent 8 -}}
        - name: "SENTINEL"
          value: "/tmp/{{ $roxie.name }}.sentinel"
{{- if not $roxie.serverReplicas }}
{{- $local := dict "first" true }}
{{- range $service := $roxie.services }}
{{- if ne (int $service.port)  0 }}
{{- if $local.first }}
{{- $_ := set $local "first" false }}
        ports:
{{- end }}
        - name: {{ $service.name }}
          containerPort: {{ $service.port }}
{{- end }}
{{- end }}
{{ include "hpcc.addSentinelProbes" $roxie | indent 8 }}
{{- end }}
{{ include "hpcc.addSecurityContext" (dict "root" $ "me" .) | indent 8 }}
{{- include "hpcc.addResources" (dict "me" $roxie.channelResources) | indent 8 }}
{{ include "hpcc.addImageAttrs" $commonCtx | indent 8 }}
        volumeMounts:
{{ include "hpcc.addConfigMapVolumeMount" $roxie | indent 8 }}
{{ include "hpcc.addDataVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addDllVolumeMount" $commonCtx | indent 8 }}
{{ include "hpcc.addSecretVolumeMounts" $commonCtx | indent 8 }}
{{- if not $roxie.serverReplicas }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-agent" "name" $name "external" false) | indent 8 }}
{{ include "hpcc.addCertificateVolumeMount" (dict "root" $ "component" "roxie-agent" "name" $name "external" true) | indent 8 }}
{{ include "hpcc.addUDPCertificateVolumeMount" (dict "root" $ "component" "udpkey" "name" $udpkeyname ) | indent 8 }}
{{- end }}

      volumes:
{{ include "hpcc.addConfigMapVolume" $roxie | indent 6 }}
{{ include "hpcc.addDataVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addDllVolume" $commonCtx | indent 6 }}
{{ include "hpcc.addSecretVolumes" $commonCtx | indent 6 }}
{{- if not $roxie.serverReplicas }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-agent" "name" $name "external" false) | indent 6 }}
{{ include "hpcc.addCertificateVolume" (dict "root" $ "component" "roxie-agent" "name" $name "external" true) | indent 6 }}
{{ include "hpcc.addUDPCertificateVolume" (dict "root" $ "component" "udpkey" "name" $udpkeyname) | indent 6 }}
{{- end }}

---

{{- end }}
{{- end }}
{{- end }}
{{- end }}
 
