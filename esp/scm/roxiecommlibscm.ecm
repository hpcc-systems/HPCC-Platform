/*##############################################################################

    HPCC SYSTEMS software Copyright (C) 2012 HPCC Systems.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
############################################################################## */

#ifndef ROXIECOMMLIB_API
#define ROXIECOMMLIB_API __declspec(dllimport)
#endif

#include "esp.hpp"
#include "jptree.hpp"
#include "jsocket.hpp"

interface IUserDescriptor;


SCMinterface IRoxieCommunicationClient(IInterface)
{
    IPropertyTree *sendRoxieControlRequest(const char *xml, bool lockAll);
    const char *sendRoxieOnDemandRequest(const char *xml, SCMStringBuffer &repsonse, bool lockAll);
    void sendRoxieReloadControlRequest();

    IPropertyTree *retrieveQuery(const char *id);
    IPropertyTree *retrieveAllQueryInfo(const char *id);
    IPropertyTree *retrieveState();

    IPropertyTree *retrieveQueryStats(const char *queryName, const char *action, const char *graphName, bool lockAll);
    const char *queryRoxieClusterName(SCMStringBuffer &clusterName);
    IPropertyTree *retrieveQueryWuInfo(const char *queryName);
    IPropertyTree *retrieveTopology();

    bool updateQueryComment(const char *id, const char *comment, bool append);
    bool updateACLInfo(bool allow, const char *restrict_ip, const char *mask, const char *query, const char *errorMsg, int errorCode, const char *roxieAddress, SCMStringBuffer &status);
    IPropertyTree *queryACLInfo();
    IPropertyTree *retrieveRoxieQueryMetrics(SCMStringBuffer &queryName, SCMStringBuffer &startDateTime, SCMStringBuffer &endDateTime);
    IPropertyTree *retrieveRoxieMetrics(StringArray &ipList);
    IPropertyTree *listLibrariesUsedByQuery(const char *id, bool useAliasNames);
    IPropertyTree *listQueriesUsingLibrary(const char *id);
    IPropertyTree *retrieveQueryActivityInfo(const char *id, int activityId);

    unsigned retrieveRoxieStateRevision();
    IPropertyTree *getRoxieBuildVersion();

    IPropertyTree *sendRoxieControlAllNodes(const char *msg, bool allOrNothing);
    IPropertyTree *sendRoxieControlAllNodes(ISocket *sock, const char *msg, bool allOrNothing, unsigned wait);
    IPropertyTree *sendRoxieControlQuery(ISocket *sock, const char *msg, unsigned wait);
};


extern "C" ROXIECOMMLIB_API IRoxieCommunicationClient *createRoxieCommunicationClient(SocketEndpoint &roxieEP, unsigned roxieTimeout);




