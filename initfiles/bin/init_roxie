#!/bin/bash
################################################################################
#    Copyright (C) 2011 HPCC Systems.
#
#    All rights reserved. This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

PATH_PRE=`type -path hpcc_setenv`
source ${PATH_PRE}
PID_NAME="$PID/`basename $PWD`.pid"

INIT_PID_NAME="$PID/init_`basename $PWD`.pid"
echo $$ > $INIT_PID_NAME

export SENTINEL="roxie.sentinel"
rm -f ${SENTINEL}

if [ -n "$1" ]; then
    cd $1
fi

. ./roxievars

if [ -n "$2" ]; then
    logfilename=$2
else    
    logfilename="`date +%m_%d_%Y_%H_%M_%S`"
fi

export LIBC_FATAL_STDERR_=1
export restarts=0

ulimit -c unlimited
ulimit -n $NUM_ROXIE_HANDLES

killed() {
    if [ -n "$1" ]; then
        cd $1
    fi
    rm -f ${SENTINEL}
    killall roxie
    sleep 5
    killall -9 roxie
    sleep 2
    exit 255
}

trap "killed" SIGINT SIGTERM SIGKILL
nohup roxie --topology=RoxieTopology.xml --logfile=$logfilename --restarts=$restarts --stdlog=0 2>>$logfilename.stderr 1>>$logfilename.stdout &
echo $! > $PID_NAME 
wait

# Automatically restart roxie when it dies
while [ -e ${SENTINEL} ]; do
    export restarts=$(($restarts+1))
    echo Restarting $restarts >> $logfilename.stderr
    echo Restarting $restarts >> $logfilename.stdout
    nohup roxie --topology=RoxieTopology.xml --logfile=$logfilename --restarts=$restarts --stdlog=0 2>>$logfilename.stderr 1>>$logfilename.stdout &
    echo $! > $PID_NAME
    wait
done

