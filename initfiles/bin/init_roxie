#!/bin/bash
## Copyright © 2011 HPCC Systems.  All rights reserved.

PATH_PRE=`type -path hpcc_setenv`
source ${PATH_PRE}
PID_NAME="$PID/`basename $PWD`.pid"

INIT_PID_NAME="$PID/init_`basename $PWD`.pid"
echo $$ > $INIT_PID_NAME

export SENTINEL="roxie.sentinel"

if [ -n "$1" ]; then
    cd $1
fi

. ./roxievars

if [ -n "$2" ]; then
    logfilename=$2
else    
    logfilename="`date +%m_%d_%Y_%H_%M_%S`"
fi

export LIBC_FATAL_STDERR_=1
export restarts=0

ulimit -c unlimited
ulimit -n $NUM_ROXIE_HANDLES

killed() {
    if [ -n "$1" ]; then
        cd $1
    fi

    . ./roxievars

    rm -f ${SENTINEL}

    echo stopping roxie
    killall roxie
    sleep 5
    killall -9 roxie
    sleep 2
    exit 255
}


trap "killed" SIGINT SIGTERM SIGKILL
# start it the first time - roxie controls the creation of the roxie.sentinel file
nohup roxie topology=RoxieTopology.xml logfile=$logfilename restarts=$restarts stdlog=0 2>>$logfilename.stderr 1>>$logfilename.stdout & 
echo $! > $PID_NAME 
wait

# Automatically restart roxie when it dies
while [ -e ${SENTINEL} ]; do
    export restarts=$(($restarts+1))
    echo Restarting $restarts >> $logfilename.stderr
    echo Restarting $restarts >> $logfilename.stdout
    nohup roxie topology=RoxieTopology.xml logfile=$logfilename restarts=$restarts stdlog=0 2>>$logfilename.stderr 1>>$logfilename.stdout &
    echo $! > $PID_NAME
    wait
done

