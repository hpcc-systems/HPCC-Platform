#!/bin/bash
################################################################################
#    HPCC SYSTEMS software Copyright (C) 2012 HPCC Systems.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
################################################################################

cmd=$1
ip=$2
master=$3
masterport=$4
logpth=$5
instancedir=$6
deploydir=$7
hpcc_compname=$8
hpcc_setenv=$9
export logfile="${logpth}/${hpcc_compname}/${10}"

source "$hpcc_setenv"
source "$(dirname $hpcc_setenv)/../etc/init.d/hpcc_common"

slavename=thorslave_${hpcc_compname}

stop_slaves()
{
    killall -0 $slavename > /dev/null 2>&1
    if [[ $? -eq 0 ]];then
        log "killing slaves"
        killall -9 $slavename > /dev/null 2>&1
    fi
    rm -f $PID/${slavename}_*.pid > /dev/null 2>&1
}

start_slaves()
{

    # insuring dafilesrv is running on the machine as it is a prerequisite
    sudo /etc/init.d/dafilesrv status > /dev/null 2>&1
    if [[ $? -ne 0 ]];then
        sudo /etc/init.d/dafilesrv start > /dev/null 2>&1
        if [[ $? -ne 0 ]];then
            exit 1
        fi
    fi

    # insuring parent directory structure is setup properly
    mkdir -p $instancedir
    mkdir -p $(dirname $logfile)

    cd $instancedir

    log "dependency dafilesrv started"

    ulimit -Sc hard > /dev/null 2>&1
    [[ $? -ne 0 ]] && log "Failed to set ulimit for core file size"
    ulimit -Sn hard > /dev/null 2>&1
    [[ $? -ne 0 ]] && log "Failed to set ulimit for number of file descriptors open"

    log "slave(${ip}) init"
    log "slave(s) starting"

    # create symlink for easier identification of slaves by compName
    ln -s -f $deploydir/thorslave_lcr ${slavename}

    # sync to current master thorgroup
    log "rsync -e ssh -o StrictHostKeyChecking=no ${master}:${instancedir}/thorgroup ${instancedir}/thorgroup.slave"
    rsync -e "ssh -o StrictHostKeyChecking=no" $master:$instancedir/thorgroup $instancedir/thorgroup.slave

    let "slavenum = 1";
    for slave in $(cat $instancedir/thorgroup.slave); do
        slaveip=${slave/:*/}
        if [[ ${slaveip} = ${ip} ]]; then
            slaveport=${slave/*:/}
            if [[ "$slaveport" = "" ]]; then
                slaveport=$THORSLAVEPORT
            fi
            log "$slavename  master=$master:$masterport slave=.:$slaveport slavenum=$slavenum logDir=$logpth/$hpcc_compname"
            ./$slavename master=$master:$masterport slave=.:$slaveport slavenum=$slavenum logDir=$logpth/$hpcc_compname 2>/dev/null 1>/dev/null &
            slavepid=$!
            if [[ "$slavepid" -eq "0" ]]; then
                log "failed to start"
            else
                log "slave pid $slavepid started"
                PID_NAME="$PID/${slavename}_${slavenum}.pid"
                echo $slavepid > $PID_NAME
            fi
        fi
        let "slavenum += 1";
    done
}

print_usage()
{
  log "usage: cmd ip master masterport logdir workingdir deploydir hpcc_compname hpcc_setenv logredirect"
}

##  Main
if [[ $# -lt 10 ]]; then
    print_usage
    exit 1
fi

if [[ "start" = ${cmd} ]]; then
    start_slaves
elif [[ "stop" = ${cmd} ]]; then
    stop_slaves
else
    print_usage
    exit 1
fi

exit 0
