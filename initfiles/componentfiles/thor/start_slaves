#!/bin/bash
################################################################################
#    HPCC SYSTEMS software Copyright (C) 2012 HPCC Systems.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
################################################################################

ip=$1
master=$2
masterport=$3
logpth=$4
instancedir=$5
deploydir=$6
hpcc_compname=$7
hpcc_setenv=$8
logredirect=$9

source ${hpcc_setenv}

if [ $# -lt 9 ]; then
  echo usage: ip master masterport logdir workingdir deploydir hpcc_compname hpcc_setenv logredirect
  exit 1
fi

# insuring parent directory structure is setup properly
sudo /etc/init.d/dafilesrv status &>/dev/null
if [ $? -ne 0 ];then
  sudo /etc/init.d/dafilesrv start &>/dev/null
  if [ $? -ne 0 ];then
    exit 1
  fi
fi

mkdir -p $instancedir
mkdir -p `dirname $logredirect`
exec >>$logredirect 2>&1

cd $instancedir

echo "`date` Dependency dafilesrv is running"
echo "`date` slave(${ip}) init"

lckfile="$PID/start_slaves_${hpcc_compname}_${ip}.pid"

# prevent two of these scripts starting together
while [ -e $lckfile ]; do
  echo "`date` waiting on lckfile: ${lckfile}"
  oldpid=`cat $lckfile`
  if ps h $oldpid; then
     echo "`date` killing pid ${oldpid} start_slaves"
     kill -9 $oldpid
     rm $lckfile                   # just in case
     sleep 1
  else
     rm -f $lckfile
  fi
done
trap "rm -f $lckfile" exit
echo $$ > $lckfile




echo "`date` slave(s) starting"

# create symlink for easier identification of slaves by compName
ln -s -f $deploydir/thorslave_lcr thorslave_${hpcc_compname}

# sync to current master thorgroup
echo "`date` rsync -e ssh -o StrictHostKeyChecking=no ${master}:${instancedir}/thorgroup ${instancedir}/thorgroup.slave"
rsync -e "ssh -o StrictHostKeyChecking=no" $master:$instancedir/thorgroup $instancedir/thorgroup.slave

let "slavenum = 1";
for slave in $(cat $instancedir/thorgroup.slave); do
  slaveip=${slave/:*/}
  if [ ${slaveip} = ${ip} ]; then
    slaveport=${slave/*:/}
    if [ "$slaveport" = "" ]; then
      slaveport=$THORSLAVEPORT
    fi
    echo "`date` thorslave_$hpcc_compname  master=$master:$masterport slave=.:$slaveport slavenum=$slavenum logDir=$logpth"
    ./thorslave_$hpcc_compname master=$master:$masterport slave=.:$slaveport slavenum=$slavenum logDir=$logpth 2>/dev/null 1>/dev/null &
    slavepid=$!
    PID_NAME="$PID/${hpcc_compname}_slave_${slavenum}.pid"
    echo $slavepid > $PID_NAME
    if [ "$slavepid" -eq "0" ]; then
      echo "`date` failed to start"
    else
      echo "`date` slave pid $slavepid started"
    fi
  fi
  let "slavenum += 1";
done
