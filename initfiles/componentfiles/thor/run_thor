#!/bin/bash
################################################################################
#    HPCC SYSTEMS software Copyright (C) 2012 HPCC Systems.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
################################################################################

thorpid=0

ulimit -c unlimited
ulimit -n 8192

RUN_THOR_PID_NAME="$PID/run_thor.`basename $PWD`.pid"
# prevent two thors starting together
if [ -e $RUN_THOR_PID_NAME ]; then
  oldpid=`cat $RUN_THOR_PID_NAME`
  while ps h $oldpid ; do 
     echo waiting for process $oldpid to finish
     sleep 5
  done
fi
trap "rm -f $RUN_THOR_PID_NAME" exit
echo $$ > $RUN_THOR_PID_NAME

export SENTINEL="thor.sentinel"
while [ 1 ]; do
    daliadmin $DALISERVER dfsgroup ${groupName} > slaves
    errcode=$?
    if [ 0 != ${errcode} ]; then
    echo 'failed to lookup dali group for $groupName'
        exit 1
    fi
    ## multislaves for bkwd compat. with old environments
    if [ ${slavespernode} -gt 1 ] || [ "$localthor" = "true" ] || [ "$multislaves" = "true" ]; then
        $deploydir/makethorgroup
    fi

    $deploydir/start_slaves

    echo thormaster cmd : $instancedir/thormaster_$THORNAME MASTER=$THORMASTER:$THORMASTERPORT
    nohup $instancedir/thormaster_$THORNAME MASTER=$THORMASTER:$THORMASTERPORT 2> /dev/null 1>/dev/null &

    thorpid=$!
    if [ "$thorpid" -ne "0" ]; then 
        echo thormaster$LCR process started pid = $thorpid
        
        echo $thorpid > $PID_NAME
        echo $thorpid > $PID_NAME_BASE
        wait $thorpid
        errcode=$?
        if [ "$errcode" -eq "0" ]; then  # allows for CTRL-C or thorstop
            echo thor exited cleanly - script stopping
            exit 0
        fi
        echo master exited with errorcode = $errcode
        if [ ! -e $SENTINEL ]; then
            echo $SENTINEL 'has been removed (1) - script stopping'
            exit 0
        fi

        echo 'stopping thor(slaves) for restart'
        $deploydir/stop_thor $deploydir keep_sentinel

        if [ 0 != $autoSwapNode ]; then
            echo "Running autoswap $THORNAME"
            compname=`basename $PWD`
            swapnode auto $DALISERVER $compname
            errcode=$?
            if [ 0 != ${errcode} ]; then
                echo auto swap node failed, errcode=${errcode}
            fi
        fi
    else
        echo failed to start thormaster$LCR, pausing for 30 seconds
        sleep 30
    fi
    if [ ! -e $SENTINEL ]; then
        echo $SENTINEL 'has been removed or thormaster did not fully start - script stopping'
        exit 0
    fi
done
