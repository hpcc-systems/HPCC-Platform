#!/bin/bash
#############################################
#    HPCC SYSTEMS software Copyright (C) 2012 HPCC SystemsÂ®.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#
#    limitations under the License.
#    along with All rights reserved. This program is free software: you can redistribute program.  If not, see <http://www.gnu.org/licenses/>.
#############################################

###<REPLACE>###

source  ${INSTALL_DIR}/etc/init.d/hpcc_common
source  ${INSTALL_DIR}/etc/init.d/init-functions

usage() {
   cat << EOF

    $(basename $0) [OPTIONS]
       -f, --force: force to remove hpccsystems-platform.
       -e, --env: leave environment configuration files behind.
EOF
   exit 0
}

message() {
   cat << MESSAGE_MARKER

   If you get an uninstall error using $1, use the -f (--force) option.
   This will force the uninstall of hpccsystems-platform.

MESSAGE_MARKER
}

canonicalize_path() {
    # canonicalize path argument by removing trailing slashes
    # for test -h and readlink to work properly
    local dir=${1}
    if [ -z "${dir}" ] ; then
        echo "${dir}"
        return 0
    fi
    echo "${dir}" | sed 's/\/*$//'
    return 0
}

removedir() {
    local dir=$(canonicalize_path ${1})
    # echo "canonicalized dir = ${dir}"
    if [ -z "${dir}" ] ; then
        return 0
    fi
    if [ ! -d "${dir}" ] ; then
        return 0
    fi
    if [ -h "${dir}" ] ; then
        # echo "${dir} is a soft link"
        find ${dir}/ -depth -mindepth 1 -exec rm -rf {} \;
    else
        # echo "${dir} is not a soft link"
        rm -rf ${dir}
    fi
}

force=0
leaveenv=0

TEMP=$(/usr/bin/getopt -o efh --long env,help,force -- "$@")
if [ $? != 0 ] ; then echo "Failure to parse commandline." >&2 ; exit 1 ; fi
eval set -- "$TEMP"
while true ; do
    case "$1" in
        -f|--force) force=1
            shift ;;
        -e|--env) leaveenv=1
            shift ;;
        -h|--help) usage
                   shift ;;
        --) shift ; break ;;
        *) usage ;;
    esac
done


set_environmentvars

mklink=""
lpath=$(canonicalize_path ${path})
if [ -n "${lpath}" -a -h "${lpath}" ] ; then
    mklink=$(readlink "${lpath}")
    # echo "\"${lpath}\" is a soft-link to \"${mklink}\""
fi

if [ -e /etc/debian_version ]; then
    echo "Removing DEB"
    apt-get remove -y hpccsystems-platform
    if [ $? -ne 0 ]; then
       echo "An error has occured during removal.  Try \`apt-get -f remove hpccsystems-platform\` to fix this issue."
       exit 1
    fi
elif [ -e /etc/redhat-release -o -e /etc/SuSE-release ]; then
    echo "Removing RPM"
    yum remove -y hpccsystems-platform
    if [ $? -ne 0 ]; then
       echo "An error has occured during removal.  Try to fix any issues and then run \`yum-complete-transaction\`."
       exit 1
    fi
fi

echo "Removing Directory - ${path}"
removedir ${path}

if [ -n "${mklink}" -a -n "${lpath}" ] ; then
    # echo "recreating soft-link"
    ln -s "${mklink}" "${lpath}"
    removedir ${lpath}
fi

if [ $leaveenv -eq 0 ]; then
    echo "Removing Directory - ${configs}"
    removedir ${configs}
fi

echo "Removing Directory - ${lock}"
removedir ${lock}

echo "Removing Directory - ${log}"
removedir ${log}

echo "Removing Directory - ${pid}"
removedir ${pid}

echo "Removing Directory - ${runtime}"
removedir ${runtime}

echo "Removing user - ${user}"
if [ -e /usr/sbin/userdel ]; then
    /usr/sbin/userdel -r ${user}
elif [ -e /usr/bin/userdel ]; then
    /usr/bin/userdel -r ${user}
elif [ -e /bin/userdel ]; then
    /bin/userdel -r ${user}
fi

exit 0
