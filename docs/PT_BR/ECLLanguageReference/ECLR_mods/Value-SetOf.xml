<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="SET_OF">
  <title>SET OF</title>

  <para><emphasis role="bold">SET<indexterm>
      <primary>SET OF</primary>
    </indexterm> [ OF </emphasis><emphasis>type
  </emphasis><emphasis role="bold">]</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec align="left" colwidth="122.40pt" />

      <colspec />

      <tbody>
        <row>
          <entry><emphasis>type</emphasis></entry>

          <entry>O tipo de valor dos dados no conjunto. Os tipos de valor válidos são: INTEGER, REAL, BOOLEAN, STRING, UNICODE, DATA, or DATASET(<emphasis>recstruct</emphasis>). Se omitido, 
  <emphasis>type</emphasis>  é INTEGER.</entry>
        </row>

      </tbody>
    </tgroup>
  </informaltable>
  

  <para>O  <emphasis role="bold">SET OF</emphasis> value type<indexterm>
      <primary><emphasis role="bold">SET OF</emphasis> value type</primary>
    </indexterm>  define atributos que são um conjunto de elementos de dados. Todos os elementos do conjunto devem ser do mesmo value type. <emphasis>type</emphasis>. O  DefaultValue poderá ser a palavra-chave ALL se o ValueType for SET (consulte a palavra-chave SETSET) para indicar todos os valores possíveis para esse tipo de conjunto, ou colchetes vazios<indexterm>
      <primary>square brackets</primary>
    </indexterm> ([ ]) para indicar que não há nenhum valor possível para esse tipo de conjunto.</para>

  <para>Exemplo:</para>

  <programlisting>SET OF INTEGER1 SetIntOnes := [1,2,3,4,5]; SET OF STRING1 SetStrOnes := ['1','2','3','4','5']; SET OF STRING1 SetStrOne1 := (SET OF STRING1)SetIntOnes; //type casting sets is allowed r := {STRING F1, STRING2 F2}; SET OF DATASET(r) SetDS := [ds1, ds2, ds3]; StringSetFunc(SET OF STRING passedset) := AstringValue IN passedset; //a set of string constants will be passed to this function HasNarCode(SET s) := Trades.trd_narr1 IN s OR Trades.trd_narr2 IN s; // HasNarCode takes a parameter that specifies the set of valid // Narrative Code values (all INTEGERs) SET OF INTEGER1 SetClsdNar := [65,66,90,114,115,123]; NarCodeTrades := Trades(HasNarCode(SetClsdNar)); // Using HasNarCode(SetClsdNar) is equivalent to: // Trades.trd_narr1 IN [65,66,90,114,115,123] OR // Trades.trd_narr2 IN [65,66,90,114,115,123]</programlisting>

  <para>Ver também: <link linkend="Function_Attributes__Parameter_Passing">Funções dos atributos (Especificações de parâmetros),</link>), <link linkend="Set_Ordering_and_Indexing">Classificação e indexação de conjuntos</link></para>
</sect1>
