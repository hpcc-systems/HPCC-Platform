<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="REGEXREPLACE">
  <title>REGEXREPLACE</title>

  <para><emphasis role="bold">REGEXREPLACE<indexterm>
      <primary>REGEXREPLACE</primary>
    </indexterm><indexterm>
      <primary>REGEXREPLACE function</primary>
    </indexterm>(</emphasis><emphasis>regex, text, replacement
  </emphasis><emphasis role="bold">[, NOCASE<indexterm>
      <primary>NOCASE</primary>
    </indexterm>])</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.60pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>regex</emphasis></entry>

            <entry>Uma expressão Perl regular padrão.</entry>
          </row>

          <row>
            <entry><emphasis>text</emphasis></entry>

            <entry>O texto a ser analisado.</entry>
          </row>

          <row>
            <entry><emphasis>replacement</emphasis></entry>

            <entry>O texto de substituição. Nesta string, $0 refere-se à 
	    substring que correspondeu com o padrão  <emphasis>regex</emphasis> 
	    , e $1, $2, $3... corresponde com o primeiro, segundo, terceiro... 
	    grupos no padrão.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">NOCASE</emphasis></entry>

            <entry>Opcional. Especifica uma busca sem distinção entre 
	    maiúsculas e minúsculas.</entry>
          </row>

          <row>
            <entry>Return:</entry>

            <entry>REGEXREPLACE retorna um único valor.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>A função  <emphasis role="bold">REGEXREPLACE </emphasis> usa 
  <emphasis>regex<indexterm>
      <primary>regex</primary>
    </indexterm></emphasis>  para analisar o  <emphasis>texto</emphasis>  e 
    localizar correspondências, a fim de em seguida substituí-las com a string 
    de  <emphasis>substituição.</emphasis> A <emphasis>regex</emphasis> uma 
    expressão Perl regular padrão<indexterm>
      <primary>Perl regular expression</primary>
    </indexterm>. Usamos bibliotecas de terceiros para suportar isso. 
    Portanto, para texto de código único consulte os documentos Boost em 
    <emphasis>text</emphasis> <ulink
  url="http://www.boost.org/doc/libs/1_58_0/libs/regex/doc/html/index.html">http://www.boost.org/doc/libs/1_58_0/libs/regex/doc/html/index.html</ulink>. 
  Observe que a versão da biblioteca Boost pode variar de acordo com sua 
  distribuição. Para  <emphasis>texto</emphasis> unicode, consulte os 
  documentos ICU nas seções “Regular Expression Metacharacters” 
  (Metacaracteres de expressão regular) e “Regular Expression Operators” 
  (Operadores de expressão regular) em <emphasis
  role="underline">http://userguide.icu-project.org/strings/regexp</emphasis>
   e os links indicados lá, especificamente a seção “UnicodeSet patterns” 
   (Padrões UnicodeSet) em http://userguide.icu-project.org/strings/unicodeset.
  <emphasis
  role="underline">http://userguide.icu-project.org/strings/unicodeset</emphasis>. 
  Nós usamos a versão 2.6, que deve suportar todos os recursos 
  listados.</para>

  <para>Exemplo:</para>

  <programlisting>REGEXREPLACE('(.a)t', 'the cat sat on the mat', '$1p');
        //ASCII
REGEXREPLACE(u'(.a)t', u'the cat sat on the mat', u'$1p');
        //UNICODE
// both of these examples return 'the cap sap on the map'

inrec := {STRING10 str, UNICODE10 ustr};
inset := DATASET([{'She', u'Eins'}, {'Sells', u'Zwei'},
{'Sea', u'Drei'}, {'Shells', u'Vier'}], inrec);
outrec := {STRING10 orig, STRING10 withcase, STRING10
        wocase,
UNICODE10 uorig,UNICODE10 uwithcase,UNICODE10 uwocase};

outrec trans(inrec l) := TRANSFORM
SELF.orig := l.str;
SELF.withcase := REGEXREPLACE('s', l.str, 'f');
SELF.wocase := REGEXREPLACE('s', l.str, 'f', NOCASE);
SELF.uorig := l.ustr;
SELF.uwithcase := REGEXREPLACE(u'e', l.ustr, u'\u00EB');
SELF.uwocase := REGEXREPLACE(u'e', l.ustr, u'\u00EB',
        NOCASE);
END;
OUTPUT(PROJECT(inset, trans(LEFT)));

/* the result set is:
orig withcase wocase uorig uwithcase uwocase
She She fhe Eins Eins \xc3\xabins
Sells Sellf fellf Zwei Zw\xc3\xabi Zw\xc3\xabi
Sea Sea fea Drei Dr\xc3\xabi Dr\xc3\xabi
Shells Shellf fhellf Vier Vi\xc3\xabr Vi\xc3\xabr */
</programlisting>

  <para>Ver também: <link linkend="PARSE">PARSE</link>, <link
  linkend="REGEXFIND">REGEXFIND</link></para>
</sect1>
