<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Type_Casting">
  <title>Tipos de Conversão<indexterm>
      <primary>Type Casting</primary>
    </indexterm></title>

  <sect2 id="Explicit_Casting">
    <title>Conversão Explicita<indexterm>
        <primary>Explicit Casting</primary>
      </indexterm></title>

    <para>O uso mais comum de tipos de valor é converter explicitamente de um tipo para outro em expressões. Para isso, basta colocar o tipo de valor pretendido entre parênteses. Isso cria um operador de conversão.<indexterm>
        <primary>casting operator</primary>
      </indexterm> Em seguida, coloque o operador de conversão imediatamente à esquerda da expressão a ser convertida.</para>

    <para>Os dados serão convertidos do formato original para o novo formato (para manter o mesmo padrão de bits, consulte a função incorporada  <emphasis
    role="bold">TRANSFER</emphasis> ).</para>

    <programlisting>MyBoolean := (BOOLEAN) IF(SomeAttribute &gt; 10,1,0); // casts the INTEGER values 1 and 0 to a BOOLEAN TRUE or FALSE MyString := (STRING1) IF(SomeAttribute &gt; 10,1,0); // casts the INTEGER values 1 and 0 to a 1-character string // containing '1' or '0' MyValue := (INTEGER) MAP(MyString = '1' =&gt; MyString, '0'); // casts the STRING values '1' and '0' to an INTEGER 1 or 0 MySet := (SET OF INTEGER1) [1,2,3,4,5,6,7,8,9,10]; //casts from a SET OF INTEGER8 (the default) to SET OF INTEGER1</programlisting>
  </sect2>

  <sect2 id="Implicit_Casting">
    <title>Conversão Implícita<indexterm>
        <primary>Implicit Casting</primary>
      </indexterm></title>

    <para>Durante a avaliação da expressão, podem ocorrer conversões implícitas para diversos tipos de valores para avaliar corretamente a expressão. A conversão implícita significa sempre a promoção de um tipo de valor para outro: INTEGER para STRING ou INTEGER para REAL. Os tipos BOOLEAN não podem ser envolvidos em expressões de modo misto. Por exemplo, ao avaliar uma expressão usando valores INTEGER e REAL, o INTEGER será promovido para REAL no momento em que os dois valores são misturados e o resultado será um valor REAL.</para>

    <para>INTEGER e REAL podem ser livremente misturados em expressões. No ponto de contato entre eles, a expressão é tratada como REAL.
    <emphasis>Até</emphasis>  esse ponto de contato, a expressão poderá ser avaliada com o comprimento INTEGER. A divisão de valores INTEGER promove implicitamente os dois operandos para REAL antes da divisão.</para>

    <para>Esta expressão: (1+2+3+4)*(1.0*5)</para>

    <para>é avaliada como: (REAL)((INTEGER)1+(INTEGER)2+(INTEGER)3+(INTEGER)4)*(1.0*(REAL)5)</para>

    <para>e: 5/2+4+5 é avaliada como: (REAL)5/(REAL)2+(REAL)4+(REAL)5</para>

    <para>ao passo que: '5' + 4 é avaliado como: 5 + (STRING)4 //concatenação</para>

    <para>Os operadores de comparação são tratados como qualquer outra expressão de modo misto. Funções incorporadas que recebem vários valores e que podem retornar um ou mais desses valores (como MAP ou IF) são tratadas como expressões de modo misto e retornam o tipo básico comum. Esse tipo comum deve ser acessível às conversões implícitas padrão.</para>
  </sect2>

  <sect2 id="Type_Transfer">
    <title>Tipo de Transferência<indexterm>
        <primary>Type Transfer</primary>
      </indexterm></title>

    <para>A conversão de tipos converte dados do seu formato original para o novo formato. Para manter o mesmo padrão de bits, você deve usar a função incorporada  <emphasis
    role="bold">TRANSFER</emphasis>  ou a sintaxe de transferência de tipo, que é semelhante à sintaxe de conversão de tipos, com a adição de colchetes angulares (&gt;<emphasis>valuetype</emphasis>&lt;).</para>

    <programlisting>INTEGER1 MyInt := 65; //MyInt is an integer value 65 STRING1 MyVal := (&gt;STRING1&lt;) MyInt; //MyVal is "A" (ASCII 65)</programlisting>
  </sect2>

  <sect2 id="Casting_Rules">
    <title>Regras de Conversão<indexterm>
        <primary>Casting Rules</primary>
      </indexterm></title>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="3">
        <colspec colwidth="90pt" />

        <colspec colwidth="95.00pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis role="bold">De</emphasis></entry>

            <entry><emphasis role="bold">Para</emphasis></entry>

            <entry><emphasis role="bold">Resulta em</emphasis></entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>STRING</entry>

            <entry>Representação ASCII ou EBCDIC do valor</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>STRING</entry>

            <entry>Representação ASCII ou EBCDIC do valor, incluindo casas decimais e sinal</entry>
          </row>

          <row>
            <entry>REAL</entry>

            <entry>STRING</entry>

            <entry>Representação ASCII ou EBCDIC do valor, incluindo decimal e sinal - pode ser expressa em notação científica</entry>
          </row>

          <row>
            <entry>UNICODE</entry>

            <entry>STRING</entry>

            <entry>Representação ASCII ou EBCDIC com quaisquer caracteres não existentes aparecendo como código de controle SUBstitute (0x1A em ASCII ou 0x3F em EBCDIC) e quaisquer caracteres ASCII ou EBCDIC inválidos aparecendo como o ponto de código de substituição (0xFFFD)</entry>
          </row>

          <row>
            <entry>UTF8</entry>

            <entry>STRING</entry>

            <entry>Representação ASCII ou EBCDIC com quaisquer caracteres não existentes aparecendo como código de controle SUBstitute (0x1A em ASCII ou 0x3F em EBCDIC) e quaisquer caracteres ASCII ou EBCDIC inválidos aparecendo como o ponto de código de substituição (0xFFFD)</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>QSTRING</entry>

            <entry>Representação ASCII em maiúsculas</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>UNICODE</entry>

            <entry>Representação UNICODE do valor</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>UNICODE</entry>

            <entry>Representação UNICODE do valor, incluindo casas decimais e sinal</entry>
          </row>

          <row>
            <entry>REAL</entry>

            <entry>UNICODE</entry>

            <entry>Representação UNICODE do valor, incluindo decimal e sinal - pode ser expressa em notação científica</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>UTF8</entry>

            <entry>Representação UTF8 do valor</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>UTF8</entry>

            <entry>Representação UNICODE do valor, incluindo casas decimais e sinal</entry>
          </row>

          <row>
            <entry>REAL</entry>

            <entry>UTF8</entry>

            <entry>A representação UTF8 do valor, incluindo decimal e sinal - pode ser expressa em notação científica</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>REAL</entry>

            <entry>O valor será convertido sem perda de precisão quando o valor for maior que 15 dígitos significativos</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>REAL4</entry>

            <entry>O valor será convertido sem perda de precisão quando o valor for maior que 7 dígitos significativos</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>REAL</entry>

            <entry>Parte de sinal, inteiro e casas decimais do valor da string</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>REAL</entry>

            <entry>O valor será convertido sem perda de precisão quando o valor for maior que 15 dígitos significativos</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>REAL4</entry>

            <entry>O valor será convertido sem perda de precisão quando o valor for maior que 7 dígitos significativos</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>DECIMAL</entry>

            <entry>Perda de precisão se DECIMAL for muito pequeno</entry>
          </row>

          <row>
            <entry>REAL</entry>

            <entry>DECIMAL</entry>

            <entry>Perda de precisão se DECIMAL for muito pequeno</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>DECIMAL</entry>

            <entry>Parte de sinal, inteiro e casas decimais do valor da string</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>INTEGER</entry>

            <entry>Parte de sinal e inteiro do valor da string</entry>
          </row>

          <row>
            <entry>REAL</entry>

            <entry>INTEGER</entry>

            <entry>Somente valor inteiro, a parte decimal é truncada</entry>
          </row>

          <row>
            <entry>DECIMAL</entry>

            <entry>INTEGER</entry>

            <entry>Somente valor inteiro, a parte decimal é truncada</entry>
          </row>

          <row>
            <entry>INTEGER</entry>

            <entry>BOOLEAN</entry>

            <entry>0 = FALSE, qualquer outro valor = TRUE</entry>
          </row>

          <row>
            <entry>BOOLEAN</entry>

            <entry>INTEGER</entry>

            <entry>FALSE = 0, TRUE = 1</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>BOOLEAN</entry>

            <entry>“ = FALSE, qualquer outro valor = TRUE</entry>
          </row>

          <row>
            <entry>BOOLEAN</entry>

            <entry>STRING</entry>

            <entry>FALSE = '', TRUE = '1'</entry>
          </row>

          <row>
            <entry>DATA</entry>

            <entry>STRING</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>STRING</entry>

            <entry>DATA</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>DATA</entry>

            <entry>UNICODE</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>UNICODE</entry>

            <entry>DATA</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>DATA</entry>

            <entry>UTF8</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>UTF8</entry>

            <entry>DATA</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>UTF8</entry>

            <entry>UNICODE</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>

          <row>
            <entry>UNICODE</entry>

            <entry>UTF8</entry>

            <entry>O valor é convertido sem tradução</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para><emphasis role="bold"> </emphasis>As regras de conversão de STRING de e para qualquer outro tipo numérico também se aplicam igualmente a todos os tipos de string. Todas as regras de conversão se aplicam igualmente a conjuntos (usando a sintaxe SET OF 
    <emphasis>type</emphasis> ).</para>
  </sect2>
</sect1>
