<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="RANK">
  <title>RANK</title>

  <para><emphasis role="bold">RANK<indexterm>
      <primary>RANK</primary>
    </indexterm><indexterm>
      <primary>RANK function</primary>
    </indexterm>(</emphasis><emphasis>position, set </emphasis><emphasis
  role="bold">[ </emphasis><emphasis>,</emphasis><emphasis
  role="bold">DESCEND<indexterm>
      <primary>DESCEND</primary>
    </indexterm> ])</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="84.45pt" />

        <colspec colwidth="268.35pt" />

        <tbody>
          <row>
            <entry><emphasis>position</emphasis></entry>

            <entry>Um valor inteiro que indica o elemento a ser retornado do 
	    conjunto classificado.</entry>
          </row>

          <row>
            <entry><emphasis>set</emphasis></entry>

            <entry>O conjunto de valores.</entry>
          </row>

          <row>
            <entry><emphasis role="bold">DESCEND</emphasis></entry>

            <entry>Opcional. Indica a classificação de ordem 
	    decrescente.</entry>
          </row>

          <row>
            <entry>Return:</entry>

            <entry>RANK retorna um único valor.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>A função  <emphasis role="bold">RANK </emphasis> classifica o 
  <emphasis>conjunto</emphasis>  em ordem ascendente (ou decrescente se DESCEND 
  estiver presente), e retorna a posição ordinal (o valor do índice) do 
  elemento de  <emphasis>posição</emphasis>  do  <emphasis>conjunto </emphasis> 
  classificado no conjunto não classificado. Trata-se do oposto de 
  RANKED.</para>

  <para>Exemplo:</para>

  <programlisting>Ranking := RANK(1,[20,30,10,40]);
// returns 2 - 1st element (20) in unsorted set is
// 2nd element after sorting to [10,20,30,40]
Ranking := RANK(1,[20,30,10,40],DESCEND);
// returns 3 - 1st element (20) in unsorted set is
// 3rd element after sorting to [40,30,20,10]
</programlisting>

  <para>Ver também: <link linkend="RANKED">RANKED</link>, <link
  linkend="SORT">SORT</link>, <link linkend="SORTED">SORTED</link>, <link
  linkend="Recordset_Filtering">Conjuntos e Filtros</link></para>
</sect1>
