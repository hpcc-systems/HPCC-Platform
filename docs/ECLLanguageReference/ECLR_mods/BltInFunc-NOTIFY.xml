<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="NOTIFY">
  <title>NOTIFY</title>
  <informalexample id="SchNOTIFY">
  <para><emphasis role="bold">[</emphasis><emphasis>attributename</emphasis>
  :=<emphasis role="bold"> ] <indexterm>
      <primary>NOTIFY function</primary>
    </indexterm>NOTIFY<indexterm>
      <primary>NOTIFY</primary>
    </indexterm>(</emphasis><emphasis> event </emphasis><emphasis
  role="bold">[</emphasis><emphasis>, parm </emphasis><emphasis role="bold">]
  [</emphasis><emphasis>, expression </emphasis><emphasis role="bold">]
  )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="83.05pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>attributename</emphasis></entry>

            <entry>Optional. The identifier for this action.</entry>
          </row>

          <row>
            <entry><emphasis>event</emphasis></entry>

            <entry>The EVENT function, or a case-insensitive string constant
            naming the event to generate.</entry>
          </row>

          <row>
            <entry><emphasis>parm</emphasis></entry>

            <entry>Optional. A case-insensitive string constant containing the
            event's parameter.</entry>
          </row>

          <row>
            <entry><emphasis>expression</emphasis></entry>

            <entry>Optional. A case-insensitive string constant allowing
            simple message passing, to restrict the event to a specific
            workunit.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">NOTIFY </emphasis>action fires the
  <emphasis>event</emphasis> so that the WAIT function or WHEN workflow
  service can proceed with operations they are defined to perform.</para>

  <para>The <emphasis>expression</emphasis> parameter allows you to define a
  service in ECL that is initiated by an <emphasis>event</emphasis>, and only
  responds to the workunit that initiated it.</para>

  <para>Example:</para>

  <programlisting>NOTIFY('testevent', 'foobar');
  
receivedFileEvent(STRING name) := EVENT('ReceivedFile', name);
NOTIFY(receivedFileEvent('myfile'));

//as a service
doMyService := FUNCTION
OUTPUT('Did a Service for: ' + 'EVENTNAME=' + EVENTNAME);
NOTIFY(EVENT('MyServiceComplete',
'&lt;Event&gt;&lt;returnTo&gt;FRED&lt;/returnTo&gt;&lt;/Event&gt;'),
EVENTEXTRA('returnTo'));
RETURN EVENTEXTRA('returnTo');
END;
     
doMyService : WHEN('MyService');
// and a call to the service
NOTIFY('MyService',
'&lt;Event&gt;&lt;returnTo&gt;'+WORKUNIT+'&lt;/returnTo&gt;....&lt;/Event&gt;');
WAIT('MyServiceComplete');
OUTPUT('WORKUNIT DONE')
</programlisting>
</informalexample>
  <para>See Also: <link linkend="EVENT">EVENT</link>, <link
  linkend="EVENTNAME">EVENTNAME</link>, <link
  linkend="EVENTEXTRA">EVENTEXTRA</link>, <link linkend="CRON">CRON</link>,
  <link linkend="WHEN">WHEN</link>, <link linkend="WAIT">WAIT</link></para>
</sect1>
