<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book lang="en_US" xml:base="../">
  <bookinfo>
    <!-- DNT-Start --><title>Dynamic ESDL</title><!-- DNT-End -->

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/redswooshWithLogo3.jpg" />
      </imageobject>
    </mediaobject>

    <author>
      <surname>Boca Raton Documentation Team</surname>
    </author>

    <legalnotice>
      <para>We welcome your comments and feedback about this document via
      email to <email>docfeedback@hpccsystems.com</email></para>

      <para>Please include <emphasis role="bold">Documentation
      Feedback</emphasis> in the subject line and reference the document name,
      page numbers, and current Version Number in the text of the
      message.</para>

      <para>LexisNexis and the Knowledge Burst logo are registered trademarks
      of Reed Elsevier Properties Inc., used under license.</para>

      <para><!-- DNT-Start -->HPCC<!-- DNT-End --> Systems<superscript>®</superscript> is a registered trademark
      of LexisNexis Risk Data Management Inc.</para>

      <para>Other products, logos, and services may be trademarks or
      registered trademarks of their respective companies.</para>

      <para>All names and example data used in this manual are fictitious. Any
      similarity to actual persons, living or dead, is purely
      coincidental.</para>

      <para></para>
    </legalnotice>

    <xi:include href="common/Version.xml"
                xpointer="xpointer(//*[@id='FooterInfo'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <xi:include href="common/Version.xml"
                xpointer="xpointer(//*[@id='DateVer'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <corpname>HPCC Systems<superscript>®</superscript></corpname>

    <xi:include href="common/Version.xml"
                xpointer="xpointer(//*[@id='Copyright'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <mediaobject role="logo">
      <imageobject>
        <imagedata fileref="images/LN_Rightjustified.jpg" />
      </imageobject>
    </mediaobject>
  </bookinfo>

  <chapter>
    <!-- DNT-Start --><title>Dynamic ESDL</title><!-- DNT-End -->

    <para>Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> (Enterprise Service Description Language) is a
    methodology that helps you develop and manage web-based query interfaces
    quickly and consistently.</para>

    <para>Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> takes an interface-first development approach. It
    leverages the <!-- DNT-Start -->ESDL<!-- DNT-End --> Language to create a common interface âcontractâ that
    both Roxie Query and Web interface developers will adhere to. It is
    intended to allow developers to create production web services, with clean
    interfaces that can evolve and grow over time without breaking existing
    applications.</para>

    <para><!-- DNT-Start -->ESDLâ<!-- DNT-End -->s built-in versioning support helps ensure compiled and
    deployed applications continue to operate while changes are made to the
    deployed serviceâs interface for new functionality.</para>

    <para><!-- DNT-Start -->ESDLâ<!-- DNT-End -->s ability to define and reuse common structures helps maintain
    consistent interfaces across methods.</para>

    <para>The Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> service is built to scale horizontally, and hooks
    are provided to add custom logging and security to help create fully
    âproductionalizedâ web services.</para>

    <para>Once a service is deployed, application developers and end-users can
    consume the service using <!-- DNT-Start -->REST<!-- DNT-End -->, <!-- DNT-Start -->JSON<!-- DNT-End -->, <!-- DNT-Start -->XML<!-- DNT-End -->, <!-- DNT-Start -->SOAP<!-- DNT-End -->, or form encoded posts.
    Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> provides quick and easy access to a <!-- DNT-Start -->WSDL<!-- DNT-End -->, live forms, sample
    requests and responses, and testing interfaces to allow developers to test
    logic changes, data changes, or new features, as well as to interact with
    the service directly using <!-- DNT-Start -->SOAP<!-- DNT-End -->, <!-- DNT-Start -->XML<!-- DNT-End -->, or <!-- DNT-Start -->JSON<!-- DNT-End -->.</para>

    <para></para>
  </chapter>

  <chapter id="DESDLWorkflowTutorial">
    <!-- DNT-Start --><title>Dynamic ESDL Workflow Tutorial</title><!-- DNT-End -->

    <sect1 id="DESDLBefore" role="nobrk">
      <!-- DNT-Start --><title>Before You Begin...</title><!-- DNT-End -->

      <para>You will need:</para>

      <itemizedlist>
        <listitem>
          <para>Access to an <!-- DNT-Start -->HPCC<!-- DNT-End --> Cluster (version 6.4.2 or later) that you
          can reconfigure using Configuration Manager. This can be one running
          in a Virtual Machine.</para>

          <para>You should have a basic understanding of Configuration Manager
          and how to use it. You also need access to the server(s) with
          sufficient rights to modify the environment.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>Access to <!-- DNT-Start -->ECL<!-- DNT-End --> Watch and WsECL (using a browser).</para>

          <para>For purposes of this tutorial, we assume that you know how to
          submit a published using WsECL.</para>
        </listitem>

        <listitem>
          <para>The <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End --> (version 6.4.2 or later)</para>

          <para>You won't need to know the <!-- DNT-Start -->ECL<!-- DNT-End --> or <!-- DNT-Start -->ESDL<!-- DNT-End --> languages to follow the
          steps in this book, but you will need to understand both to develop
          dESDL-based applications.</para>

          <para>For purposes of this tutorial, you should know the basics of
          using the <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End --> including how to add files to your repository, how
          to compile <!-- DNT-Start -->ECL<!-- DNT-End --> Code, and how to publish a compiled query.</para>
        </listitem>
      </itemizedlist>

      <para><emphasis role="bold">dESDL and <!-- DNT-Start -->LDAP<!-- DNT-End --> Security</emphasis></para>

      <para>If your <!-- DNT-Start -->HPCC<!-- DNT-End --> platform is configured to use <!-- DNT-Start -->LDAP<!-- DNT-End --> security, you must
      ensure any user who will be publishing <!-- DNT-Start -->ESDL<!-- DNT-End --> Definitions has Access to
      <emphasis role="bold"><!-- DNT-Start -->ESDL<!-- DNT-End --> configuration service</emphasis> set to
      <emphasis role="bold">Allow Full</emphasis>, as shown below.</para>

      <para><graphic fileref="images/desdl-LDAP.jpg" /></para>

      <para></para>
    </sect1>

    <sect1 id="DESDLWorkflowOverview">
      <!-- DNT-Start --><title>Overview</title><!-- DNT-End -->

      <para>In this tutorial, we will:</para>

      <para></para>

      <itemizedlist>
        <listitem>
          <para>Use Configuration Manager to add a Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End -->-based <!-- DNT-Start -->ESP<!-- DNT-End -->
          Service and bind it to a port on an <!-- DNT-Start -->ESP<!-- DNT-End --> server.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Write an <!-- DNT-Start -->ESDL<!-- DNT-End --> Service Definition using the editor in the <!-- DNT-Start -->ECL<!-- DNT-End -->
          <!-- DNT-Start -->IDE<!-- DNT-End -->.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Generate <!-- DNT-Start -->ECL<!-- DNT-End --> from the <!-- DNT-Start -->ESDL<!-- DNT-End --> Service Definition within the <!-- DNT-Start -->ECL<!-- DNT-End -->
          <!-- DNT-Start -->IDE<!-- DNT-End -->.</para>

          <para>This step automatically generates an <!-- DNT-Start -->ECL<!-- DNT-End --> file in your <!-- DNT-Start -->ECL<!-- DNT-End -->
          repository. You will use the definitions in that <!-- DNT-Start -->ECL<!-- DNT-End --> file when you
          write the <!-- DNT-Start -->ECL<!-- DNT-End --> query that will deliver the result (the business
          logic).</para>
        </listitem>

        <listitem>
          <para>Write the <!-- DNT-Start -->ECL<!-- DNT-End --> for the business logic of the query, compile it,
          and then publish the query to a Roxie cluster.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Publish the Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> definition from the <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End -->.</para>

          <para></para>
        </listitem>

        <listitem>
          <para>Bind the service methods to the Roxie queries in ECLWatch
          using an <!-- DNT-Start -->XML<!-- DNT-End --> formatted configuration.</para>

          <para></para>
        </listitem>
      </itemizedlist>

      <para></para>
    </sect1>

    <sect1 id="DESDLConfigureAndBind">
      <!-- DNT-Start --><title>Configure and Bind the dESDL Service</title><!-- DNT-End -->

      <para>In this portion of the tutorial, we will add an <!-- DNT-Start -->ESP<!-- DNT-End --> service and a
      service binding that reserves a port for the dynamic <!-- DNT-Start -->ESDL<!-- DNT-End -->
      service.</para>

      <para>This step is independent of the development and publishing of the
      actual Roxie query, so you can set it up before or after your query is
      ready.</para>

      <orderedlist>
        <listitem>
          <para>If it is running, stop the <!-- DNT-Start -->HPCC<!-- DNT-End --> system, using this command in
          a terminal window:</para>

          <!-- DNT-Start --><programlisting>sudo /etc/init.d/hpcc-init stop</programlisting><!-- DNT-End -->

          <para><informaltable colsep="1" frame="all" rowsep="1">
              <?dbfo keep-together="always"?>

              <tgroup cols="2">
                <colspec colwidth="49.50pt" />

                <colspec />

                <tbody>
                  <row>
                    <entry><inlinegraphic
                    fileref="images/OSSgr3.png" /></entry>

                    <entry>You can use this command to confirm <!-- DNT-Start -->HPCC<!-- DNT-End --> processes
                    are stopped:<para> <programlisting>sudo /etc/init.d/hpcc-init status</programlisting>
                    </para></entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable></para>
        </listitem>

        <listitem>
          <para>Start the Configuration Manager service.<emphasis
          role="bold"></emphasis><programlisting>sudo /opt/HPCCSystems/sbin/configmgr
</programlisting></para>
        </listitem>

        <listitem>
          <para>Using a Web browser, go to the Configuration Manager's
          interface:</para>

          <!-- DNT-Start --><programlisting>http://&lt;<emphasis>node ip </emphasis>&gt;:8015</programlisting><!-- DNT-End -->

          <para>The Configuration Manager startup wizard displays.</para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Select <emphasis role="bold">Advanced View</emphasis> and then
          select the source environment <!-- DNT-Start -->XML<!-- DNT-End --> file to edit.</para>

          <para><graphic fileref="images/desdl-openconfig.jpg" /></para>
        </listitem>

        <listitem>
          <para>Press the <emphasis role="bold">Next</emphasis> button.</para>
        </listitem>

        <listitem>
          <para>Check the <emphasis role="bold">Write Access</emphasis> box at
          the top of the page.</para>

          <para>Default access is read-only. Many options are only available
          when write-access is enabled.</para>
        </listitem>

        <listitem>
          <para>Right-click on <emphasis role="bold">Esp Services</emphasis>
          and select <emphasis role="bold">Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --></emphasis> from
          <emphasis role="bold">New Esp Services.</emphasis></para>

          <para><graphic fileref="images/desdl-addDESDL.jpg" /></para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Change the name for the service. For this tutorial, let's name
          it <emphasis role="bold">MathService</emphasis>.</para>

          <para><graphic fileref="images/dsdl-NametheService.jpg" /></para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Select your <!-- DNT-Start -->ESP<!-- DNT-End -->, then select the <emphasis role="bold"><!-- DNT-Start -->ESP<!-- DNT-End -->
          Service Bindings</emphasis> tab.</para>

          <para><graphic fileref="images/desdl-ESPSVCBinding.jpg" /></para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Right-click in the list of bindings and select <emphasis
          role="bold">Add</emphasis></para>

          <para><graphic fileref="images/desdl-AddSVCBinding.jpg" /></para>
        </listitem>

        <listitem>
          <para>Provide a name, port, and then select the service from the
          drop list.</para>

          <para>For this tutorial, name it <emphasis
          role="bold">MathService</emphasis>, set the port to <emphasis
          role="bold">8003</emphasis>, and select <emphasis
          role="bold">MathService</emphasis> from the service drop list. This
          is service definition you added in an earlier step.</para>

          <para><graphic fileref="images/desdl-NameSVCBinding.jpg" /></para>
        </listitem>

        <listitem>
          <para>Press the Save As button and name your new <!-- DNT-Start -->XML<!-- DNT-End --> file <emphasis
          role="bold">NewEnvironment</emphasis>.</para>

          <para><graphic fileref="images/desdl-configSaveAs.jpg" /></para>
        </listitem>

        <listitem>
          <para>Return to the terminal window and press <emphasis
          role="bold">ctrl+c</emphasis> to close the Configuration
          Manager.</para>
        </listitem>

        <listitem>
          <para>Copy the NewEnvironment.xml file from the source directory to
          the /etc/HPCCSystems and rename the file to environment.xml</para>

          <!-- DNT-Start --><programlisting># for example
sudo cp /etc/HPCCSystems/source/NewEnvironment.xml /etc/HPCCSystems/environment.xml</programlisting><!-- DNT-End -->

          <para><informaltable colsep="1" frame="all" rowsep="1">
              <?dbfo keep-together="always"?>

              <tgroup cols="2">
                <colspec colwidth="49.50pt" />

                <colspec />

                <tbody>
                  <row>
                    <entry><inlinegraphic
                    fileref="images/caution.png" /></entry>

                    <entry>Make sure that you have sufficient privileges to
                    write file(s) to the destination directory before
                    attempting to copy. If prompted to overwrite the
                    destination file, you should answer <emphasis
                    role="bold">yes</emphasis>.</entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable></para>
        </listitem>

        <listitem>
          <para>Copy the <emphasis
          role="bold">/etc/HPCCSystems/environment.xml</emphasis> to <emphasis
          role="bold">/etc/HPCCSystems/</emphasis> on <emphasis
          role="bold">every</emphasis> node.</para>

          <!-- DNT-Start --><programlisting>sudo /opt/HPCCSystems/sbin/hpcc-push.sh -s &lt;sourcefile&gt; -t &lt;destinationfile&gt;</programlisting><!-- DNT-End -->
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Restart the <!-- DNT-Start -->HPCC<!-- DNT-End --> system on <emphasis
          role="bold">every</emphasis> node. The following command starts the
          <!-- DNT-Start -->HPCC<!-- DNT-End --> system on an individual node:</para>

          <!-- DNT-Start --><programlisting>sudo /etc/init.d/hpcc-init start</programlisting><!-- DNT-End -->

          <para></para>

          <informaltable colsep="1" frame="all" rowsep="1">
            <?dbfo keep-together="always"?>

            <tgroup cols="2">
              <colspec colwidth="49.50pt" />

              <colspec />

              <tbody>
                <row>
                  <entry><inlinegraphic fileref="images/OSSgr3.png" /></entry>

                  <entry><para>You may want to create a script to push this
                  command out to every node. A sample script is provided with
                  <!-- DNT-Start -->HPCC<!-- DNT-End -->. Use the following command to start <!-- DNT-Start -->HPCC<!-- DNT-End --> on all
                  nodes:</para> <para> <programlisting>sudo /opt/HPCCSystems/sbin/hpcc-run.sh -a hpcc-init start</programlisting>
                  </para></entry>
                </row>
              </tbody>
            </tgroup>
          </informaltable>

          <para></para>
        </listitem>
      </orderedlist>
    </sect1>

    <sect1 id="DESDLWriteDef">
      <!-- DNT-Start --><title>Write the ESDL Service Definition</title><!-- DNT-End -->

      <para>In this portion of the tutorial, we will write the Service
      Definitions in the <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End -->. The program listing below shows an <!-- DNT-Start -->ESDL<!-- DNT-End -->
      service called <emphasis>MathService</emphasis>. It contains one method,
      <emphasis>AddThis</emphasis>, with a request and a response
      defined.</para>

      <orderedlist>
        <listitem>
          <para>Start the <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End --> (Start &gt;&gt; All Programs &gt;&gt; <!-- DNT-Start -->HPCC<!-- DNT-End -->
          Systems &gt;&gt; <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End --> )</para>
        </listitem>

        <listitem>
          <para>Log in to your environment</para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Right-click on the <emphasis role="bold">My Files</emphasis>
          folder in the Repository window, and select <emphasis
          role="bold">Insert Folder</emphasis> from the pop-up menu.</para>

          <para><figure>
              <title>Insert Folder</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-insertFolder.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>

          <para>For purposes of this tutorial, letâs create a folder called
          <emphasis role="bold">MathService</emphasis>.</para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Enter <emphasis role="bold">MathService</emphasis> for the
          label, then press the <emphasis role="bold"><!-- DNT-Start -->OK<!-- DNT-End --></emphasis>
          button.</para>

          <para><figure>
              <title>Enter Folder Label</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-insertFolder2.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>
        </listitem>

        <listitem>
          <para>Right-click on the <emphasis role="bold">MathService
          </emphasis>folder, and select <emphasis role="bold">Insert
          File</emphasis> from the pop-up menu.</para>
        </listitem>

        <listitem>
          <?dbfo keep-together="always"?>

          <para>Enter <emphasis role="bold">MathService</emphasis> for the
          label, select <emphasis><!-- DNT-Start -->ESDL<!-- DNT-End --></emphasis> as the <emphasis
          role="bold">Type</emphasis>, then press the <emphasis
          role="bold"><!-- DNT-Start -->OK<!-- DNT-End --></emphasis> button.</para>

          <para><figure>
              <title>Insert File</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-insertFile.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>

          <para>An Editor Window opens.</para>

          <para><figure>
              <title>ESDL file</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-newDESDL.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>

          <para>Notice that some text has been written for you in the
          window.</para>

          <para></para>
        </listitem>
      </orderedlist>

      <?hard-pagebreak ?>

      <orderedlist continuation="continues">
        <listitem>
          <para><?dbfo keep-together="always"?>Write the following code,
          replacing what was written, in the editor workspace :</para>

          <para><programlisting>ESPservice [auth_feature("None")]  MathService
{
  ESPmethod AddThis(AddThisRequest, AddThisResponse);
};

ESPrequest AddThisRequest 
{
  int  FirstNumber;
  int  SecondNumber;
};
    
ESPresponse AddThisResponse 
{
  int  Answer;
};
</programlisting> <figure>
              <title>ESDL Code in Editor Window</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-codeInEditor.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>
        </listitem>

        <listitem>
          <para><?dbfo keep-together="always"?>Save the file using <emphasis
          role="bold">ctrl+s</emphasis> or the <emphasis role="bold">File
          &gt;&gt; Save</emphasis> menu option.</para>

          <para>Notice that a new <!-- DNT-Start -->ECL<!-- DNT-End --> file is now in the repository folder.
          Saving the <!-- DNT-Start -->ESDL<!-- DNT-End --> file automatically generated a file named
          <emphasis>MathService.ecl</emphasis> in the current directory. You
          could generate this ECl using the dropdown button and selecting
          <emphasis role="bold">Generate <!-- DNT-Start -->ECL<!-- DNT-End --></emphasis>.</para>

          <para><figure>
              <title>Saving an ESDL file generates ECL</title>

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-saveESDLFile.jpg" />
                </imageobject>
              </mediaobject>
            </figure></para>

          <para>This provides the <!-- DNT-Start -->ECL<!-- DNT-End --> Structures you will <!-- DNT-Start -->IMPORT<!-- DNT-End --> and use in
          the <!-- DNT-Start -->ECL<!-- DNT-End --> code you write to support the service method.</para>
        </listitem>
      </orderedlist>
    </sect1>

    <sect1>
      <!-- DNT-Start --><title>Writing the ECL</title><!-- DNT-End -->

      <para>First, let's examine the generated <!-- DNT-Start -->ECL<!-- DNT-End --> code in
      MathService.ecl.</para>

      <!-- DNT-Start --><programlisting><emphasis role="green">/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from MathService.xml. ***/
/*===================================================*/</emphasis>

export MathService := MODULE

export t_AddThisRequest := record
  integer FirstNumber {xpath('FirstNumber')};
  integer SecondNumber {xpath('SecondNumber')};
end;

export t_AddThisResponse := record
  integer Answer {xpath('Answer')};
end;
end;

<emphasis role="green">/*** Not to be hand edited (changes will be lost on re-generation) ***/
/*** ECL Interface generated by esdl2ecl version 1.0 from MathService.xml. ***/
/*===================================================*/</emphasis>
</programlisting><!-- DNT-End -->

      <para>Notice it created a file named MathService.ecl which has defined a
      <!-- DNT-Start -->MODULE<!-- DNT-End --> named MathService. Remember in <!-- DNT-Start -->ECL<!-- DNT-End -->, the name of the file
      (MathService) <emphasis>must always exactly match</emphasis> the name of
      the single <!-- DNT-Start -->EXPORT<!-- DNT-End --> definition (MathService) contained in that
      file.</para>

      <para>Next, we will write the <!-- DNT-Start -->ECL<!-- DNT-End --> code to support the functionality of
      the AddThis method. We will <!-- DNT-Start -->IMPORT<!-- DNT-End --> the MathService module and reference
      the request and response structures.</para>

      <para><orderedlist>
          <listitem>
            <para>Right-click on the <emphasis role="bold">MathService
            </emphasis>Folder, and select <emphasis role="bold">Insert
            File</emphasis> from the pop-up menu.</para>
          </listitem>

          <listitem>
            <para>Enter <emphasis role="bold">AddThis</emphasis> for the
            label, select <emphasis><!-- DNT-Start -->ECL<!-- DNT-End --></emphasis> as the <emphasis
            role="bold">Type</emphasis>, then press the <emphasis
            role="bold"><!-- DNT-Start -->OK<!-- DNT-End --></emphasis> button.</para>

            <para>An Editor Window opens.</para>
          </listitem>

          <listitem>
            <para>Write <!-- DNT-Start -->ECL<!-- DNT-End --> to support the service:</para>

            <!-- DNT-Start --><programlisting>IMPORT MathService;
rec_in := MathService.MathService.t_AddThisRequest;

First_Row := ROW ([], rec_in) : STORED ('AddThisRequest', FEW);

res:= first_row.FirstNumber + first_row.SecondNumber; 
ds_out := ROW ({res},MathService.MathService.t_AddThisResponse);
OUTPUT(ds_out, NAMED('AddThisResponse')); </programlisting><!-- DNT-End -->
          </listitem>

          <listitem>
            <para><?dbfo Â keep-together="always"?>Using the <emphasis
            role="bold">Target</emphasis> drop list, select
            <emphasis>Roxie</emphasis> as the Target cluster.</para>

            <para><figure>
                <title>Target Roxie</title>

                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/desdl-targetRoxie.jpg" />
                  </imageobject>
                </mediaobject>
              </figure></para>
          </listitem>

          <listitem>
            <para>In the Builder window, in the upper left corner the
            <emphasis role="bold">Submit</emphasis> button has a drop down
            arrow next to it. Select the arrow, then select <emphasis
            role="bold"><!-- DNT-Start -->Compile<!-- DNT-End --></emphasis>.</para>

            <figure>
              <!-- DNT-Start --><title>Compile</title><!-- DNT-End -->

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-compileService.jpg" />
                </imageobject>
              </mediaobject>
            </figure>
          </listitem>

          <listitem>
            <para><?dbfo keep-together="always"?>When the workunit finishes,
            it will display a green circle indicating it has compiled.</para>

            <para><figure>
                <title>Compiled</title>

                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/desdl-compiled.jpg" />
                  </imageobject>
                </mediaobject>
              </figure></para>
          </listitem>

          <listitem>
            <para>Select the workunit tab for the AddThis workunit that you
            just compiled.</para>

            <para>This opens the workunit in an <!-- DNT-Start -->ECL<!-- DNT-End --> Watch tab.</para>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Publish</emphasis> action
            button, then verify the information in the dialog and press
            <emphasis role="bold">Submit</emphasis>.</para>

            <para><figure>
                <title>Publish Query</title>

                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/desdl-publishQuery.jpg" />
                  </imageobject>
                </mediaobject>
              </figure>This publishes the AddThis query to the Roxie.</para>
          </listitem>

          <listitem>
            <para>Test the service using WsECL :<programlisting>http://&lt;<emphasis>esp ip </emphasis>&gt;:8002 </programlisting></para>
          </listitem>
        </orderedlist></para>
    </sect1>

    <sect1 id="DESDLPublishandBind">
      <!-- DNT-Start --><title>Publish the ESDL Service Definitions and Bind the ESDL
      Service</title><!-- DNT-End -->

      <para>In this portion of the tutorial, we will publish the <!-- DNT-Start -->ESDL<!-- DNT-End --> Service
      definitions to the System Data Store and bind the methods to the
      published Roxie query.</para>

      <para><orderedlist>
          <listitem>
            <para>Open the Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --> definition file (MathService.esdl) in
            the <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End -->.</para>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Publish</emphasis>
            button.</para>

            <para>This publishes the <!-- DNT-Start -->ESDL<!-- DNT-End --> Service definition to the <!-- DNT-Start -->ESP<!-- DNT-End -->
            Server. Next we will bind the <emphasis>AddThis</emphasis> method
            to the <emphasis>AddThis</emphasis> published query.</para>

            <para></para>
          </listitem>

          <listitem>
            <para>Open <!-- DNT-Start -->ECL<!-- DNT-End --> Watch in your browser (&lt;your <!-- DNT-Start -->ESP<!-- DNT-End -->
            ip&gt;:8010)</para>

            <para></para>
          </listitem>

          <listitem>
            <para>Select the Operations tab, then select <emphasis
            role="bold">Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --></emphasis>.</para>

            <para><figure>
                <title>Dynamic ESDL in ECLWatch</title>

                <mediaobject>
                  <imageobject>
                    <imagedata fileref="images/desdl-ECLWatch1.jpg" />
                  </imageobject>
                </mediaobject>
              </figure></para>
          </listitem>

          <listitem>
            <para><?dbfo keep-together="always"?>Select the <emphasis
            role="bold">Dynamic <!-- DNT-Start -->ESDL<!-- DNT-End --></emphasis> Tab, then expand
            <emphasis>myesp</emphasis> by clicking on the triangle next to
            it.</para>

            <figure>
              <!-- DNT-Start --><title>Add Binding</title><!-- DNT-End -->

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-addBinding.jpg" />
                </imageobject>
              </mediaobject>
            </figure>

            <para></para>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Add Binding</emphasis>
            button, then select <emphasis>MathService.1</emphasis> from the
            drop list and press the <emphasis role="bold">Apply</emphasis>
            button.</para>

            <para></para>
          </listitem>

          <listitem>
            <para>Select the <emphasis role="bold">Binding</emphasis> tab,
            then expand <emphasis>AddThis</emphasis> by clicking on the
            triangle next to it.</para>

            <para></para>
          </listitem>

          <listitem>
            <para>Provide the Method Configuration (in <!-- DNT-Start -->XML<!-- DNT-End --> format) in the text
            box.</para>

            <para><emphasis role="bold">Note: You must replace
            &lt;RoxieIPRange&gt; with the <!-- DNT-Start -->IP<!-- DNT-End --> Range of your Roxie
            servers.</emphasis></para>

            <!-- DNT-Start --><programlisting>&lt;Method name="AddThis"
        queryname="AddThis"
        querytype="roxie"
        url="http://<emphasis role="bold">&lt;RoxieIPRange&gt;</emphasis>:9876"/&gt;
</programlisting><!-- DNT-End -->

            <figure>
              <!-- DNT-Start --><title>Method Configuration</title><!-- DNT-End -->

              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/desdl-methodConfiguration.jpg" />
                </imageobject>
              </mediaobject>
            </figure>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Save</emphasis>
            button.</para>
          </listitem>

          <listitem>
            <para>Test the service using the new interface:<programlisting>http://&lt;<emphasis>node ip </emphasis>&gt;:8003</programlisting></para>
          </listitem>
        </orderedlist></para>
    </sect1>
  </chapter>

  <xi:include href="HPCCClientTools/CT_Mods/CT_ESDL_CLI.xml"
              xpointer="xpointer(//*[@id='ESDL_CLI'])"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <!-- DNT-Start --><!-- Moved the ESDL Language Reference to a separate book --><!-- DNT-End -->
</book>
