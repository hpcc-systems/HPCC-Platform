<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Indexing_into_SuperFiles">
  <!-- DNT-Start --><title>Indexing into SuperFiles</title><!-- DNT-End -->

  <sect2 id="SuperFiles_vs_SuperKeys">
    <!-- DNT-Start --><title>SuperFiles vs. SuperKeys</title><!-- DNT-End -->

    <para>A SuperFile may contain <!-- DNT-Start -->INDEX<!-- DNT-End --> files instead of <!-- DNT-Start -->DATASET<!-- DNT-End --> files, making
    it a SuperKey. All the same creation and maintenance processes and
    principles apply as described previously in the <emphasis>Creating and
    Maintaining SuperFiles</emphasis> article.</para>

    <para>However, <emphasis role="bold">a SuperKey may not contain <!-- DNT-Start -->INDEX<!-- DNT-End -->
    sub-files that directly reference the sub-files of a SuperFile using the
    {virtual(fileposition)} ârecord pointerâ mechanism </emphasis>(used by
    <!-- DNT-Start -->FETCH<!-- DNT-End --> and full-keyed <!-- DNT-Start -->JOIN<!-- DNT-End --> operations). This is because the
    {virtual(fileposition)} field is a virtual (exists only when the file is
    read from disk) field containing the relative byte position of each record
    within the single logical entity.</para>

    <para>The following attribute definitions used by the code examples in
    this article are declared in the DeclareData <!-- DNT-Start -->MODULE<!-- DNT-End --> structure
    attribute:</para>

    <!-- DNT-Start --><programlisting>EXPORT i1name := '~PROGGUIDE::SUPERKEY::IDX1';
EXPORT i2name := '~PROGGUIDE::SUPERKEY::IDX2';
EXPORT i3name := '~PROGGUIDE::SUPERKEY::IDX3';
EXPORT SFname := '~PROGGUIDE::SUPERKEY::SF1';
EXPORT SKname := '~PROGGUIDE::SUPERKEY::SK1';
EXPORT ds1 := DATASET(SubFile1,{Layout_Person,UNSIGNED8 RecPos {VIRTUAL(fileposition)}},THOR);
EXPORT ds2 := DATASET(SubFile2,{Layout_Person,UNSIGNED8 RecPos {VIRTUAL(fileposition)}},THOR);
EXPORT i1 := INDEX(ds1,{personid,RecPos},i1name);
EXPORT i2 := INDEX(ds2,{personid,RecPos},i2name);
EXPORT sf1 := DATASET(SFname,{Layout_Person,UNSIGNED8 RecPos {VIRTUAL(fileposition)}},THOR);
EXPORT sk1 := INDEX(sf1,{personid,RecPos},SKname);
EXPORT sk2 := INDEX(sf1,{personid,RecPos},i3name );
</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="There_is_a_Problem">
    <!-- DNT-Start --><title>There is a Problem</title><!-- DNT-End -->

    <para>The easiest way to illustrate the problem is to run the following
    code (this code is contained in IndexSuperFile1.<!-- DNT-Start -->ECL<!-- DNT-End -->) that uses two of the
    sub-files from the <emphasis>Creating and Maintaining
    SuperFiles</emphasis> article.</para>

    <!-- DNT-Start --><programlisting>IMPORT $;

OUTPUT($.DeclareData.ds1);
OUTPUT($.DeclareData.ds2);
</programlisting><!-- DNT-End -->

    <para>You will notice that the RecPos values returned for both of these
    datasets are exactly the same (0, 89, 178 ... ), which is to be expected
    since they both have the same fixed-length <!-- DNT-Start -->RECORD<!-- DNT-End --> structure. The problem
    lies in using that field when building separate <!-- DNT-Start -->INDEXes<!-- DNT-End --> for the two
    datasets. It works perfectly as separate <!-- DNT-Start -->INDEXes<!-- DNT-End --> into separate
    <!-- DNT-Start -->DATASETs<!-- DNT-End -->.</para>

    <para>For example, you can use this code to build and test the separate
    <!-- DNT-Start -->INDEXes<!-- DNT-End --> (contained in IndexSuperFile2.<!-- DNT-Start -->ECL<!-- DNT-End -->):</para>

    <!-- DNT-Start --><programlisting>IMPORT $;

Bld := PARALLEL(BUILDINDEX($.DeclareData.i1,OVERWRITE),BUILDINDEX($.DeclareData.i2,OVERWRITE));

F1 := FETCH($.DeclareData.ds1,
            $.DeclareData.i1(personid=$.DeclareData.ds1[1].personid),
            RIGHT.RecPos);
F2 := FETCH($.DeclareData.ds2,
            $.DeclareData.i2(personid=$.DeclareData.ds2[1].personid),
            RIGHT.RecPos);

Get := PARALLEL(OUTPUT(F1),OUTPUT(F2));
SEQUENTIAL(Bld,Get);
</programlisting><!-- DNT-End -->

    <para>As you can see, two different records are returned by the two <!-- DNT-Start -->FETCH<!-- DNT-End -->
    operations. However, when you create a SuperFile and a SuperKey and then
    try using them to do the same two <!-- DNT-Start -->FETCHes<!-- DNT-End --> again, they both return the same
    record, as shown by this code (contained in IndexSuperFile3.<!-- DNT-Start -->ECL<!-- DNT-End -->):</para>

    <!-- DNT-Start --><programlisting>IMPORT $;
IMPORT Std;

BldSF := SEQUENTIAL(
  Std.File.CreateSuperFile($.DeclareData.SFname),
  Std.File.CreateSuperFile($.DeclareData.SKname),
  Std.File.StartSuperFileTransaction(),
  Std.File.AddSuperFile($.DeclareData.SFname,$.DeclareData.SubFile1),
  Std.File.AddSuperFile($.DeclareData.SFname,$.DeclareData.SubFile2),
  Std.File.AddSuperFile($.DeclareData.SKname,$.DeclareData.i1name),
  Std.File.AddSuperFile($.DeclareData.SKname,$.DeclareData.i2name),
  Std.File.FinishSuperFileTransaction());

F1  := FETCH($.DeclareData.sf1,
             $.DeclareData.sk1(personid=$.DeclareData.ds1[1].personid),
             RIGHT.RecPos);
F2  := FETCH($.DeclareData.sf1,
             $.DeclareData.sk1(personid=$.DeclareData.ds2[1].personid),
             RIGHT.RecPos);
Get := PARALLEL(OUTPUT(F1),OUTPUT(F2));
SEQUENTIAL(BldSF,Get);
</programlisting><!-- DNT-End -->

    <para>Once you combine the <!-- DNT-Start -->DATASETS<!-- DNT-End --> into a SuperFile and combine the
    <!-- DNT-Start -->INDEXes<!-- DNT-End --> into a SuperKey, you then have multiple entries in the SuperKey,
    with different key field values, that all point to the same physical
    record in the SuperFile, because the record pointer values are the
    same.</para>
  </sect2>

  <sect2 id="And_the_Solution_Is">
    <!-- DNT-Start --><title>And the Solution Is ...</title><!-- DNT-End -->

    <para>The way around this problem is to create a single <!-- DNT-Start -->INDEX<!-- DNT-End --> into the
    SuperFile, as shown by this code (contained in
    IndexSuperFile4.<!-- DNT-Start -->ECL<!-- DNT-End -->):</para>

    <!-- DNT-Start --><programlisting>IMPORT $;

F1  := FETCH($.DeclareData.sf1,
             $.DeclareData.sk2(personid=$.DeclareData.ds1[1].personid),
             RIGHT.RecPos);
F2  := FETCH($.DeclareData.sf1,
             $.DeclareData.sk2(personid=$.DeclareData.ds2[1].personid),
             RIGHT.RecPos);
Get := PARALLEL(OUTPUT(F1),OUTPUT(F2));

SEQUENTIAL(BUILDINDEX($.DeclareData.sk2,OVERWRITE),Get);
</programlisting><!-- DNT-End -->

    <para>When you use a single <!-- DNT-Start -->INDEX<!-- DNT-End --> instead of a SuperKey, the <!-- DNT-Start -->FETCH<!-- DNT-End -->
    operations once again retrieve the correct records.</para>
  </sect2>
</sect1>
