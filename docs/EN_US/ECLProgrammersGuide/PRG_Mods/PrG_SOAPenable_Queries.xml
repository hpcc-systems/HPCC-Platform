<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="SOAP-enabling_Queries">
  <!-- DNT-Start --><title>SOAP-enabling Queries</title><!-- DNT-End -->

  <para>Queries destined for use in Roxie are <!-- DNT-Start -->SOAP<!-- DNT-End -->-enabled first. The required
  <!-- DNT-Start -->ECL<!-- DNT-End --> code to accomplish this is the <!-- DNT-Start -->STORED<!-- DNT-End --> workflow service. Roxie queries
  may be contained in the <!-- DNT-Start -->FUNCTION<!-- DNT-End --> structure or may simply be an executable
  query.</para>

  <sect2 id="The_ECL_Key_to_SOAP">
    <!-- DNT-Start --><title>The ECL Key to SOAP</title><!-- DNT-End -->

    <para>The <!-- DNT-Start -->ECL<!-- DNT-End --> code requirement for <!-- DNT-Start -->SOAP<!-- DNT-End -->-enabled input parameters is the
    use of the <!-- DNT-Start -->STORED<!-- DNT-End --> workflow service. Each <!-- DNT-Start -->SOAP<!-- DNT-End --> parameter name must be the
    <!-- DNT-Start -->STORED<!-- DNT-End --> name for an <!-- DNT-Start -->ECL<!-- DNT-End --> definition. The <!-- DNT-Start -->STORED<!-- DNT-End --> workflow service creates a
    data storage space in the workunit that the <!-- DNT-Start -->SOAP<!-- DNT-End --> interface uses to
    populate the âpassedâ data. The <!-- DNT-Start -->ECL<!-- DNT-End --> code simply uses those <!-- DNT-Start -->STORED<!-- DNT-End -->
    definitions to determine whether data was passed from that âparameterâ and
    what that data is. The data type of the passed <!-- DNT-Start -->SOAP<!-- DNT-End --> parameter is implied
    by the <!-- DNT-Start -->STORED<!-- DNT-End --> definition.</para>

    <para>For the following code example, you must create two definitions with
    <!-- DNT-Start -->STORED<!-- DNT-End --> names duplicating the <!-- DNT-Start -->SOAP<!-- DNT-End --> parameter name, like this:</para>

    <!-- DNT-Start --><programlisting>STRING30 lname_value := '' : STORED('LastName');
  
STRING30 fname_value := '' : STORED('FirstName');
</programlisting><!-- DNT-End -->

    <para>These default to blank and the <!-- DNT-Start -->STORED<!-- DNT-End --> workflow service opens a space
    in the workunit to store the value. The Enterprise Service Platform (<!-- DNT-Start -->ESP<!-- DNT-End -->)
    handles the <!-- DNT-Start -->SOAP<!-- DNT-End --> interface chores by plugging in the appropriate values
    into the storage space created by <!-- DNT-Start -->STORED<!-- DNT-End -->. Therefore, the <!-- DNT-Start -->ECL<!-- DNT-End --> code only
    needs to use the definitions (in this case, Lname and Fname) to accomplish
    the query. This makes the <!-- DNT-Start -->ECL<!-- DNT-End --> side of the equation very simple.</para>
  </sect2>

  <sect2 id="Putting_It_All_Together">
    <!-- DNT-Start --><title>Putting It All Together</title><!-- DNT-End -->

    <para>Once you understand the requirements, a <!-- DNT-Start -->SOAP<!-- DNT-End -->-enabled query would
    look like this (contained in SOAPenabling.<!-- DNT-Start -->ECL<!-- DNT-End -->):</para>

    <!-- DNT-Start --><programlisting>IMPORT ProgrammersGuide.DeclareData AS ProgGuide;
     
EXPORT SOAPenabling() := FUNCTION
  STRING30 lname_value := '' : STORED('LastName');
  STRING30 fname_value := '' : STORED('FirstName');
  IDX  := ProgGuide.IDX__Person_LastName_FirstName;
  Base := ProgGuide.Person.FilePlus;
  Fetched := IF(fname_value = '',
           FETCH(Base,IDX(LastName=lname_value),RIGHT.RecPos),
                FETCH(Base,IDX(LastName=lname_value,
      FirstName=fname_value),RIGHT.RecPos));
  RETURN OUTPUT(CHOOSEN(Fetched,2000));
END;</programlisting><!-- DNT-End -->

    <para></para>
  </sect2>
</sect1>
