<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book lang="en_US" xml:base="../">
  <bookinfo>
    <!-- DNT-Start --><title>Roxie: The Rapid Data Delivery Engine</title><!-- DNT-End -->

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/redswooshWithLogo3.jpg" />
      </imageobject>
    </mediaobject>

    <author>
      <surname>Boca Raton Documentation Team</surname>
    </author>

    <legalnotice>
      <para>We welcome your comments and feedback about this document via
      email to <email>docfeedback@hpccsystems.com</email></para>

      <para>Please include <emphasis role="bold">Documentation
      Feedback</emphasis> in the subject line and reference the document name,
      page numbers, and current Version Number in the text of the
      message.</para>

      <para>LexisNexis and the Knowledge Burst logo are registered trademarks
      of Reed Elsevier Properties Inc., used under license.</para>

      <para><!-- DNT-Start -->HPCC<!-- DNT-End --> Systems<superscript>®</superscript> is a registered trademark
      of LexisNexis Risk Data Management Inc.</para>

      <para>Other products, logos, and services may be trademarks or
      registered trademarks of their respective companies.</para>

      <para>All names and example data used in this manual are fictitious. Any
      similarity to actual persons, living or dead, is purely
      coincidental.</para>

      <para></para>
    </legalnotice>

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='FooterInfo'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='DateVer'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <corpname>HPCC Systems<superscript>®</superscript></corpname>

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='Copyright'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <mediaobject role="logo">
      <imageobject>
        <imagedata fileref="images/LN_Rightjustified.jpg" />
      </imageobject>
    </mediaobject>
  </bookinfo>

  <chapter id="Introduction">
    <!-- DNT-Start --><title>Introduction</title><!-- DNT-End -->

    <para>The Roxie engine - also known as the Rapid Data Delivery Engine or
    <!-- DNT-Start -->RDDE<!-- DNT-End --> - uses a combination of technologies and techniques that produce
    extremely fast throughput for queries on indexed data housed in a
    dedicated High Performance Computing Cluster (<!-- DNT-Start -->HPCC<!-- DNT-End -->).</para>

    <para>Roxie queries can exceed several thousand a second, compared to Thor
    queries which tend to take from a few seconds to a few minutes each (from
    end to end) depending on the complexity of the query.</para>

    <para>To fully understand this concept, it is best to look at the purpose
    for which each of these processes is designed:</para>

    <itemizedlist mark="bullet">
      <listitem>
        <para>The Thor platform is designed to perform operations on every
        record (or most records) in a massive dataset.</para>
      </listitem>

      <listitem>
        <para>Queries can be run on the hThor platform if they can quickly
        pinpoint small sets of records within the data.</para>
      </listitem>

      <listitem>
        <para>Roxie queries are typically used to quickly pinpoint small sets
        of records over and over again.</para>
      </listitem>
    </itemizedlist>

    <para>If you think of all your data as an ocean, Thor would be used to
    perform operations on the entire ocean.</para>

    <para>An hThor query might be used to find a single fish within that sea
    of data.</para>

    <para>The query would be deployed to a Roxie cluster to be used to find
    hundreds or thousands of individual fish-one after another.</para>

    <para>Roxie queries are deployed to a Roxie cluster, which pre-loads all
    queries into memory and prepares them to be ready to execute as soon as a
    query is received.</para>

    <para>Queries are sent to Roxie via <!-- DNT-Start -->XML<!-- DNT-End -->, <!-- DNT-Start -->SOAP<!-- DNT-End -->, or <!-- DNT-Start -->JSON<!-- DNT-End -->, and the results
    are returned in the same format. A client can communicate directly with
    the Roxie cluster by opening a socket to one of the servers in the
    cluster, or it can communicate via an <!-- DNT-Start -->ESP<!-- DNT-End --> service such as WsECL.</para>

    <para>Typically, Roxie results are returned to the requester rather than
    writing a result to a file. However, Roxie can write data files, although
    you generally would not want to write a file when a query is not
    workunit-based.</para>

    <sect1 id="Roxie_Overview">
      <!-- DNT-Start --><title>Roxie Overview</title><!-- DNT-End -->

      <para>There are typically four aspects to using Roxie:</para>

      <itemizedlist mark="bullet">
        <listitem>
          <para>Creating indexes on datasets</para>
        </listitem>

        <listitem>
          <para>Using indexes in queries</para>
        </listitem>

        <listitem>
          <para>Compiling and Deploying queries to the Roxie Cluster</para>
        </listitem>

        <listitem>
          <para>Providing access to those queries to client-facing interfaces
          via <!-- DNT-Start -->SOAP<!-- DNT-End --> or <!-- DNT-Start -->HTTP<!-- DNT-End -->.</para>

          <para></para>
        </listitem>
      </itemizedlist>

      <sect2>
        <!-- DNT-Start --><title>When to Use Indexes</title><!-- DNT-End -->

        <para>The Thor platform is designed to perform operations quickly on
        massive datasets without indexes, where the entire dataset (or almost
        all of it) is to be used. However, if only a few records are needed,
        an index can access them more efficiently. In the <!-- DNT-Start -->ECL<!-- DNT-End --> language, an
        index behaves just like a dataset that happens to be able to implement
        certain functions (typically filter and count functions) much more
        quickly than a standard flat file or <!-- DNT-Start -->CSV<!-- DNT-End --> dataset can.</para>
      </sect2>
    </sect1>

    <sect1 id="Payload_INDEXes">
      <!-- DNT-Start --><title>Payload INDEXes</title><!-- DNT-End -->

      <para>In conventional database systems, an index is used together with a
      data file to locate records in that data file. You can do the same in
      <!-- DNT-Start -->ECL<!-- DNT-End --> by storing file positions in the index and using them in a <!-- DNT-Start -->FETCH<!-- DNT-End -->
      function to retrieve the corresponding data rows from the original
      file.</para>

      <para>However, because you can store whatever fields you wish in an
      index, it is more common in Roxie queries to design indexes that store
      both the search fields and the information you want to look up. This
      eliminates an extra disk read for the <!-- DNT-Start -->FETCH<!-- DNT-End -->. Since indexes are
      compressed, this can also save disk space if the original data file does
      not need to be stored on the Roxie cluster.</para>

      <para>Any field in an index that does not need to be searched for can be
      specified as being in the "payload" - such fields are stored only at the
      leaf nodes of the index tree which can save some space and performance
      in the lookups. The fields in the payload may simply be additional
      fields from the base dataset, but they may also contain the result of
      some preliminary computation (computed fields).</para>
    </sect1>

    <sect1 id="Roxie_Superfiles">
      <!-- DNT-Start --><title>Roxie Superfiles</title><!-- DNT-End -->

      <para>A superfile or superkey used in Roxie may contain more than a
      single sub-file.</para>

      <para>However, your superfile cannot contain more than one sub-file when
      the superfile is used for a <!-- DNT-Start -->FETCH<!-- DNT-End --> operation or in a full-keyed
      <!-- DNT-Start -->JOIN<!-- DNT-End -->.</para>

      <para>Even if you only have one sub-file, you can write a query that
      uses superfiles or superkeys (even though they contain only a single
      sub-file) you have the advantage of being able to update your Roxie by
      simply deploying new data without needing to re-compile the queries that
      use that data simply because the sub-file name changed. This saves
      compilation time, and in a production environment (which a Roxie
      typically is) where a data file is used by many queries, this savings
      can be a significant.</para>

      <para>See the <emphasis><!-- DNT-Start -->ECL<!-- DNT-End --> Programmer's Guide</emphasis> for more
      details.</para>
    </sect1>

    <sect1 id="How-Roxie-Works">
      <!-- DNT-Start --><title>How Roxie Works</title><!-- DNT-End -->

      <para>Roxie clusters consist of a number of machines connected together
      to function as a single entity. <!-- DNT-Start -->ECL<!-- DNT-End --> source code for one or more queries
      is compiled and published to the cluster. Once published, queries can
      process data rapidly.</para>

      <para>Each machine in the cluster acts in two distinct roles - these
      roles execute in the same process and share a lot of code - including
      the compiled query code - but can be thought of as logically
      distinct.</para>

      <para>The <emphasis role="bold">Server</emphasis> process accepts
      incoming queries from a client, evaluates the <!-- DNT-Start -->ECL<!-- DNT-End --> code of the query
      given the input that is provided in the client query, and returns the
      result to the client. When the Server evaluates an <!-- DNT-Start -->ECL<!-- DNT-End --> function that
      requires data from disk, it determines the slave node or nodes that may
      have the appropriate data, and sends a request to those slave nodes to
      retrieve any matching data. Results from multiple slave nodes are
      collated and become the input for further <!-- DNT-Start -->ECL<!-- DNT-End --> functions evaluated on the
      Server node. Typically, requesting applications use some form of load
      balancing to distribute requests evenly to the available Servers.</para>

      <para>The <emphasis role="bold">Slave</emphasis> process accepts
      requests only from other Server nodes in the cluster. These requests
      correspond to a single <!-- DNT-Start -->ECL<!-- DNT-End --> function such as a filtered index read or a
      disk fetch. Results are sent back to the Server that originally
      requested them. In order to balance performance and manage hardware
      failures, slaves receive the requests over multicast, and there will
      typically be at least two slave nodes that will receive each request
      from a server. The slave nodes communicate with each other to avoid
      duplicating effort, so that whichever slave is first able to handle the
      request tells the others not to bother. Each node in a cluster typically
      handles Slave requests on two or more multicast channels, usually one
      channel per disk drive. If any Slave node is not responding, the
      requests on that channel are handled by the other peer Slave nodes
      responsible for that channel.</para>

      <para></para>

      <para><graphic fileref="images/RM-02.jpg" /></para>

      <para>This example shows a 5-node Roxie Cluster with each node
      configured to be both a <emphasis role="bold">Server</emphasis> and a
      <emphasis role="bold">Slave</emphasis>.</para>

      <para>Queries that have been compiled with the target platform specified
      as a Roxie cluster may be published to a QuerySet using EclWatch.</para>

      <para>Each Roxie cluster loads queries from one or more QuerySet
      lists.</para>

      <para>When a query is added to the QuerySet that a Roxie is watching,
      Roxie will preload the query .so (or .<!-- DNT-Start -->DLL<!-- DNT-End -->) and prepare the execution
      context as far as it can, so that it is ready to execute incoming
      requests to execute that query as soon as they arrive. This may includes
      loading the .so (or .<!-- DNT-Start -->DLL<!-- DNT-End -->), resolving file references, and opening files
      (if there are sufficient file handles available), preloading data into
      memory if requested, and evaluating <!-- DNT-Start -->ECL<!-- DNT-End --> code in the query that has been
      marked as : <!-- DNT-Start -->ONCE<!-- DNT-End -->.</para>

      <para>Depending on the configuration, Roxie may read data remotely from
      a Thor cluster where it was prepared, or if preferred, it may be copied
      to the Roxie for local access.</para>

      <para>Typically a development system might refer to data in situ on the
      Thor cluster, while a production system may prefer the performance
      benefits of copying data locally to the Roxie.</para>

      <para>Roxie can read data remotely while it is being copied and switch
      to the local copy once the copy operation is complete. This provides the
      benefit of quick availability because the query can be active before the
      data is copied, while still taking advantage of the performance benefits
      of local data.</para>

      <xi:include href="RoxieReference/RoxieRefMods/RoxieCopySettings.xml"
                  xpointer="element(/1)"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>

    <sect1 id="Roxie-Data-Backup">
      <!-- DNT-Start --><title>Roxie Data Backup</title><!-- DNT-End -->

      <para>Roxie data is protected by three forms of redundancy:</para>

      <itemizedlist mark="bullet">
        <listitem>
          <para>Original Source Data File Retention: When a query is deployed,
          the data is typically copied from a Thor cluster's hard drives.
          Therefore, the Thor data can serve as backup, provided it is not
          removed or altered on Thor. Thor data is typically retained for a
          period of time sufficient to serve as a backup copy.</para>
        </listitem>

        <listitem>
          <para>Peer-Node Redundancy: Each Slave node typically has one or
          more peer nodes within its cluster. Each peer stores a copy of data
          files it will read.</para>
        </listitem>

        <listitem>
          <para>Sibling Cluster Redundancy: Although not required, Roxie
          deployments may run multiple identically-configured Roxie clusters.
          When two clusters are deployed for Production each node has an
          identical twin in terms of data and queries stored on the node in
          the other cluster.</para>
        </listitem>
      </itemizedlist>

      <para><?dbfo-need height="8.75in"?>This configuration provides multiple
      redundant copies of data files. In this example, there are six copies of
      each file at any given time; eliminating the need to use traditional
      backup procedures for Roxie data files.</para>

      <para><graphic fileref="images/RM-03.jpg" /></para>

      <para></para>
    </sect1>

    <sect1>
      <!-- DNT-Start --><title>Processor Affinity</title><!-- DNT-End -->

      <para>Roxie can perform better in some circumstances by using thread
      affinities to restrict a given query's threads to a subset of the cores
      on the machine. This is also know as processor affinity or <!-- DNT-Start -->CPU<!-- DNT-End --> pinning.
      This is particularly useful on multi-socket (dual <!-- DNT-Start -->CPU<!-- DNT-End -->) machines.</para>

      <para>This can be set in Configuration Manager using the following
      options:</para>

      <para><informaltable colsep="1" frame="all" rowsep="1">
          <tgroup cols="3">
            <colspec colwidth="178.45pt" />

            <colspec colwidth="65.60pt" />

            <colspec />

            <tbody>
              <row>
                <entry><!-- DNT-Start --><emphasis>affinity</emphasis><!-- DNT-End --></entry>

                <entry>Default: 0</entry>

                <entry>If non-zero, binds the roxie process to use the
                specified cores only (bitmask)</entry>
              </row>

              <row>
                <entry><!-- DNT-Start --><emphasis>coresPerQuery</emphasis><!-- DNT-End --></entry>

                <entry>Default: 0</entry>

                <entry>If non-zero, binds each incoming query to use the
                specified number of cores only</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></para>

      <para>You can override coresPerQuery on a single query by using: </para>

      <para><programlisting>#OPTION('bindCores', N); </programlisting></para>

      <para>where N is the number of cores to use.</para>

      <para>Use a value for coresPerQuery or bindCores that is divisible into
      the number of cores on each <!-- DNT-Start -->CPU<!-- DNT-End --> for best results.</para>
    </sect1>
  </chapter>

  <chapter id="Developing_Roxie_Queries">
    <!-- DNT-Start --><title>Developing Roxie Queries</title><!-- DNT-End -->

    <sect1 id="Development_Path" role="nobrk">
      <!-- DNT-Start --><title>Development Path</title><!-- DNT-End -->

      <orderedlist numeration="arabic">
        <listitem>
          <para>Determine the need.</para>
        </listitem>

        <listitem>
          <para>Evaluate data and determine fields to index.</para>
        </listitem>

        <listitem>
          <para>Build Index(es).</para>
        </listitem>

        <listitem>
          <para>Create a hThor query.</para>
        </listitem>

        <listitem>
          <para>Test and fine-tune the query (using hThor).</para>
        </listitem>

        <listitem>
          <para>Publish the Query to a Roxie cluster.</para>
        </listitem>

        <listitem>
          <para>Test and certify (compare results to expected results).</para>
        </listitem>
      </orderedlist>

      <para></para>

      <para><emphasis role="bold">Note</emphasis>: These steps are explained
      in detail in the <!-- DNT-Start -->HPCC<!-- DNT-End --> Data Tutorial and the Programmer's Guide.</para>
    </sect1>

    <sect1 id="Methods-to-Submit-Jobs-to-a-Roxie-Cluster">
      <!-- DNT-Start --><title>Methods to Submit Jobs to a Roxie Cluster</title><!-- DNT-End -->

      <para>After a query is compiled and deployed, there are several methods
      to submit jobs that use the query. While the most common usage is via
      custom applications using the <!-- DNT-Start -->XML<!-- DNT-End --> or <!-- DNT-Start -->SOAP<!-- DNT-End --> interface, the other methods
      have valid uses, too.</para>

      <para>A direct socket connection can communicate directly with the Roxie
      cluster, eliminating all other intermediate components. This provides a
      means of certifying the Roxie cluster, its configuration, the deployment
      of the query, and the query itself.</para>

      <para><!-- DNT-Start -->SOAPCALL<!-- DNT-End --> allows a Thor query to make calls to a Roxie query (See
      the <emphasis><!-- DNT-Start -->ECL<!-- DNT-End --> Language Reference </emphasis>for details). This
      provides the capability of combining Roxie results with other data
      processing tasks performed during <!-- DNT-Start -->ETL<!-- DNT-End -->.</para>

      <para>Conducting queries via an <!-- DNT-Start -->ESP<!-- DNT-End --> service using <!-- DNT-Start -->HTTP<!-- DNT-End --> or <!-- DNT-Start -->HTTPS<!-- DNT-End --> allows
      access to queries directly from a browser. Web-based access allows you
      to provide easy access to anyone you wish. Using <!-- DNT-Start -->HTTPS<!-- DNT-End -->, you can ensure
      data security using Secure Socket Layer (<!-- DNT-Start -->SSL<!-- DNT-End -->) encryption. This ensures
      all data is encrypted as it travels across a network or the Internet. In
      addition, <!-- DNT-Start -->LDAP<!-- DNT-End --> authentication is available to restrict access to a set
      of users.</para>

      <para>Custom applications using <!-- DNT-Start -->SOAP<!-- DNT-End --> provides the most flexibility and
      functionality. The application development process is simplified by
      Enterprise Services Platform's automatic Web Services Definition
      Language (<!-- DNT-Start -->WSDL<!-- DNT-End -->) generation. Many development tools (such as, Microsoft's
      .<!-- DNT-Start -->NET<!-- DNT-End --> Studio or NetBeans <!-- DNT-Start -->JAVA<!-- DNT-End -->) include a tool to generate code to create
      proxy stubs from a <!-- DNT-Start -->WSDL<!-- DNT-End --> document. This simplifies the development
      process and ensures exposure of all necessary methods and
      properties.</para>

      <sect2 id="Direct-Socket-Connection-TCP-IP">
        <!-- DNT-Start --><title>Direct Socket Connection (TCP/IP)<?dbfo-need height="3in"?></title><!-- DNT-End -->

        <para><graphic fileref="images/RM-04.jpg" /></para>

        <beginpage />
      </sect2>

      <sect2 id="SOAPCALL_via_ECL">
        <!-- DNT-Start --><title><emphasis>SOAPCALL via ECL</emphasis></title><!-- DNT-End -->

        <para><graphic fileref="images/RM-05.jpg" /></para>

        <para></para>

        <para></para>
      </sect2>

      <sect2 id="SOAP-or-HTTP-HTTPS">
        <!-- DNT-Start --><title>SOAP or HTTP/HTTPS<?dbfo-need height="6in"?></title><!-- DNT-End -->

        <para><graphic fileref="images/RM-06.PNG" scale="90"
        scalefit="1" /></para>

        <para></para>

        <beginpage />
      </sect2>
    </sect1>
  </chapter>

  <chapter>
    <!-- DNT-Start --><title>Managing Queries</title><!-- DNT-End -->

    <para>Roxie queries are managed via Query Sets which are stored in Dali.
    Query Sets control which queries are loaded onto Roxie when it starts up
    and are manipulated by adding or removing them as required. The list of
    queries currently held within a QuerySet can be viewed using <!-- DNT-Start -->ECL<!-- DNT-End -->
    Watch.</para>

    <para>Once a query has been published to the Query Set, it can now be run
    on the roxie using a web interface.</para>

    <sect1>
      <!-- DNT-Start --><title>Adding a roxie query to the Query Set</title><!-- DNT-End -->

      <para>To add a roxie query to a Query Set:</para>

      <orderedlist>
        <listitem>
          <para>Use <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->IDE<!-- DNT-End --> to write your query and then compile it setting
          the target as the roxie cluster in your <!-- DNT-Start -->HPCC<!-- DNT-End --> environment.</para>
        </listitem>

        <listitem>
          <para>Go the <!-- DNT-Start -->ECL<!-- DNT-End --> Watch tab for the compiled workunit and click the
          Publish button. A message is displayed indicating that your query
          has been published successfully.</para>
        </listitem>
      </orderedlist>
    </sect1>

    <sect1>
      <!-- DNT-Start --><title>Viewing Query Sets using ECL Watch</title><!-- DNT-End -->

      <para>Using <!-- DNT-Start -->ECL<!-- DNT-End --> Watch, you can view the query for all clusters on your
      <!-- DNT-Start -->HPCC<!-- DNT-End -->. Click on the <emphasis role="bold">Query Sets/Browse</emphasis>
      menu item to see the clusters which are currently using Query Sets.
      Click on the <emphasis role="bold">myroxie</emphasis> link to view the
      list of queries currently available for roxie. Using this feature you
      can:</para>

      <itemizedlist>
        <listitem>
          <para>View the list of currently available queries on a
          cluster.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>View details about each query including the <!-- DNT-Start -->ID<!-- DNT-End -->, the name of
          the query, the workunit <!-- DNT-Start -->ID<!-- DNT-End -->, the <!-- DNT-Start -->DLL<!-- DNT-End -->(s) it uses and whether it is
          suspended.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>View details of the aliases that exist for each query.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>Delete a Query from the list.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>Delete an Alias.</para>
        </listitem>
      </itemizedlist>

      <itemizedlist>
        <listitem>
          <para>Toggle the suspend setting on/off</para>
        </listitem>
      </itemizedlist>
    </sect1>

    <sect1>
      <!-- DNT-Start --><title>Using WsECL to run a roxie query</title><!-- DNT-End -->

      <para>WsECL is the <!-- DNT-Start -->ECL<!-- DNT-End --> Web Service interface that is provided with <!-- DNT-Start -->HPCC<!-- DNT-End -->
      and is available using the following <!-- DNT-Start -->URL<!-- DNT-End -->: http://nnn.nnn.nnn.nnn:8002,
      where nnn.nnn.nnn.nnn is the <!-- DNT-Start -->IP<!-- DNT-End --> address of your <!-- DNT-Start -->ESP<!-- DNT-End -->.</para>

      <para>WsECL uses the Query Sets information to display the list of
      available runnable queries and you can use it, for example, to test that
      your query works as expected.</para>

      <para>The web page shows all clusters using Query Sets. Expand myroxie
      in the tree and select the query you want to run. A default form is
      displayed which is generated from the input field names and types. Enter
      values and press submit to see the results and test your query.</para>
    </sect1>
  </chapter>

  <xi:include href="RoxieReference/RoxieRefMods/Packages.xml"
              xpointer="element(/1)"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="RoxieReference/RoxieRefMods/directAccessToRoxie.xml"
              xpointer="element(/1)"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <chapter id="Deploying-Data-to-a-Cluster-using-DFU">
    <!-- DNT-Start --><title>Deploying Data to a Roxie Cluster using DFU</title><!-- DNT-End -->

    <para>You can use the Distributed File Utility (<!-- DNT-Start -->DFU<!-- DNT-End -->) in <!-- DNT-Start -->ECL<!-- DNT-End --> Watch to copy,
    or remote copy data files to a Roxie cluster. This allows you to copy
    large files to a cluster in advance of publishing a query. If data files
    are copied in advance, a query which requires those files will use the
    ones already in place. If you have large data sets, this allows you to
    prepare in advance of query deployment.</para>

    <para><emphasis role="bold">Note:</emphasis> To use this feature, the
    FTSlave utility must be installed to each node in the cluster. This is
    done automatically by the Configuration Manager Wizard.</para>

    <sect1 id="Copy">
      <!-- DNT-Start --><title>DFU Copy</title><!-- DNT-End -->

      <para><orderedlist>
          <listitem>
            <para>Open the ECLWatch web page. You can reach this page using
            the following <!-- DNT-Start -->URL<!-- DNT-End -->: http://nnn.nnn.nnn.nnn:8010, where
            nnn.nnn.nnn.nnn is your node's <!-- DNT-Start -->IP<!-- DNT-End --> address.</para>
          </listitem>

          <listitem>
            <para>Click on the <emphasis role="bold">Files</emphasis> icon,
            then select <emphasis role="bold">Logical Files</emphasis>.</para>
          </listitem>

          <listitem>
            <para>Locate the file to copy in the list of files, then mark the
            checkbox on the left.</para>

            <para><graphic fileref="images/RDDE_DFUcopy.jpg"
            vendor="eclwatchSS" /></para>
          </listitem>

          <listitem>
            <para>Press the Copy button, then fill in <emphasis
            role="bold">Group, Target Name,</emphasis> and <emphasis
            role="bold">Options</emphasis> information.</para>

            <para></para>

            <para><informaltable colsep="0" frame="none" rowsep="0">
                <tgroup cols="2">
                  <colspec colwidth="122.40pt" />

                  <colspec colwidth="333.00pt" />

                  <tbody>
                    <row>
                      <entry align="right"><emphasis
                      role="bold">Destination:</emphasis></entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Group<!-- DNT-End --></entry>

                      <entry>Use the drop list to select the Roxie cluster to
                      copy to.</entry>
                    </row>

                    <row>
                      <entry align="right"><!-- DNT-Start --><emphasis
                      role="bold">Note</emphasis>:<!-- DNT-End --></entry>

                      <entry>You can only choose from clusters within the
                      current environment.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Target Name<!-- DNT-End --></entry>

                      <entry>The name of the logical file to create on the
                      target. This is automatically filled in based upon the
                      original logical file, but you can change it.</entry>
                    </row>

                    <row>
                      <entry align="right"><emphasis
                      role="bold">Options:</emphasis></entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Overwrite<!-- DNT-End --></entry>

                      <entry>Check this box to overwrite files of the same
                      name.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->No Split<!-- DNT-End --></entry>

                      <entry>Check this box to prevent splitting file parts to
                      multiple target parts.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Wrap<!-- DNT-End --></entry>

                      <entry>Check this box to keep the number of parts the
                      same and wrap if the target cluster is smaller that the
                      original.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Compress<!-- DNT-End --></entry>

                      <entry>Check this box to compress the files.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Retain SuperFile Structure<!-- DNT-End --></entry>

                      <entry>Check this box to retain the structure of a
                      SuperFile.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable></para>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Copy
            </emphasis>button.</para>

            <para>A new tab opens displaying information about the new
            file.</para>
          </listitem>
        </orderedlist></para>
    </sect1>

    <sect1 id="Remote_Copy">
      <!-- DNT-Start --><title>Remote Copy</title><!-- DNT-End -->

      <para>Remote Copy allows you to copy data to a Roxie from a Thor or
      Roxie cluster outside your environment.</para>

      <para><orderedlist>
          <listitem>
            <para>Open the ECLWatch web page. You can reach this page using
            the following <!-- DNT-Start -->URL<!-- DNT-End -->: http://nnn.nnn.nnn.nnn:8010, where
            nnn.nnn.nnn.nnn is your node's <!-- DNT-Start -->IP<!-- DNT-End --> address.</para>
          </listitem>

          <listitem>
            <para>Click on the <emphasis role="bold">Files</emphasis> icon,
            then select <emphasis role="bold">Logical Files</emphasis>.</para>
          </listitem>

          <listitem>
            <para>Press the Remote Copy button, then fill in the
            details.</para>

            <para><graphic fileref="images/RDDE_DFUremotecopy.jpg"
            vendor="eclwatchSS" /></para>

            <para><informaltable colsep="0" frame="none" rowsep="0">
                <tgroup cols="2">
                  <colspec colwidth="122.40pt" />

                  <colspec colwidth="333.00pt" />

                  <tbody>
                    <row>
                      <entry align="right"><emphasis
                      role="bold">Source:</emphasis></entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Dali<!-- DNT-End --></entry>

                      <entry>The <!-- DNT-Start -->IP<!-- DNT-End --> or hostname of the Dali for the
                      environment from which you are copying.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->User ID<!-- DNT-End --></entry>

                      <entry>The Username to use to authenticate on the Remote
                      environment</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Password<!-- DNT-End --></entry>

                      <entry>The password to use to authenticate on the Remote
                      environment</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Logical Name<!-- DNT-End --></entry>

                      <entry>The name of the logical file to copy.</entry>
                    </row>

                    <row>
                      <entry align="right"><emphasis
                      role="bold">Target:</emphasis></entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Group<!-- DNT-End --></entry>

                      <entry>Use the drop list to select the Roxie cluster to
                      copy to.</entry>
                    </row>

                    <row>
                      <entry align="right"><!-- DNT-Start --><emphasis
                      role="bold">Note</emphasis>:<!-- DNT-End --></entry>

                      <entry>You can only choose from clusters within the
                      current environment.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Logical Name<!-- DNT-End --></entry>

                      <entry>The name of the logical file to create on the
                      target.</entry>
                    </row>

                    <row>
                      <entry align="right"><emphasis
                      role="bold">Options:</emphasis></entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Overwrite<!-- DNT-End --></entry>

                      <entry>Check this box to overwrite files of the same
                      name.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->No Split<!-- DNT-End --></entry>

                      <entry>Check this box to prevent splitting file parts to
                      multiple target parts.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Wrap<!-- DNT-End --></entry>

                      <entry>Check this box to keep the number of parts the
                      same and wrap if the target cluster is smaller that the
                      original.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Compress<!-- DNT-End --></entry>

                      <entry>Check this box to compress the files.</entry>
                    </row>

                    <row>
                      <entry><!-- DNT-Start -->Retain SuperFile Structure<!-- DNT-End --></entry>

                      <entry>Check this box to retain the structure of a
                      SuperFile.</entry>
                    </row>
                  </tbody>
                </tgroup>
              </informaltable></para>
          </listitem>

          <listitem>
            <para>Press the <emphasis role="bold">Submit
            </emphasis>button.</para>

            <para>A new tab opens displaying information about the new
            file.</para>
          </listitem>
        </orderedlist></para>

      <para></para>
    </sect1>
  </chapter>

  <chapter id="Capacity_Planning_for_Roxie_Clusters">
    <!-- DNT-Start --><title>Capacity Planning for Roxie Clusters</title><!-- DNT-End -->


     <xi:include href="RoxieReference/RoxieRefMods/RoxieCapacityPlanning.xml"
                xpointer="xpointer(//*[@id='Capacity_Planning'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />
 

  </chapter>

  <chapter id="PreFlight_and_Roxie_Metrics">
    <!-- DNT-Start --><title>PreFlight and Roxie Metrics</title><!-- DNT-End -->

    <para><!-- DNT-Start -->ECL<!-- DNT-End --> Watch's Operations section provides the ability to perform
    Preflight activities. These preflight utilities are used for daily health
    checks, as well as trouble avoidance and troubleshooting. It provides a
    central location to gather hardware and software information from a remote
    set of machines and has many uses for day-to-day environment
    preparation.</para>

    <para>This section contains information for performing preflight checks on
    a Roxie cluster. For details about other components, see the
    <emphasis><!-- DNT-Start -->HPCC<!-- DNT-End --> System Administrator's Guide</emphasis>.</para>

    <xi:include href="HPCCCertify/Cert-Mods/CertPreflight.xml"
                xpointer="xpointer(//*[@id='Preflight_Roxie'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <sect1 id="Roxie_Metrics">
      <!-- DNT-Start --><title>Roxie Metrics<?dbfo-need height="5in"?></title><!-- DNT-End -->

      <para><graphic fileref="images/RM-30.jpg" vendor="eclwatchSS" /></para>

      <para></para>

      <para><informaltable colsep="0" frame="none" rowsep="0">
          <tgroup cols="2">
            <colspec colwidth="102.05pt" />

            <colspec colwidth="293.95pt" />

            <tbody>
              <row>
                <entry><!-- DNT-Start -->IP Address<!-- DNT-End --></entry>

                <entry>The <!-- DNT-Start -->IP<!-- DNT-End --> address of the Server node</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->slavesActive<!-- DNT-End --></entry>

                <entry>Number of slaves active for that Server</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->lastQueryTime<!-- DNT-End --></entry>

                <entry>Time stamp of most recent query executed</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->loQueryActive<!-- DNT-End --></entry>

                <entry>Number of low priority queries active</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->loMin<!-- DNT-End --></entry>

                <entry>Minimum time (ms) it took to run a low priority
                query</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->retriesNeeded<!-- DNT-End --></entry>

                <entry>Count of all reply packets that arrived to a Server as
                a response to more than one try.</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->loMax<!-- DNT-End --></entry>

                <entry>Maximum time (ms) it took to run a low priority
                query</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->hiQueryActive<!-- DNT-End --></entry>

                <entry>Number of high priority queries active</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->loQueryCount<!-- DNT-End --></entry>

                <entry>Total number of low priority queries run</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->loQueryAverage<!-- DNT-End --></entry>

                <entry>Average time it took to run a high priority
                query</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->hiQueryCount<!-- DNT-End --></entry>

                <entry>Total number of high priority queries run</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->hiMax<!-- DNT-End --></entry>

                <entry>Maximum time (ms) it took to run a high priority
                query</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->hiMin<!-- DNT-End --></entry>

                <entry>Minimum time (ms) it took to run a high priority
                query</entry>
              </row>

              <row>
                <entry><!-- DNT-Start -->heapBlocksAllocated<!-- DNT-End --></entry>

                <entry>Number of times Roxie had to allocate memory from its
                memory allocator</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable></para>
    </sect1>

    <xi:include href="ECLWatch/ECLWa_mods/ECLWatchQueries.xml"
                xpointer="xpointer(//*[@id='Queries_Page'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />
  </chapter>
</book>
