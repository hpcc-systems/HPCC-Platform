<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter>
  

  <title>Direct Access to Roxie</title>

  

  <sect1 role="nobrk">
    

    <title>Roxie Query Access Overview</title>

    

    <para>WsECL provides quick and easy access to your published queries, but
    is not optimized for the rapid throughput Roxie provides. To take full
    advantage of this capability, you should access Roxie directly.</para>

    <para>WsECL still plays an important role when using this technique. It
    provides an immediate means of testing, provides a web interface for
    one-off query execution, and provides the WSDL
    and schema which can be used for automated code generators for SOAP
    access. It also provides the HTTP-GET
    and form encodes support. Finally, it also provides a JSON
    (Javascript Simple Object Notation) interface which is similar to Roxie's
    direct interface.</para>

    <para></para>

    <sect2>
      

      <title>Web Services</title>

      

      <para>A Web service is a standards-based software component accessible
      over the Internet. The service can be simple or complex.</para>

      <para>For example, a Web service could request a number of stock quotes
      and return them in an XML result
      set.</para>

      <para>Web Services are available to any platform, object model, or
      programming language. This provides access to users over the Internet,
      Intranet, or Extranet regardless of the user's platform.</para>

      <para>It also simplifies distributed systems development. The use of
      standards-based components protects development investment regardless of
      future trends. Web Service Technologies are based upon HTTP.</para>

      <sect3>
        

        <title><emphasis role="bold">Simple Object Access Protocol
        (SOAP)</emphasis></title>

        

        <para>SOAP is the most common XML-based
        protocol for sending requests to and receiving responses from Web
        Services. Basically, it is a protocol for communication between
        applications. It is designed to communicate over the Internet and is
        platform independent and language independent. Based on XML,
        SOAP is simple and
        extensible.</para>
      </sect3>

      <sect3>
        

        <title>JavaScript Object Notation<emphasis role="bold">
        (JSON)</emphasis></title>

        

        <para><emphasis role="bold">JSON</emphasis>
        is a lightweight data-interchange format. It is easy for humans to
        read and write. It is easy for machines to parse and generate. It is
        based on a subset of the JavaScript Programming Language, it is
        completely language independent.</para>

        <para></para>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    

    <title>Accessing your Roxie Queries</title>

    

    <para>Once you have developed, compiled, and published your queries, you
    need to provide access to users.</para>

    <sect2>
      

      <title><emphasis role="bold">ESP and WsECL</emphasis></title>

      

      <para>A standard installation of the HPCC
      platform includes an Enterprise Services Platform (ESP)
      with the WsECL service configured through a service binding to port 8002
      (configurable).</para>

      <para>WsECL provides a means to access all of your compiled and
      published queries using a Web interface or by using SOAP
      or JSON.</para>

      <para><emphasis role="bold">Tip: </emphasis>You can provide a JobName in
      the URL using this form:</para>

      

      <programlisting>http://ip:port/WsEcl/submit/query/<emphasis role="bold">&lt;targetCluster&gt;</emphasis>/<emphasis
          role="bold">&lt;query&gt;</emphasis>?_jobname=<emphasis role="bold">&lt;jobname&gt;</emphasis></programlisting>

      

      <para>This is useful for testing queries. It is also suitable for
      providing real-time access to a users. You can also use proxy mode to
      bypass WsECL response formatting and get the roxie formatted SOAP
      response directly. See <link linkend="proxymode">WsECL and Proxy
      mode</link></para>
    </sect2>

    <sect2>
      

      <title><emphasis role="bold">Access WsECL VIA SOAP</emphasis></title>

      

      <sect3>
        

        <title><emphasis role="bold">WSDL</emphasis></title>

        

        <para>The Simple Object Access Protocol (SOAP)
        sets a standard for communication between processes using a common xml
        based format. SOAP libraries are
        readily available for many languages and development platforms,
        including Microsoft .NET (accessible
        using C#, VB.NET,
        ASP.NET,
        and other CLR languages), Java
        (e.g.,. JAX and Apache AXIS),
        PERL, and many others.</para>

        <para>Web Service Description Language (WSDL)
        is used to provide a structured description of a Web service
        interface.</para>

        <para>Many of the libraries available for allowing applications to use
        the SOAP protocol also provide tools
        for automatically generating service specific APIs from a WSDL
        document.</para>

        <para>The WSDL description is
        automatically available for any published query.</para>

        <para>The following URL can be used
        to retrieve the WSDL description of
        a published query:</para>

        <para>http://<emphasis>nnn.nnn.nnn.nnn</emphasis>:8002/WsEcl/definitions/query/roxie/&lt;queryName&gt;/main/&lt;queryName&gt;.wsdl</para>

        <para>where <emphasis>nnn.nnn.nnn.nnn</emphasis> is the IP
        address (or DNS Name) of that ESP
        server with the binding to WsECL.</para>

        <para>8002 is the default port. If you have a modified the port
        setting, use the port you have selected for that purpose. With the 7.0
        release of HPCC you will need to enter your credentials to log in to
        the interface, and your session will lock after a (configurable)
        period of inactivity. </para>

        <para>The syntax and functionality of the SOAP
        protocol itself is also beyond the scope of this document. The
        following list of external resources can help in your understanding of
        standards-based technologies used.</para>
      </sect3>

      <sect3>
        

        <title>SOAP</title>

        

        <para>http://www.w3.org/TR/soap12-part0</para>

        <para>http://www.w3.org/TR/soap12-part1</para>

        <para>http://www.w3.org/TR/soap12-part2</para>
      </sect3>

      <sect3>
        

        <title><emphasis role="bold">Web Service Definition Language (WSDL)
        1.1</emphasis></title>

        

        <para>http://www.w3.org/TR/wsdl</para>
      </sect3>
    </sect2>

    <sect2>
      

      <title><emphasis role="bold">Direct Access VIA SOAP</emphasis></title>

      

      <orderedlist numeration="arabic">
        <listitem>
          <para>Create and publish your query to a target cluster
          (Roxie).</para>
        </listitem>

        <listitem>
          <para>Test and validate using WsECL to access the query.</para>

          <para>Use the default interface provided to test:</para>

          <para>http://nnn.nnn.nnn.nnn:8002/</para>

          <para>where nnn.nnn.nnn.nnn is the IP
          address (or DNS Name) of that ESP
          server with the binding to WsECL.</para>

          <para>8002 is the default port. If you have a modified the port
          setting, use the port you have selected for that purpose.</para>
        </listitem>

        <listitem>
          <para>Begin development of the application that will consume the web
          service by importing the WSDL
          from:</para>

          <para>http://<emphasis>nnn.nnn.nnn.nnn</emphasis>:8002/WsEcl/definitions/query/roxie/&lt;queryName&gt;/main/&lt;queryName&gt;.wsdl</para>

          <para>where nnn.nnn.nnn.nnn is the IP
          address (or DNS Name) of that ESP
          server with the binding to WsECL.</para>

          <para>8002 is the default port. If you have a modified the port
          setting, use the port you have selected for that purpose.</para>
        </listitem>

        <listitem>
          <para>When testing is complete, change the base URL
          to</para>

          <para>http://nnn.nnn.nnn.nnn:9876/</para>

          <para>where nnn.nnn.nnn.nnn is the IP
          address (or DNS Name) of a Roxie
          Server.</para>

          <para>9876 is the default port. If you have a modified the port
          setting, use the port you have selected for that purpose.</para>
        </listitem>
      </orderedlist>

      <para></para>
    </sect2>

    <sect2>
      

      <title><emphasis role="bold">Direct Access VIA JSON</emphasis></title>

      

      <orderedlist numeration="arabic">
        <listitem>
          <para>Create and publish your query to a target cluster
          (Roxie).</para>
        </listitem>

        <listitem>
          <para>Test and validate using WsECL to access the query.</para>

          <para>Use the default interface provided to test:</para>

          <para>http://nnn.nnn.nnn.nnn:8002/</para>

          <para>where nnn.nnn.nnn.nnn is the IP
          address (or DNS Name) of that ESP
          server with the binding to WsECL.</para>

          <para>8002 is the default port. If you have a modified the port
          setting, use the port you have selected for that purpose.</para>
        </listitem>

        <listitem>
          <para>Begin development of the application that will consume the web
          service using the JSON definitions
          available from the form in WsECL.</para>
        </listitem>

        <listitem>
          <para>From the drop list, select JSON
          Test, then press the submit button.</para>

          <para><graphic fileref="../../images/json1.jpg" /></para>
        </listitem>

        <listitem>
          <para>Edit the query criteria on the left, then press the <emphasis
          role="bold">Send Request</emphasis> button.</para>
        </listitem>

        <listitem>
          <para>The results display on the right side.</para>
        </listitem>

        <listitem>
          <para>Edit and resubmit (by pressing the <emphasis role="bold">Send
          Request</emphasis> button ) to see responses for different
          criteria.</para>

          <para><graphic fileref="../../images/json2.jpg" /></para>
        </listitem>

        <listitem>
          <para>Set the base URL in your
          application to</para>

          <para>http://nnn.nnn.nnn.nnn:9876/</para>

          <para>where nnn.nnn.nnn.nnn is the IP
          address (or DNS Name) of a Roxie
          Server.</para>

          <para>9876 is the default port. If you have a modified the port
          setting, use the port you have selected for that purpose.</para>
        </listitem>
      </orderedlist>

      <para><emphasis role="bold">Note:</emphasis> The WsECL service
      automatically distributes the load by sending queries to Roxie Servers
      in a round-robin fashion. To utilize all servers, your application
      should implement a similar load distribution scheme. Alternatively, you
      can use a load balancer and submit the query to the Virtual IP
      created by the load balancer.</para>
    </sect2>

    <sect2>
      

      <title>Direct Access Via JSONP</title>

      

      <para>To get a JSONP response, add the
      <emphasis role="bold">&amp;jsonp=&lt;myfunction&gt;</emphasis>
      decoration to the URL. This returns a
      javascript wrapped json response:</para>

      <para><programlisting>myfunction("{"data_1": "hello world", "data_2": ["the","sun","is","up"]}");</programlisting></para>
    </sect2>

    <sect2 id="proxymode">
      

      <title>WsECL and Proxy mode</title>

      

      <para>For direct HTTP-GET
      and HTTP-FORM-POST
      calls to Roxie, change the URL to use
      proxy mode as shown below:<programlisting>Change:
/WsEcl/<emphasis role="bold">submit</emphasis>/query/RoxieTargetName/QueryName
to
/WsEcl/<emphasis role="bold">proxy</emphasis>/query/RoxieTargetName/QueryName</programlisting></para>

      <para>Parameterized WsEcl proxy calls to Roxie support a subset of the
      parameter formats supported by non-proxy mode calls.</para>

      <para><programlisting>/WsEcl/proxy/query/mytarget/myquery?param1=value</programlisting>For
      complex parameters, use dot notation to specify nested values. For
      example:</para>

      

      <programlisting>&lt;MyQuery&gt;
  &lt;State&gt;FL&lt;/State&gt;
  &lt;Regs&gt;
    &lt;Reg&gt;
      &lt;Name&gt;SOUTH&lt;/Name&gt;
      &lt;Codes&gt;
        &lt;Code&gt;PBI&lt;/Code&gt;
        &lt;Code&gt;FLL&lt;/Code&gt;
      &lt;/Code&gt;
    &lt;/Reg&gt;
    &lt;Reg&gt;
      &lt;Name&gt;NORTH&lt;/Name&gt;
      &lt;Codes&gt;
        &lt;Code&gt;MCO&lt;/Code&gt;
      &lt;/Code&gt;
    &lt;/Reg&gt;
  &lt;/Regs&gt;
&lt;/MyQuery&gt;</programlisting>

      

      <para>The URL or HTTP
      Form would set the following parameters:<programlisting>State=FL
Regs.Reg.0.Name=SOUTH
Regs.Reg.0.Codes.Code.0=PBI
Regs.Reg.0.Codes.Code.1=FLL
Regs.Reg.1.Name=NORTH
Regs.Reg.1.Codes.Code=MCO</programlisting></para>
    </sect2>

    <sect2>
      

      <title>Expanded Mode in WsECL</title>

      

      <para>To include the schema in results, add the <emphasis
      role="bold">expanded</emphasis> decoration to the URL
      as shown below:<programlisting>Change:
/WsEcl/<emphasis role="bold">submit</emphasis>/query/RoxieTargetName/QueryName
to
/WsEcl/<emphasis role="bold">submit</emphasis>/query/RoxieTargetName/QueryName/expanded</programlisting></para>
    </sect2>

    <sect2 id="RESTful_access" role="brk">
      

      <title>Direct RESTful access to Roxie</title>

      

      <para>You can access your Roxie queries directly using a RESTful
      interface in the following manner:</para>

      <para><programlisting>http://&lt;ip&gt;:9876/&lt;target&gt;/&lt;queryid&gt;?&lt;stored1&gt;=&lt;value&gt;
       &amp;&lt;storeddataset&gt;.Row.0.name=abc&amp;storeddataset.Row.0.id=123</programlisting>where,</para>

      <para>ip is the IP address or hostname
      of your Roxie server or a VIP to a
      range of IPs for a farm of Roxie servers</para>

      <para><emphasis>target</emphasis> is the name of the target
      cluster</para>

      <para><emphasis>queryid</emphasis> is the published Query's Query
      Id.</para>

      <para><emphasis>stored1</emphasis> is an input variable (using STORED
      in ECL) and value is the
      <emphasis>value</emphasis> to submit</para>

      <para><emphasis>storeddataset</emphasis> is a dataset to be passed in to
      the query</para>

      <para>For example:</para>

      <para><programlisting>http://127.0.0.1:9876/roxie/echotest.1?echoValue=Ziggy%20played%20guitar</programlisting></para>

      <para></para>
    </sect2>

    <sect2>
      

      <title>Roxie Results</title>

      

      <para>By default, Roxie results from HTTP
      queries do not return empty elements (tags). If a field's value is
      empty, the tag is not returned. However, at times an application may
      expect all tags to be returned, so you can add a URL
      decoration to override the default behavior. This causes the empty tags
      to return with a value of an empty string.</para>

      <para><programlisting>.trim=o</programlisting></para>

      <para>The <emphasis role="bold">.trim=0</emphasis> option can be added
      to SOAP, JSON,
      URL, or Web form queries for both
      WsECL and Roxie.</para>

      <para><emphasis role="bold">WsECL RESTful:</emphasis></para>

      <para><programlisting>http://ip:port/WsEcl/submit/query/roxie/myquery?param1=abc&amp;.trim=0</programlisting></para>

      <para><emphasis role="bold">WsECL SOAP:</emphasis></para>

      <para><programlisting>http://ip:port/WsEcl/soap/query/roxie/myquery?.trim=0</programlisting></para>

      <para><emphasis role="bold">WsECL JSON:</emphasis></para>

      <para><programlisting>http://ip:port/WsEcl/json/query/roxie/myquery?.trim=0</programlisting></para>

      <para><emphasis role="bold">Roxie Direct SOAP
      or JSON:</emphasis></para>

      <para><programlisting>http://ip:port/target/myquery?.trim=0</programlisting></para>

      <para><emphasis role="bold">Roxie Direct RESTful:</emphasis></para>

      <para><programlisting>http://ip:port/roxie/myquery?param1=abc&amp;.trim=0</programlisting></para>

      <para><emphasis role="bold">Form submission:</emphasis></para>

      <para>For a RESTful form submission to either WsECL or Roxie, add the
      .trim=0 decoration to your URL.</para>

      <para></para>

      <para>Running any custom XSLT should
      automatically set the .trim=0 option.</para>
    </sect2>
  </sect1>
</chapter>
