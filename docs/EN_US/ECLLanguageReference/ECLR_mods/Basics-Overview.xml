<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Overview" role="nobrk">
  <!-- DNT-Start --><title>Overview</title><!-- DNT-End -->

  <para><emphasis role="bold">E</emphasis>nterprise <emphasis
  role="bold">C</emphasis>ontrol <emphasis role="bold">L</emphasis>anguage
  (<!-- DNT-Start -->ECL<!-- DNT-End -->)<indexterm>
      <primary><emphasis role="bold"><!-- DNT-Start -->ECL<!-- DNT-End --></emphasis></primary>
    </indexterm> has been designed specifically for huge data projects using
  the LexisNexis High Performance Computer Cluster (<!-- DNT-Start -->HPCC<!-- DNT-End -->)<indexterm>
      <primary><emphasis role="bold"><!-- DNT-Start -->HPCC<!-- DNT-End --></emphasis></primary>
    </indexterm>. ECLâs extreme scalability comes from a design that allows
  you to leverage every query you create for re-use in subsequent queries as
  needed. To do this, <!-- DNT-Start -->ECL<!-- DNT-End --> takes a Dictionary approach to building queries
  wherein each <!-- DNT-Start -->ECL<!-- DNT-End --> definition defines an expression. Each previous Definition
  can then be used in succeeding <!-- DNT-Start -->ECL<!-- DNT-End --> definitionsâ<emphasis>the language
  extends itself as you use it</emphasis>.</para>

  <sect2 id="Attributes_versus_Actions">
    <!-- DNT-Start --><title>Definitions versus Actions</title><!-- DNT-End -->

    <para>Functionally, there are two types of <!-- DNT-Start -->ECL<!-- DNT-End --> code: Definitions (<!-- DNT-Start -->AKA<!-- DNT-End -->
    Attribute definitions) and executable Actions. Actions are not valid for
    use in expressions because they do not return values. Most <!-- DNT-Start -->ECL<!-- DNT-End --> code is
    composed of definitions.</para>

    <para>Definitions only define <emphasis>what</emphasis> is to be done,
    they do not actually execute. This means that the <!-- DNT-Start -->ECL<!-- DNT-End --> programmer should
    think in terms of writing code that specifies <emphasis>what</emphasis> to
    do rather than <emphasis>how</emphasis> to do it. This is an important
    concept in that, the programmer is telling the supercomputer
    <emphasis>what</emphasis> needs to happen and not directing <emphasis>how
    </emphasis>it must be accomplished. This frees the super-computer to
    optimize the actual execution in any way it needs to produce the desired
    result.</para>

    <para>A second consideration is: the order that Definitions appear in
    source code does not define their execution orderâ<!-- DNT-Start -->ECL<!-- DNT-End --> is a non-procedural
    language<indexterm>
        <primary>non-procedural language</primary>
      </indexterm>. When an Action (such as <!-- DNT-Start -->OUTPUT<!-- DNT-End -->) executes, all the
    Definitions it needs to use (drilling down to the lowest level Definitions
    upon which others are built) are compiled and optimizedâin other words,
    unlike other programming languages, there is no inherent execution order
    implicit in the order that definitions appear in source code (although
    there is a necessary order for compilation to occur without errorâforward
    reference<indexterm>
        <primary>forward reference</primary>
      </indexterm>s are not allowed). This concept of âorderless executionâ
    requires a different mindset from standard, order-dependent programming
    languages because it makes the code appear to execute âall at
    once.â</para>
  </sect2>

  <sect2 id="Syntax_Issues">
    <!-- DNT-Start --><title>Syntax Issues</title><!-- DNT-End -->

    <para><!-- DNT-Start -->ECL<!-- DNT-End --> is not case-sensitive. White space is ignored, allowing
    formatting for readability as needed.</para>

    <para>Comments in <!-- DNT-Start -->ECL<!-- DNT-End --> code are supported. Block comments must be delimited
    with /* and */.</para>

    <!-- DNT-Start --><programlisting>/* this is a block comment - the terminator can be on the same line
or any succeeding line â everything in between is ignored */</programlisting><!-- DNT-End -->

    <para>Single-line comments must begin with //.</para>

    <!-- DNT-Start --><programlisting>// this is a one-line comment</programlisting><!-- DNT-End -->

    <para><!-- DNT-Start -->ECL<!-- DNT-End --> uses the standard <emphasis>object.property</emphasis> syntax
    used by many other programming languages (however, <!-- DNT-Start -->ECL<!-- DNT-End --> is not an
    object-oriented language) to qualify Definition scope and disambiguate
    field references within tables:</para>

    <!-- DNT-Start --><programlisting>ModuleName.Definition //reference an definition from another module/folder</programlisting><!-- DNT-End -->

    <!-- DNT-Start --><programlisting>Dataset.Field       //reference a field in a dataset or recordset</programlisting><!-- DNT-End -->
  </sect2>
</sect1>
