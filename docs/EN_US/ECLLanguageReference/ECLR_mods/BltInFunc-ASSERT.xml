<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="ASSERT">
  <!-- DNT-Start --><title>ASSERT</title><!-- DNT-End -->

  <para><emphasis role="bold"><!-- DNT-Start -->ASSERT<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->ASSERT<!-- DNT-End --></primary>
    </indexterm>( </emphasis><emphasis>condition </emphasis><emphasis
  role="bold">[ </emphasis><emphasis>, message </emphasis><emphasis
  role="bold">] [ </emphasis>, <emphasis role="bold"><!-- DNT-Start -->FAIL<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->FAIL<!-- DNT-End --></primary>
    </indexterm> ] [ </emphasis>, <emphasis role="bold"><!-- DNT-Start -->CONST<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->CONST<!-- DNT-End --></primary>
    </indexterm> ])</emphasis></para>

  <para><emphasis role="bold"><!-- DNT-Start -->ASSERT<!-- DNT-End -->( </emphasis><emphasis>recset, condition
  </emphasis><emphasis role="bold">[ </emphasis><emphasis>, message
  </emphasis><emphasis role="bold">] [ </emphasis>, <emphasis role="bold"><!-- DNT-Start -->FAIL<!-- DNT-End -->
  ] [ </emphasis>, <emphasis role="bold"><!-- DNT-Start -->CONST<!-- DNT-End --> ] [, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> |
  <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [,
  <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [ (</emphasis> <emphasis>numthreads
  </emphasis><emphasis role="bold">) ] ] [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis>
  <emphasis>name </emphasis><emphasis role="bold">) ]</emphasis><emphasis
  role="bold"> )</emphasis><indexterm>
      <primary><!-- DNT-Start -->ASSERT<!-- DNT-End --> function</primary>
    </indexterm></para>

  <para><emphasis role="bold"><!-- DNT-Start -->ASSERT<!-- DNT-End -->( </emphasis><emphasis>recset,
  assertlist</emphasis><emphasis role="bold"> [, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> |
  <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [,
  <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [ (</emphasis> <emphasis>numthreads
  </emphasis><emphasis role="bold">) ] ] [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis>
  <emphasis>name </emphasis><emphasis role="bold">) ]</emphasis><emphasis
  role="bold"> )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.65pt" />

        <colspec colwidth="308.15pt" />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>condition</emphasis><!-- DNT-End --></entry>

            <entry>The logical expression that should be always be
            true.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>message</emphasis><!-- DNT-End --></entry>

            <entry>Optional. The error to display in the workunit. If omitted,
            a message is generated from the approximate location in the code
            and the condition being checked.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">FAIL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies an exception is generated, immediately
            terminating the workunit.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">CONST</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the condition is evaluated during code
            generation.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>recset</emphasis><!-- DNT-End --></entry>

            <entry>The set of records for which to check the condition against
            each record.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the output record order is not
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Specifies the significance of the output record
            order.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

            <entry>When False, specifies the output record order is not
            significant. When True, specifies the default output record
            order.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is not
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity in
            parallel.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity using
            <emphasis>numthreads</emphasis> threads.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Override the algorithm used for this
            activity.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

            <entry>The algorithm to use for this activity. Must be from the
            list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and
            <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>assertlist</emphasis><!-- DNT-End --></entry>

            <entry>A comma-delimited list of <!-- DNT-Start -->ASSERTs<!-- DNT-End --> of the first form, used
            to check multiple conditions against each record in the
            <emphasis>recset</emphasis>.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold"><!-- DNT-Start -->ASSERT<!-- DNT-End --> </emphasis>action evaluates the
  <emphasis>condition</emphasis>, and if false, posts the
  <emphasis>message</emphasis> in the workunit. The workunit terminates
  immediately if the <!-- DNT-Start -->FAIL<!-- DNT-End --> option is present.</para>

  <para>Form one is the scalar form, evaluating the
  <emphasis>condition</emphasis> once. Form two evaluates the
  <emphasis>condition</emphasis> once for each record in the
  <emphasis>recset</emphasis>. Form three is a variant of form two that nests
  multiple form one <!-- DNT-Start -->ASSERTs<!-- DNT-End --> so that each condition is checked against each
  record in the <emphasis>recset</emphasis>.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting>val1 := 1;
val2 := 1;
val3 := 2;
val4 := 2 : STORED('val4');
ASSERT(val1 = val2);
ASSERT(val1 = val2, 'Abc1');
ASSERT(val1 = val3);
ASSERT(val1 = val3, 'Abc2');
ASSERT(val1 = val4);
ASSERT(val1 = val4, 'Abc3');
ds := DATASET([1,2],{INTEGER val1}) : GLOBAL;
 // global stops advanced constant folding (if ever done)
ds1 := ASSERT(ds, val1 = val2);
ds2 := ASSERT(ds1, val1 = val2, 'Abc4');
ds3 := ASSERT(ds2, val1 = val3);
ds4 := ASSERT(ds3, val1 = val3, 'Abc5');
ds5 := ASSERT(ds4, val1 = val4);
ds6 := ASSERT(ds5, val1 = val4, 'Abc6');
OUTPUT(ds6);
ds7 := ASSERT(ds(val1 != 99),
    ASSERT(val1 = val2),
    ASSERT(val1 = val2, 'Abc7'),
    ASSERT(val1 = val3),
    ASSERT(val1 = val3, 'Abc8'),
    ASSERT(val1 = val4),
    ASSERT(val1 = val4, 'Abc9'));
OUTPUT(ds7);
rec := RECORD
  INTEGER val1;
  STRING text;
END;
rec t(ds l) := TRANSFORM
  ASSERT(l.val1 &lt;= 3);
  SELF.text := CASE(l.val1,1=&gt;'One',2=&gt;'Two',3=&gt;'Three','Zero');
  SELF := l;
END;
OUTPUT(PROJECT(ds, t(LEFT)));
</programlisting><!-- DNT-End -->

  <para>See Also: <link linkend="FAIL"><!-- DNT-Start -->FAIL<!-- DNT-End --></link>, <link
  linkend="ERROR"><!-- DNT-Start -->ERROR<!-- DNT-End --></link></para>
</sect1>
