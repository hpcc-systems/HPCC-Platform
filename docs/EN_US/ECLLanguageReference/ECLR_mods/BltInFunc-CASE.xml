<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="CASE">
  <title>CASE</title>

  <para><emphasis role="bold">CASE<indexterm>
      <primary>CASE</primary>
    </indexterm><indexterm>
      <primary>CASE function</primary>
    </indexterm>(</emphasis><emphasis>expression, caseval =&gt; value,
  </emphasis><emphasis role="bold">[</emphasis><emphasis>... , caseval =&gt;
  value </emphasis><emphasis role="bold">]</emphasis><emphasis>
  </emphasis><emphasis role="bold">[,</emphasis><emphasis> elsevalue
  </emphasis><emphasis role="bold">] )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="79.75pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>expression</emphasis></entry>

            <entry>An expression that results in a single value.</entry>
          </row>

          <row>
            <entry><emphasis>caseval</emphasis></entry>

            <entry>A value to compare against the result of the
            expression.</entry>
          </row>

          <row>
            <entry>=&gt;</entry>

            <entry>The "results in" operator--valid only in CASE, MAP and
            CHOOSESETS.</entry>
          </row>

          <row>
            <entry><emphasis>value</emphasis></entry>

            <entry>The value to return. This may be any expression or
            action.</entry>
          </row>

          <row>
            <entry><emphasis>elsevalue</emphasis></entry>

            <entry>Optional. The value to return when the result of the
            expression does not match any of the <emphasis>caseval</emphasis>
            values. May be omitted if all return values are actions (the
            default would then be no action), or all return values are record
            sets (the default would then be an empty record set).</entry>
          </row>

          <row>
            <entry>Return:</entry>

            <entry>CASE returns a single value, a set of values, a record set,
            or an action.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">CASE </emphasis>function evaluates the
  <emphasis>expression</emphasis> and returns the <emphasis>value</emphasis>
  whose <emphasis>caseval </emphasis>matches the <emphasis>expression
  </emphasis>result. If none match, it returns the
  <emphasis>elsevalue</emphasis>.</para>

  <para>There may be as many <emphasis>caseval </emphasis>=&gt;
  <emphasis>value</emphasis> parameters as necessary to specify all the
  expected values of the <emphasis>expression</emphasis> (there must be at
  least one). All return <emphasis>value </emphasis>parameters must be of the
  same type.</para>

  <para>Example:</para>

  <programlisting lang="ECL" role="runnable">//simple example
MyExp := 1+2; 
MyChoice := CASE(MyExp, 1 =&gt; 9, 2 =&gt; 8, 3 =&gt; 7, 4 =&gt; 6, 5);
  // returns a value of 7 for the value of MyExp=3
OUTPUT(MyChoice);

//example using a DATASET
personRecord := RECORD
  STRING UID;
  STRING first_name;
  STRING last_name;
  STRING address;
  STRING city;
  STRING state;
  STRING zip;
END;
person := DATASET([{'923','James','Jones','123 Elm Street','Hollywood','FL','33022'},
                   {'924','Sally','Jones','22 Main Street','Tampa','FL','33604'},
                   {'925','Jose','Gomez','111 Biscaya Lane','Miami','FL','33101'},
                   {'926','Adam','Wesson','77 Sunset Blvd','Boston','MA','02108'},
                   {'927','Evelyn','Murray','740 SW 10th Street','Boston ','MA','02116'},
                   {'928','Joe','Yung','7511 Simson Avenue','Chicago','IL','60131'}], personRecord);

MyRecSet := CASE(MyExp, 1 =&gt; Person(state = 'FL'),
    2 =&gt; Person(state = 'GA'),
    3 =&gt; Person(state = 'MA'),
    4 =&gt; Person(state = 'IL'),
    person);
  // returns set of MA Persons for the value of MyExp=3
  // set MyExp to a number &gt; 4 to get all records
OUTPUT(MyRecSet);
</programlisting>

  <para>See Also: <link linkend="MAP">MAP</link>, <link
  linkend="CHOOSE">CHOOSE</link>, <link linkend="IF">IF</link>, <link
  linkend="REJECTED">REJECTED</link>, <link
  linkend="WHICH">WHICH</link></para>
</sect1>
