<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Expressions_and_Operators" role="nobrk">
  <!-- DNT-Start --><title>Expressions and Operators<indexterm>
      <primary>Operators</primary>
    </indexterm><indexterm>
      <primary>Expressions and Operators</primary>
    </indexterm></title><!-- DNT-End -->

  <para>Expressions<indexterm>
      <primary>Expressions</primary>
    </indexterm> are evaluated left-to-right and from the inside out (in
  nested functions). Parentheses may be used to alter the default evaluation
  order of precedence for all operators.</para>

  <sect2 id="Arithmetic_Operators">
    <!-- DNT-Start --><title>Arithmetic Operators</title><!-- DNT-End -->

    <!-- DNT-Start --><para>Standard arithmetic operators<indexterm>
        <primary>arithmetic operators</primary>
      </indexterm> are supported for use in expressions, listed here in their
    evaluation precedence:</para><!-- DNT-End -->

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup align="left" cols="2">
        <colspec colwidth="194.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start -->Division <indexterm>
                <primary>Division</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>/</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Integer Division<indexterm>
                <primary>Integer Division</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->DIV<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Modulus Division<indexterm>
                <primary>Modulus Division</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>%</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Multiplication<indexterm>
                <primary>Multiplication</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>*</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Addition<indexterm>
                <primary>Addition</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>+</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Subtraction<indexterm>
                <primary>Subtraction</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>-</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Division by zero<indexterm>
        <primary>Division by zero</primary>
      </indexterm> defaults to generating a zero result (0), rather than
    reporting a âdivide by zeroâ error. This avoids invalid or unexpected data
    aborting a long job. The default behaviour can be changed using</para>

    <!-- DNT-Start --><programlisting>#OPTION ('divideByZero', 'zero'); //evaluate to zero</programlisting><!-- DNT-End -->

    <para>The divideByZero option can have the following values:</para>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup align="left" cols="2">
        <colspec colwidth="194.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start -->'zero'<!-- DNT-End --></entry>

            <entry>Evaluate to 0 - the default behaviour.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->'fail'<!-- DNT-End --></entry>

            <entry>Stop and report a division by zero error.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->'nan'<!-- DNT-End --></entry>

            <entry>This is only currently supported for real numbers. Division
            by zero creates a quiet NaN, which will propagate through any real
            expressions it is used in. You can use <!-- DNT-Start -->NOT<!-- DNT-End --> <!-- DNT-Start -->ISVALID<!-- DNT-End -->(x) to test if
            the value is a NaN. Integer and decimal division by zero continue
            to return 0.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>
  </sect2>

  <sect2 id="Bitwise_Operators">
    <!-- DNT-Start --><title>Bitwise Operators</title><!-- DNT-End -->

    <!-- DNT-Start --><para>Bitwise operators<indexterm>
        <primary>Bitwise operators</primary>
      </indexterm> are supported for use in expressions, listed here in their
    evaluation precedence:</para><!-- DNT-End -->

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup align="left" cols="2">
        <colspec colwidth="194.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start -->Bitwise AND<indexterm>
                <primary>Bitwise AND</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&amp;</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Bitwise OR<indexterm>
                <primary>Bitwise OR</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>|</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Bitwise Exclusive OR<indexterm>
                <primary>Bitwise Exclusive OR</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>^</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Bitwise NOT<indexterm>
                <primary>Bitwise NOT</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->BNOT<!-- DNT-End --></entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para></para>
  </sect2>

  <sect2 id="Bitshift_Operators">
    <!-- DNT-Start --><title>Bitshift Operators</title><!-- DNT-End -->

    <!-- DNT-Start --><para>Bitshift operators<indexterm>
        <primary>Bitshift operators</primary>
      </indexterm> are supported for use in integer expressions:</para><!-- DNT-End -->

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup align="left" cols="2">
        <colspec colwidth="194.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start -->Bitshift Right<indexterm>
                <primary>Bitshift Right</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&gt;&gt;</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Bitshift Left<indexterm>
                <primary>Bitshift Left</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&lt;&lt;</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para></para>
  </sect2>

  <sect2 id="Comparison_Operators">
    <!-- DNT-Start --><title>Comparison Operators</title><!-- DNT-End -->

    <para><emphasis>The following comparison operator<indexterm>
        <primary>comparison operator</primary>
      </indexterm>s</emphasis> are supported:</para>

    <para></para>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup align="left" cols="3">
        <colspec colwidth="194.80pt" />

        <colspec colwidth="50" />

        <tbody>
          <row>
            <entry><!-- DNT-Start -->Equivalence<indexterm>
                <primary>Equivalence</primary>
              </indexterm> <!-- DNT-End --></entry>

            <entry>=</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End -->. </entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Not Equal <indexterm>
                <primary>Not Equal</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&lt;&gt;</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Not Equal<!-- DNT-End --></entry>

            <entry>!=</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Less Than<indexterm>
                <primary>Less Than</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&lt;</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Greater Than<indexterm>
                <primary>Greater Than</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&gt;</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Less Than or Equal <indexterm>
                <primary>Less or Equal</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&lt;=</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Greater Than or Equal<indexterm>
                <primary>Greater or Equal</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&gt;=</entry>

            <entry>returns <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Equivalence Comparison<indexterm>
                <primary>Equivalence Comparison</primary>
              </indexterm><!-- DNT-End --></entry>

            <entry>&lt;=&gt;</entry>

            <entry>returns -1, 0, or 1</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>The Greater Than or Equal operator <emphasis
    role="underline">must</emphasis> have the Greater Than (&gt;) sign first.
    For the expression a &lt;=&gt; b, the Equivalence Comparison operator
    returns -1 if a&lt;b, 0 if a=b, and 1 if a&gt;b. When <!-- DNT-Start -->STRINGs<!-- DNT-End --> are compared
    for equivalence, trailing spaces are ignored.</para>
  </sect2>
</sect1>
