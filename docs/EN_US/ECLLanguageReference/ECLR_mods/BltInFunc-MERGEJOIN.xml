<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="MERGEJOIN">
  <!-- DNT-Start --><title>MERGEJOIN<indexterm>
      <primary>MERGEJOIN</primary>
    </indexterm></title><!-- DNT-End -->

  <!-- DNT-Start --><para><emphasis role="bold">MERGEJOIN<indexterm>
      <primary>MERGEJOIN function</primary>
    </indexterm>(</emphasis><emphasis>setofdatasets, joincondition,
  </emphasis><emphasis role="bold">SORTED<indexterm>
      <primary>SORTED</primary>
    </indexterm>( </emphasis><emphasis>fields</emphasis><emphasis
  role="bold">) [</emphasis><emphasis>, jointype</emphasis><emphasis
  role="bold">] [, DEDUP<indexterm>
      <primary>DEDUP</primary>
    </indexterm> ] </emphasis><emphasis role="bold">[, UNORDERED | ORDERED(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [, STABLE | UNSTABLE ] [, PARALLEL [ (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ] [, ALGORITHM(</emphasis> <emphasis>name </emphasis><emphasis role="bold">) ] )</emphasis></para><!-- DNT-End -->

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="82.00pt" />

      <colspec />

      <tbody>
        <row>
          <entry><!-- DNT-Start --><emphasis>setofdatasets</emphasis><!-- DNT-End --></entry>

          <entry>The <!-- DNT-Start -->SET<!-- DNT-End --> of recordsets to process ([idx1,idx2,idx3]),
          typically <!-- DNT-Start -->INDEXes<!-- DNT-End -->, which all must have the same format.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>joincondition</emphasis><!-- DNT-End --></entry>

          <entry>An expression specifying how to match records in the
          <emphasis>setofdatasets</emphasis>.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis role="bold">SORTED</emphasis><!-- DNT-End --></entry>

          <entry>Specifies the sort order of records in the input
          <emphasis>setofdatasets</emphasis> and also the output sort order of
          the result set.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>fields</emphasis><!-- DNT-End --></entry>

          <entry>A comma-delimited list of fields in the
          <emphasis>setofdatasets</emphasis>, which must be a subset of the
          input sort order. These fields must all be used in the
          <emphasis>joincondition</emphasis> as they define the order in which
          the fields are <!-- DNT-Start -->STEPPED<!-- DNT-End -->.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>jointype</emphasis><!-- DNT-End --></entry>

          <entry>Optional. An inner join if omitted, else one of the listed
          types below.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis role="bold">DEDUP</emphasis><!-- DNT-End --></entry>

          <entry>Optional. Specifies the output result set contains only
          unique records.</entry>
        </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the output record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Specifies the significance of the output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

            <entry>When False, specifies the output record order is not significant. When True, specifies the default output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity in parallel.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity using <emphasis>numthreads</emphasis> threads.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Override the algorithm used for this activity.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

            <entry>The algorithm to use for this activity. Must be from the list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
          </row>

      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold"><!-- DNT-Start -->MERGEJOIN<!-- DNT-End --></emphasis> function is a variation
  of the <!-- DNT-Start -->SET<!-- DNT-End --> <!-- DNT-Start -->OF<!-- DNT-End --> <!-- DNT-Start -->DATASETs<!-- DNT-End --> forms of the <!-- DNT-Start -->MERGE<!-- DNT-End --> and <!-- DNT-Start -->JOIN<!-- DNT-End --> functions. Like <!-- DNT-Start -->MERGE<!-- DNT-End -->, it
  merges records from the <emphasis>setofdatasets</emphasis> into a single
  result set, but like <!-- DNT-Start -->JOIN<!-- DNT-End -->, it uses the <emphasis>joincondition</emphasis>
  and <emphasis>jointype</emphasis> to determine which records to include in
  the result set. It does not, however, use a <!-- DNT-Start -->TRANSFORM<!-- DNT-End --> function to produce
  the result; it includes all records, unchanged, from the
  <emphasis>setofdatasets</emphasis> that match the
  <emphasis>joincondition</emphasis>.</para>

  <sect2 id="Matching_Logic_mergejoin">
    <!-- DNT-Start --><title>Matching Logic<indexterm>
        <primary>Record Matching Logic</primary>
      </indexterm></title><!-- DNT-End -->

    <para>The record matching<indexterm>
        <primary>record matching</primary>
      </indexterm> <emphasis>joincondition</emphasis> may contain two parts: a
    <!-- DNT-Start -->STEPPED<!-- DNT-End --> condition that may optionally be <!-- DNT-Start -->ANDed<!-- DNT-End --> with non-<!-- DNT-Start -->STEPPED<!-- DNT-End -->
    conditions. The <!-- DNT-Start -->STEPPED<!-- DNT-End --> expression contains equality expressions of the
    <emphasis>fields</emphasis> from the <!-- DNT-Start -->SORTED<!-- DNT-End --> option, <!-- DNT-Start -->ANDed<!-- DNT-End --> together, using
    <!-- DNT-Start -->LEFT<!-- DNT-End --> and <!-- DNT-Start -->RIGHT<!-- DNT-End --> as dataset qualifiers. If not present, the <!-- DNT-Start -->STEPPED<!-- DNT-End -->
    condition is deduced from the <emphasis>fields</emphasis> specified by the
    <!-- DNT-Start -->SORTED<!-- DNT-End --> option.</para>

    <para>The order of the datasets within the
    <emphasis>setofdatasets</emphasis> can be significant to the way the
    <emphasis>joincondition</emphasis> is evaluated. The
    <emphasis>joincondition</emphasis> is duplicated between adjacent pairs of
    datasets, which means that this <emphasis>joincondition</emphasis>:</para>

    <para><!-- DNT-Start -->LEFT<!-- DNT-End -->.field = <!-- DNT-Start -->RIGHT<!-- DNT-End -->.field</para>

    <para>when applied against a <emphasis>setofdatasets </emphasis>containing
    three datasets, is logically equivalent to:</para>

    <para>ds1.field = ds2.field <!-- DNT-Start -->AND<!-- DNT-End --> ds2.field = ds3.field</para>
  </sect2>

  <sect2 id="Join_Types_Mergejoin">
    <!-- DNT-Start --><title>Join Types<indexterm>
        <primary>Join Types</primary>
      </indexterm>:</title><!-- DNT-End -->

    <!-- DNT-Start --><para>The following <emphasis>jointypes</emphasis> produce the following
    types of results, based on the records matching produced by the
    <emphasis>joincondition</emphasis>:</para><!-- DNT-End -->

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="94.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">INNER<indexterm>
                <primary>INNER</primary>
              </indexterm></emphasis><!-- DNT-End --></entry>

            <entry>Only those records that exist in all datasets in the
            <emphasis>setofdatasets</emphasis>.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">LEFT OUTER<indexterm>
                <primary>LEFT OUTER</primary>
              </indexterm></emphasis><!-- DNT-End --></entry>

            <entry>At least one record for every record in the first dataset
            in the <emphasis>setofdatasets</emphasis>.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">LEFT ONLY<indexterm>
                <primary>LEFT ONLY</primary>
              </indexterm></emphasis><!-- DNT-End --></entry>

            <entry>One record for every record in the first dataset in the
            <emphasis>setofdatasets</emphasis> for which there is no match in
            any of the subsequent datasets.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">MOFN<indexterm>
                <primary>MOFN</primary>
              </indexterm>(</emphasis>min <emphasis
            role="bold">[</emphasis>,max<emphasis
            role="bold">])</emphasis><!-- DNT-End --></entry>

            <entry>One record for every record with matching records in min
            number of adjacent datasets within the
            <emphasis>setofdatasets</emphasis>. If max is specified, the
            record is not included if max number of dataset matches are
            exceeded.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>Rec := RECORD,MAXLENGTH(4096)
  STRING1 Letter;
  UNSIGNED1 DS;
END;
ds1 := DATASET([{'A',1},{'B',1},{'C',1},{'D',1},{'E',1}],Rec);
ds2 := DATASET([{'A',2},{'B',2},{'H',2},{'I',2},{'J',2}],Rec);
ds3 := DATASET([{'B',3},{'C',3},{'M',3},{'N',3},{'O',3}],Rec);
ds4 := DATASET([{'A',4},{'B',4},{'R',4},{'S',4},{'T',4}],Rec);
ds5 := DATASET([{'B',5},{'V',5},{'W',5},{'X',5},{'Y',5}],Rec);
SetDS := [ds1,ds2,ds3,ds4,ds5];
j1 := MERGEJOIN(SetDS,
                STEPPED(LEFT.Letter=RIGHT.Letter),
                SORTED(Letter));
j2 := MERGEJOIN(SetDS,
                STEPPED(LEFT.Letter=RIGHT.Letter),
                SORTED(Letter),LEFT OUTER);
j3 := MERGEJOIN(SetDS,
                STEPPED(LEFT.Letter=RIGHT.Letter),
                SORTED(Letter),LEFT ONLY);
j4 := MERGEJOIN(SetDS,
                STEPPED(LEFT.Letter=RIGHT.Letter),
                SORTED(Letter),MOFN(3));
j5 := MERGEJOIN(SetDS,
                STEPPED(LEFT.Letter=RIGHT.Letter),
                SORTED(Letter),MOFN(3,4));
OUTPUT(j1);
OUTPUT(j2);
OUTPUT(j3);
OUTPUT(j4);
OUTPUT(j5);
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="MERGE"><!-- DNT-Start -->MERGE<!-- DNT-End --></link>, <link
    linkend="JOIN"><!-- DNT-Start -->JOIN<!-- DNT-End --></link>, <link linkend="STEPPED"><!-- DNT-Start -->STEPPED<!-- DNT-End --></link></para>
  </sect2>
</sect1>
