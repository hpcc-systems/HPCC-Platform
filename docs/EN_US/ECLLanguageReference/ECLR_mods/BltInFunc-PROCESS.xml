<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="PROCESS">
  <!-- DNT-Start --><title>PROCESS</title><!-- DNT-End -->

  <para><emphasis role="bold"><!-- DNT-Start -->PROCESS<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->PROCESS<!-- DNT-End --></primary>
    </indexterm><indexterm>
      <primary><!-- DNT-Start -->PROCESS<!-- DNT-End --> function</primary>
    </indexterm>(</emphasis><emphasis>recordset, datarow,</emphasis><emphasis
  role="bold"> </emphasis><emphasis>datasettransform, rowtransform
  </emphasis><emphasis role="bold">[, <!-- DNT-Start -->LOCAL<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->LOCAL<!-- DNT-End --></primary>
    </indexterm> ] </emphasis><emphasis role="bold">[, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> | <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [, <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [ (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ] [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis> <emphasis>name </emphasis><emphasis role="bold">) ] )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="85.75pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>recordset</emphasis><!-- DNT-End --></entry>

            <entry>The set of records to process.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>datarow</emphasis><!-- DNT-End --></entry>

            <entry>The initial <!-- DNT-Start -->RIGHT<!-- DNT-End --> record to process, typically expressed by
            the <!-- DNT-Start -->ROW<!-- DNT-End --> function.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>datasettransform</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->TRANSFORM<!-- DNT-End --> function to call for each record in the
            recordset.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>rowtransform</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->TRANSFORM<!-- DNT-End --> function to call to produce the next <!-- DNT-Start -->RIGHT<!-- DNT-End -->
            record for the <emphasis>datasettransform</emphasis>.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">LOCAL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the operation is performed on each
            supercomputer node independently, without requiring interaction
            with all other nodes to acquire data; the operation maintains the
            distribution of any previous <!-- DNT-Start -->DISTRIBUTE<!-- DNT-End -->.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the output record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Specifies the significance of the output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

            <entry>When False, specifies the output record order is not significant. When True, specifies the default output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity in parallel.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity using <emphasis>numthreads</emphasis> threads.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Override the algorithm used for this activity.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

            <entry>The algorithm to use for this activity. Must be from the list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Return:<!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->PROCESS<!-- DNT-End --> returns a record set.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold"><!-- DNT-Start -->PROCESS<!-- DNT-End --> </emphasis>function operates in a
  similar manner to <!-- DNT-Start -->ITERATE<!-- DNT-End --> in that it processes through all records in the
  <emphasis>recordset</emphasis> one pair of records at a time, performing the
  <emphasis>datasettransform</emphasis> function on each pair of records in
  turn. The first record in the recordset is passed to the
  <emphasis>datasettransform</emphasis> as the first left record, paired with
  the <emphasis>datarow</emphasis> as the right record. The
  <emphasis>rowtransform</emphasis> is used to construct the right record for
  the next pair. If either the <emphasis>datasettransform</emphasis> or the
  <emphasis>rowtransform</emphasis> contains a <!-- DNT-Start -->SKIP<!-- DNT-End -->, then no record is
  produced by the <emphasis>datasettransform</emphasis> for the skipped
  record.</para>

  <sect2 id="TRANSFORM_Function_Requirements_Process">
    <!-- DNT-Start --><title>TRANSFORM Function<indexterm>
        <primary>TRANSFORM Function</primary>
      </indexterm> Requirements - PROCESS<indexterm>
        <primary>TRANSFORM Function Requirements</primary>
      </indexterm><indexterm>
        <primary>Transform Requirements</primary>
      </indexterm><indexterm>
        <primary>Transform Requirement Process</primary>
      </indexterm></title><!-- DNT-End -->

    <para>The <emphasis>datasettransform</emphasis> and
    <emphasis>rowtransform</emphasis> functions both must take at least two
    parameters: a <!-- DNT-Start -->LEFT<!-- DNT-End --> record of the same format as the <emphasis>recordset
    </emphasis>and a <!-- DNT-Start -->RIGHT<!-- DNT-End --> record of the same format as the
    <emphasis>datarow</emphasis>. The format of the resulting record set for
    the <emphasis>datasettransform</emphasis> both must be the same as the
    input <emphasis>recordset</emphasis>. The format of the resulting record
    set for the <emphasis>rowtransform</emphasis> both must be the same as the
    initial <emphasis>datarow</emphasis>. Optionally, the
    <emphasis>datsettransform</emphasis> may take a third parameter: an
    integer <!-- DNT-Start -->COUNTER<!-- DNT-End --> specifying the number of times the transform has been
    called for the <emphasis>recordset </emphasis>or the current group in the
    <emphasis>recordset</emphasis> (see the <!-- DNT-Start -->GROUP<!-- DNT-End --> function).</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>DSrec := RECORD
  STRING4 Letter;
  STRING4 LeftRecIn := '';
  STRING4 RightRecIn := '';
END;
StateRec := RECORD
  STRING2 Letter;
END;
ds := DATASET([{'AA'},{'BB'},{'CC'},{'DD'},{'EE'}],DSrec);

DSrec DSxform(DSrec L,StateRec R) := TRANSFORM
  SELF.Letter := L.Letter[1..2] + R.Letter;
  SELF.LeftRecIn := L.Letter;
  SELF.RightRecIn := R.Letter;
END;
StateRec ROWxform(DSrec L,StateRec R) := TRANSFORM
  SELF.Letter := L.Letter[1] + R.Letter[1];
END;

p := PROCESS(ds,
             ROW({'ZZ'},StateRec),
             DSxform(LEFT,RIGHT),
             ROWxform(LEFT,RIGHT));
OUTPUT(p);
/* Result:
AAZZ AA ZZ
BBAZ BB AZ
CCBA CC BA
DDCB DD CB
EEDC EE DC */

//******************************************************************
// This examples uses different information for state tracking
// (the point of the PROCESS function) through the input record set.
  
w1 := RECORD
  STRING v{MAXLENGTH(100)};
END;

s1 := RECORD
  BOOLEAN priorA;
END;

ds := DATASET([{'B'},{'A'}, {'C'}, {'D'}], w1);

s1 doState(w1 l, s1 r) := TRANSFORM
  SELF.priorA := l.v = 'A';
END;

w1 doRecords(w1 l, s1 r) := TRANSFORM
  SELF.v := l.v + IF(r.priorA, '***', '');
END;

initState := ROW({TRUE}, s1);

rs := PROCESS(ds,
              initState,
              doRecords(LEFT,RIGHT),
              doState(LEFT,RIGHT));

OUTPUT(rs);
/* Result:
B***
A
C***
D
*/
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="TRANSFORM_Structure"><!-- DNT-Start -->TRANSFORM<!-- DNT-End --> Structure</link>, <link linkend="RECORD_Structure"><!-- DNT-Start -->RECORD<!-- DNT-End --> Structure</link>, <link linkend="ROW"><!-- DNT-Start -->ROW<!-- DNT-End --></link>, <link linkend="ITERATE"><!-- DNT-Start -->ITERATE<!-- DNT-End --></link></para>
  </sect2>
</sect1>
