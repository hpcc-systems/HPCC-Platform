<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="SET">
  <!-- DNT-Start --><title>SET</title><!-- DNT-End -->

  <para><emphasis role="bold"><!-- DNT-Start -->SET<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->SET<!-- DNT-End --></primary>
    </indexterm><indexterm>
      <primary><!-- DNT-Start -->SET<!-- DNT-End --> function</primary>
    </indexterm>(</emphasis><emphasis>recordset, field</emphasis> <emphasis
  role="bold">[, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> | <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool
  </emphasis><emphasis role="bold">) ] [, <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [
  (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ] [,
  <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis> <emphasis>name </emphasis><emphasis role="bold">) ]
  )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="78.60pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>recordset</emphasis><!-- DNT-End --></entry>

            <entry>The set of records from which to derive the <!-- DNT-Start -->SET<!-- DNT-End --> of
            values.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>field</emphasis><!-- DNT-End --></entry>

            <entry>The field in the recordset from which to obtain the
            values.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the output record order is not
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Specifies the significance of the output record
            order.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

            <entry>When False, specifies the output record order is not
            significant. When True, specifies the default output record
            order.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is not
            significant.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity in
            parallel.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity using
            <emphasis>numthreads</emphasis> threads.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Override the algorithm used for this
            activity.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

            <entry>The algorithm to use for this activity. Must be from the
            list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and
            <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Return:<!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->SET<!-- DNT-End --> returns a <!-- DNT-Start -->SET<!-- DNT-End --> of values of the same type as the
            field.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold"><!-- DNT-Start -->SET<!-- DNT-End --> </emphasis>function returns a <!-- DNT-Start -->SET<!-- DNT-End --> for
  use in any set operation (such as the <!-- DNT-Start -->IN<!-- DNT-End --> operator), similar to a sub-select
  in <!-- DNT-Start -->SQL<!-- DNT-End --> when used with the <!-- DNT-Start -->IN<!-- DNT-End --> operator. It does not remove duplicate elements
  and does not order the set.</para>

  <para>One common problem is the use of the <!-- DNT-Start -->SET<!-- DNT-End --> function in a filter
  condition, like this:</para>

  <!-- DNT-Start --><programlisting>MyDS := myDataset(myField IN SET(anotherDataset, someField));</programlisting><!-- DNT-End -->

  <para>The code generated for this is inefficient if "anotherDataset"
  contains a large number of elements, and may also cause a "Dataset too large
  to output to workunit" error. A better way to recode the expression would be
  this:</para>

  <!-- DNT-Start --><programlisting>MyDS := JOIN(myDataset, anotherDataset, LEFT.myField = RIGHT.someField, TRANSFORM(LEFT), LOOKUP) ;</programlisting><!-- DNT-End -->

  <para>The end result is the same, the set of "myDataset" records where the
  "myField" value is one of the "someField" values from "anotherDataset," but
  the code is much more efficient in execution.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting>ds := DATASET([{'X',1},{'B',3},{'C',2},{'B',5},
               {'C',4},{'D',6},{'E',2}],
              {STRING1 Ltr, INTEGER1 Val});

//a SET of just the Ltr field values:
s1 := SET(ds,Ltr);
COUNT(s1);  //results in 7
s1;         //results in ['X','B','C','B','C','D','E']

//a simple way to get just the unique elements
//is to use a crosstab TABLE:
t := TABLE(ds,{Ltr},Ltr); //order indeterminant

s2 := SET(t,Ltr);
COUNT(s2);  //results in 5
s2;         //results in   ['D','X','C','E','B']

//sorted unique elements
s3 := SET(SORT(t,Ltr),Ltr);
COUNT(s3);  //results in 5
s3;         //results in ['B','C','D','E','X']</programlisting><!-- DNT-End -->

  <para>See Also: <link linkend="Recordset_Filtering">Sets and Filters</link>,
  <link linkend="SET_OF"><!-- DNT-Start -->SET<!-- DNT-End --> <!-- DNT-Start -->OF<!-- DNT-End --></link>, <link linkend="Set_Operators">Set
  Operators</link>, <link linkend="IN_Operator"><!-- DNT-Start -->IN<!-- DNT-End --> Operator</link></para>
</sect1>
