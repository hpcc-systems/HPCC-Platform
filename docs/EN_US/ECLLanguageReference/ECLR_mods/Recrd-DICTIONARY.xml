<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="DICTIONARY">
  <!-- DNT-Start --><title>DICTIONARY<indexterm>
      <primary>DICTIONARY</primary>
    </indexterm></title><!-- DNT-End -->

  <para><emphasis>attr</emphasis> <emphasis role="bold">:=
  <!-- DNT-Start -->DICTIONARY<!-- DNT-End -->(</emphasis> <emphasis>dataset, structure</emphasis> <emphasis
  role="bold">);</emphasis></para>

  <para><emphasis role="bold"><!-- DNT-Start -->DICTIONARY<!-- DNT-End -->(</emphasis>
  <emphasis>structure</emphasis> <emphasis role="bold">)</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec align="left" colwidth="122.40pt" />

      <colspec />

      <tbody>
        <row>
          <entry><!-- DNT-Start --><emphasis>attr</emphasis><!-- DNT-End --></entry>

          <entry>The name of the <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> for later use in other
          definitions.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>dataset</emphasis><!-- DNT-End --></entry>

          <entry>The name of a <!-- DNT-Start -->DATASET<!-- DNT-End --> or recordset from which to derive the
          <!-- DNT-Start -->DICTIONARY<!-- DNT-End -->. This may be defined inline (similar to an inline
          <!-- DNT-Start -->DATASET<!-- DNT-End -->).</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>structure</emphasis><!-- DNT-End --></entry>

          <entry>The <!-- DNT-Start -->RECORD<!-- DNT-End --> structure (often defined inline) specifying the
          layout of the fields. The first field(s) are key fields, optionally
          followed the "results in" operator (=&gt;) and additional payload
          fields. This is similar to the payload version of an <!-- DNT-Start -->INDEX<!-- DNT-End -->. The
          payload may specify individual fields or may use the name of the
          <emphasis>dataset </emphasis> to payload all the non-key
          fields.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>A <emphasis role="bold"><!-- DNT-Start -->DICTIONARY<!-- DNT-End --></emphasis> allows you to
  efficiently check whether a particular data value is in a list (using the <!-- DNT-Start -->IN<!-- DNT-End -->
  operator), or to simply map data. It is similar to a <!-- DNT-Start -->LOOKUP<!-- DNT-End --> <!-- DNT-Start -->JOIN<!-- DNT-End --> that can be
  used in any context.</para>

  <sect2 id="DICTIONARY_Definition">
    <!-- DNT-Start --><title>DICTIONARY Definition</title><!-- DNT-End -->

    <para>The <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> declaration defines a set of unique records derived
    from the <emphasis>dataset</emphasis> parameter and indexed by the first
    field(s) named in the <emphasis>structure</emphasis> parameter. The
    <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> will contain one record for each unique value(s) in the key
    field(s). You can access an individual record by appending square brackets
    ( [ ] ) to the <emphasis>attr</emphasis> name of the <!-- DNT-Start -->DICTIONARY<!-- DNT-End -->, which
    contain the key field value(s) that identify the specific record to
    access.</para>
  </sect2>

  <sect2 id="Child_DICTIONARY">
    <!-- DNT-Start --><title>DICTIONARY as a Value Type</title><!-- DNT-End -->

    <para>The second form of <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> is a value type with the
    <emphasis>structure</emphasis> parameter specifying the <!-- DNT-Start -->RECORD<!-- DNT-End --> structure
    of the data. This data type usage allows you to specify a <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> as a
    child dataset, similar to the way <!-- DNT-Start -->DATASET<!-- DNT-End --> may be used to define a child
    dataset. This may also be used to pass a <!-- DNT-Start -->DICTIONARY<!-- DNT-End --> as a parameter.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>ColorCodes := DATASET([{'Black' ,0 },
                       {'Brown' ,1 },
                       {'Red'   ,2 },
                       {'Orange',3 },
                       {'Yellow',4 },
                       {'Green' ,5 },
                       {'Blue'  ,6 },
                       {'Violet',7 },
                       {'Grey'  ,8 },
                       {'White' ,9 }], {STRING color,UNSIGNED1 code});

ColorCodesDCT := DICTIONARY(ColorCodes,{Color,Code});    //multi-field key
ColorCodeDCT  := DICTIONARY(ColorCodes,{Color =&gt; Code}); //payload field
CodeColorDCT  := DICTIONARY(ColorCodes,{Code =&gt; Color});

//mapping examples
MapCode2Color(UNSIGNED1 code) := CodeColorDCT[code].color;
MapColor2Code(STRING color)   := ColorCodeDCT[color].code;

OUTPUT(MapColor2Code('Red'));     //2
OUTPUT(MapCode2Color(4));         //'Yellow'

//Search term examples
OUTPUT('Green' IN ColorCodeDCT);  //true
OUTPUT(6 IN CodeColorDCT);        //true
OUTPUT(ROW({'Red',2},RECORDOF(ColorCodes)) IN ColorCodesDCT); //multi-field key, true 

//multi-field payload examples
rec := RECORD
  STRING10  color;
  UNSIGNED1 code; 
  STRING10  name;
END;
Ds := DATASET([{'Black' ,0 , 'Fred'},
               {'Brown' ,1 , 'Seth'},
               {'Red'   ,2 , 'Sue'},
               {'White' ,3 , 'Jo'}], rec);

DsDCT := DICTIONARY(DS,{color =&gt; DS});

OUTPUT('Red' IN DsDCT); //true
DsDCT['Red'].code;      //2
DsDCT['Red'].name;      //Sue

//inline DCT examples
InlineDCT := DICTIONARY([{'Black' =&gt; 0 , 'Fred'},
                         {'Brown' =&gt; 1 , 'Sam'},
                         {'Red'   =&gt; 2 , 'Sue'},
                         {'White' =&gt; 3 , 'Jo'} ], 
                        {STRING10 color =&gt; UNSIGNED1 code,STRING10 name});

OUTPUT('Red' IN InlineDCT); //true
InlineDCT['Red'].code;      //2
InlineDCT['Red'].name;      //Sue
InlineDCT['Red'];           //Red   2   Sue

//Form 2 examples -- parameter passing
MyDCTfunc(DICTIONARY({STRING10 color =&gt; UNSIGNED1 code,STRING10 name}) DCT,
          STRING10 key) := DCT[key].name;
MyDCTfunc(InlineDCT,'White');  //Jo
MyDCTfunc(DsDCT,'Brown');      //Seth
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="DATASET"><!-- DNT-Start -->DATASET<!-- DNT-End --></link>, <link
    linkend="RECORD_Structure"><!-- DNT-Start -->RECORD<!-- DNT-End --> Structure</link>, <link
    linkend="INDEX_record_structure"><!-- DNT-Start -->INDEX<!-- DNT-End --></link>, <link
    linkend="IN_Operator"><!-- DNT-Start -->IN<!-- DNT-End --> Operator</link></para>
  </sect2>
</sect1>
