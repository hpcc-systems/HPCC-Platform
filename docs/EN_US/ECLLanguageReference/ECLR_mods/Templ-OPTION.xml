<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="_OPTION">
  <!-- DNT-Start --><title>#OPTION</title><!-- DNT-End -->

  <para><emphasis role="bold">#<!-- DNT-Start -->OPTION<!-- DNT-End --><indexterm>
      <primary>#<!-- DNT-Start -->OPTION<!-- DNT-End --></primary>
    </indexterm>( </emphasis><emphasis> option, value </emphasis><emphasis
  role="bold">);</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="75.80pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>option</emphasis><!-- DNT-End --></entry>

            <entry>A case sensitive string constant containing the name of the
            option to set.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>value</emphasis><!-- DNT-End --></entry>

            <entry>The value to set the option to. This may be any type of
            value, dependent on what the option expects to be.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">#<!-- DNT-Start -->OPTION<!-- DNT-End --> </emphasis>statement is typically a
  compiler directive giving hints to the code generator as to how best to
  generate the executable code for a workunit. This statement may be used
  outside an <!-- DNT-Start -->XML<!-- DNT-End --> scope and does not require a previous call to the <!-- DNT-Start -->LOADXML<!-- DNT-End -->
  function to instantiate an <!-- DNT-Start -->XML<!-- DNT-End --> scope.</para>

  <sect2 id="Definition_of_Terms">
    <!-- DNT-Start --><title>Definition of Terms</title><!-- DNT-End -->

    <para>These definitions are "internal-only" terms used in the
    <emphasis>option</emphasis> definitions that follow.</para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="2">
          <colspec colwidth="78.10pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>DFA</emphasis><!-- DNT-End --></entry>

              <entry>Deterministic Finite-state Automaton.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Fold</emphasis><!-- DNT-End --></entry>

              <entry>To turn a complex expression into a simpler equivalent
              one. For example, the expression "1+1" can be replaced with "2"
              without altering the result.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Spill</emphasis><!-- DNT-End --></entry>

              <entry>Writing intermediate result sets to disk so that memory
              is available for subsequent steps.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Funnel</emphasis><!-- DNT-End --></entry>

              <entry>The + (append file) operator between datasets can be
              visualized as pouring all the records into a funnel and getting
              a single stream of records out of the bottom; hence the term
              "funnel."</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>TopN</emphasis><!-- DNT-End --></entry>

              <entry>An internally generated activity used in place of
              <!-- DNT-Start -->CHOOSEN<!-- DNT-End -->(<!-- DNT-Start -->SORT<!-- DNT-End -->(xx), n) where n is small, as it can be computed
              much more efficiently than sorting the entire record set then
              discarding all but the first n.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Activity</emphasis><!-- DNT-End --></entry>

              <entry>An <!-- DNT-Start -->ECL<!-- DNT-End --> operator that takes one or more datasets as
              inputs.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Graph</emphasis><!-- DNT-End --></entry>

              <entry>All the Activities in a query.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Subgraph</emphasis><!-- DNT-End --></entry>

              <entry>A collection of Activities that can all be active at the
              same time in Thor.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>Peephole</emphasis><!-- DNT-End --></entry>

              <entry>A method of code optimization that looks at a small
              amount of the unoptimized code at a time, in order to combine
              operations into more efficient ones.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>
  </sect2>

  <sect2 id="OPTION_Available_Options">
    <!-- DNT-Start --><title>Available options</title><!-- DNT-End -->

    <para><emphasis role="bold">The following options are generally useful:
    </emphasis></para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="3">
          <colspec colwidth="178.45pt" />

          <colspec colwidth="65.60pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>maxRunTime</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Sets the maximum number of seconds a job runs before it
              times out</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>freezePersists</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, does not calculate/recalculate <!-- DNT-Start -->PERSISTed<!-- DNT-End --></entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>expirePersists</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, <!-- DNT-Start -->PERSISTs<!-- DNT-End --> expire after the specified period. This
              is set in the Sasha configuration setting (PersistExpiryDefault)
              or using #option ('defaultPersistExpiry', n) where n is the
              number of days.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>defaultPersistExpiry</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>If set, <!-- DNT-Start -->PERSISTs<!-- DNT-End --> expire after the number of days
              specified (overriding the Sasha PersistExpiryDefault
              setting).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>multiplePersistInstances</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, multiple <!-- DNT-Start -->PERSISTs<!-- DNT-End --> are the default.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>defaultNumPersistInstances</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specifies the default number of <!-- DNT-Start -->PERSISTs<!-- DNT-End -->. A value of -1
              specifies that all copies should be kept until they expire or
              manually deleted.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>checkÂ </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, check for potential overflows of
              records.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>expandRepeatAnyAsDfa</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, expand <!-- DNT-Start -->ANY<!-- DNT-End -->* in a <!-- DNT-Start -->DFA<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>forceFakeThor</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, force code to use hthor.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>forceGenerate</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, force .<!-- DNT-Start -->SO<!-- DNT-End --> to be generated even if it's not worth
              it</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>globalFold</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, perform a global constant fold before
              generating.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>globalOptimize</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, perform a global optimize.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>groupAllDistribute</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, <!-- DNT-Start -->GROUP<!-- DNT-End -->,<!-- DNT-Start -->ALL<!-- DNT-End --> generates a <!-- DNT-Start -->DISTRIBUTE<!-- DNT-End --> instead of a
              global <!-- DNT-Start -->SORT<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>maximizeLexer</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, maximize the amount of work done in the
              lexer.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>maxLength</emphasis><!-- DNT-End --></entry>

              <entry>Default: 4096</entry>

              <entry>Specify maximum length of a record.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>minimizeSpillSize</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, if a spill is filtered/deduped etc when read,
              reduce spill file size by splitting, filtering and then
              writing.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, optimize expressions in a graph before
              generation</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>orderDiskFunnel</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, if all inputs to a funnel are disk reads, pull
              in</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>parseDfaComplexity</emphasis><!-- DNT-End --></entry>

              <entry>Default: 2000</entry>

              <entry>Maximum complexity of expression to convert to a
              <!-- DNT-Start -->DFA<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>pickBestEngine</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, use hthor if it is more efficient than
              Thor</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>targetClusterType</emphasis><!-- DNT-End --></entry>

              <entry>hthor|Thor|roxie</entry>

              <entry>What supercomputer type are we generating code
              for?</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>topnLimit</emphasis><!-- DNT-End --></entry>

              <entry>Default: 10000</entry>

              <entry>Maximum number of records to do topN on.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>outputLimit</emphasis><!-- DNT-End --></entry>

              <entry>Default: 10</entry>

              <entry>Sets maximum size (in Mb) of result stored in
              workunit.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>sortIndexPayload</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>Specifies sorting (or not) payload fields</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>workflow</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>Specifies enabling/disabling workflow services.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldStored</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Specifies that all the stored variables are replaced with
              their default values, or values overridden by #stored. This can
              significantly reduce the size of the graph generated.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>skipFileFormatCrcCheck</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Specifies that the <!-- DNT-Start -->CRC<!-- DNT-End --> check on indices produces a
              warning and not an error.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>allowedClusters</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specifies the comma-delimited list of cluster names (as a
              string constant) where the workunit may execute. This allows the
              job to be switched between clusters, manually or automatically,
              if the workunit is blocked on its assigned cluster and another
              valid cluster is available for use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>AllowAutoQueueSwitch</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, specifies that the workunit is automatically
              re-assigned to execute on another available cluster listed in
              allowedClusters when blocked on its assigned cluster.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>performWorkflowCse</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, specifies that the code generator automatically
              detects opportunities for Common Sub-expression Elimination that
              may be "buried" within multiple <!-- DNT-Start -->PERSISTed<!-- DNT-End --> attributes. If false,
              notification of these opportunities are displayed to the
              programmer as suggestions for the use of the <!-- DNT-Start -->INDEPENDENT<!-- DNT-End -->
              Workflow Service.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>defaultSkewError</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>A value between 0.0 and 1.0 that determines the amount of
              skew needed to generate a skew error. This value is ignored if
              the <!-- DNT-Start -->ECL<!-- DNT-End --> has provided a <!-- DNT-Start -->SKEW<!-- DNT-End --> attribute.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>defaultSkewWarning</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>A value between 0.0 and 1.0 that determines the amount of
              skew needed to generate a skew warning. If set higher than
              defaultSkewError, then the value is ignored.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>overrideSkewError</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>If set to a value between 0.0 and 1.0, it overrides any
              <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->SKEW<!-- DNT-End -->(nn) attribute values in the current job.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>defaultSkewThreshold</emphasis><!-- DNT-End --></entry>

              <entry>Default: 1<!-- DNT-Start -->GB<!-- DNT-End --></entry>

              <entry>The size of the dataset (in bytes) local to a single node
              needed before Skew errors/warnings are generated if no
              <!-- DNT-Start -->THRESHOLD<!-- DNT-End -->(nn) was supplied in <!-- DNT-Start -->ECL<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>overrideSkewThreshold</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>The size of the dataset (in bytes) local to a single node
              needed before Skew errors/warnings are generated. Overrides any
              <!-- DNT-Start -->ECL<!-- DNT-End --> <!-- DNT-Start -->THRESHOLD<!-- DNT-End -->(nn) attribute values in the current job.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>applyInstantEclTransformations</emphasis><!-- DNT-End --></entry>

              <entry>Default false</entry>

              <entry>Limit non-file outputs with a <!-- DNT-Start -->CHOOSEN<!-- DNT-End --></entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>applyInstantEclTransformationsLimit</emphasis><!-- DNT-End --></entry>

              <entry>Default 100</entry>

              <entry>Number of records to limit to</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>divideByZero</emphasis><!-- DNT-End --></entry>

              <entry>Default zero</entry>

              <entry>'zero' evaluates to 0, the default behavior. 'fail'
              causes the job to fail and report a division by zero error.
              'nan' (only currently supported for real numbers) creates a
              quiet NaN, which will propagate through any real expressions it
              is used in. You can use <!-- DNT-Start -->NOT<!-- DNT-End --> <!-- DNT-Start -->ISVALID<!-- DNT-End -->(x) to test if the value is a
              NaN. Integer and decimal division by zero continue to return
              0.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>outputLimitMb</emphasis><!-- DNT-End --></entry>

              <entry>Default 10 [<!-- DNT-Start -->MB<!-- DNT-End -->]</entry>

              <entry>Limit of output to a workunit in <!-- DNT-Start -->MB<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>hthorMemoryLimit</emphasis><!-- DNT-End --></entry>

              <entry>Default 300 [<!-- DNT-Start -->MB<!-- DNT-End -->]</entry>

              <entry>Override memory usage limit set in <!-- DNT-Start -->ECL<!-- DNT-End --> Agent's
              defaultMemoryLimitMB configuration option (for hThor
              only).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>maxCsvRowSizeMb</emphasis><!-- DNT-End --></entry>

              <entry>Default 10 [<!-- DNT-Start -->MB<!-- DNT-End -->]</entry>

              <entry>Upper limit of a <!-- DNT-Start -->CSV<!-- DNT-End --> line read in <!-- DNT-Start -->MB<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>compressInternalSpills</emphasis><!-- DNT-End --></entry>

              <entry>Default true</entry>

              <entry>Compress internal spills. (e.g., spills created by
              lookahead or sort gathering).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>hdCompressorType</emphasis><!-- DNT-End --></entry>

              <entry>Default '<!-- DNT-Start -->FLZ<!-- DNT-End -->'</entry>

              <entry>Distribute compressor to use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>hdCompressorOptions</emphasis><!-- DNT-End --></entry>

              <entry>Default ''</entry>

              <entry>Distribute compressor options (e.g., <!-- DNT-Start -->AES<!-- DNT-End --> key)</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>splitterSpill</emphasis><!-- DNT-End --></entry>

              <entry>Default -1</entry>

              <entry>Integer value to indicate whether to force splitters to
              spill or not. [1 = force spill | 0 = force in memory | -1 =
              adhere to helper setting ]</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>loopMaxEmpty</emphasis><!-- DNT-End --></entry>

              <entry>Default 1000</entry>

              <entry>Max # of iterations that <!-- DNT-Start -->LOOP<!-- DNT-End --> can cycle through without
              results before reporting an error</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>smallSortThreshold</emphasis><!-- DNT-End --></entry>

              <entry>Default 0 (disabled)</entry>

              <entry>If estimated size is below this threshold in bytes, a
              minisort approach should be used.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>sort_max_deviance</emphasis><!-- DNT-End --></entry>

              <entry>Default 10 [<!-- DNT-Start -->MB<!-- DNT-End -->]</entry>

              <entry>Max (byte) variance allowed during sort
              partitioning</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>joinHelperThreads</emphasis><!-- DNT-End --></entry>

              <entry>Default = same as number of cores</entry>

              <entry>Number of threads to use in threaded variety of join
              helper</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>bindCores</emphasis><!-- DNT-End --></entry>

              <entry>Default = 0</entry>

              <entry>For Roxie queries. If non-zero, binds the query to only
              use the specified number of cores. This overrides the value set
              for coresPerQuery in Roxie configuration. <indexterm>
                  <primary>Roxie processor affinity</primary>
                </indexterm><indexterm>
                  <primary>Roxie <!-- DNT-Start -->CPU<!-- DNT-End --> pinning</primary>
                </indexterm><indexterm>
                  <primary><!-- DNT-Start -->CPU<!-- DNT-End --> pinning</primary>
                </indexterm><indexterm>
                  <primary>processor affinity</primary>
                </indexterm></entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>translateDFSlayouts</emphasis><!-- DNT-End --></entry>

              <entry>Default = 0</entry>

              <entry>Specifies that file layouts should be looked up at
              compile time. See <emphasis>File Layout Resolution at Compile
              Time</emphasis> in the <emphasis>Programmer's Guide</emphasis>
              for more details.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para><emphasis role="bold">The following options are all about generating
    Logical graphs in a workunit. </emphasis></para>

    <para>Logical graphs<indexterm>
        <primary>Logical graphs</primary>
      </indexterm> are stored in the workunit and viewed in <!-- DNT-Start -->ECL<!-- DNT-End --> Watch. They
    include information about which attribute/line number/column the symbols
    are defined in. Exported attributes are represented by
    &lt;module&gt;.&lt;attribute&gt; in the header of the activity.
    Non-exported (local) attributes are represented as
    &lt;module&gt;.&lt;exported-attribute&gt;::&lt;non-exported-name&gt;</para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="3">
          <colspec colwidth="178.45pt" />

          <colspec colwidth="65.60pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>generateLogicalGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, generates a Logical graph in addition to all the
              workunit graphs.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>generateLogicalGraphOnly</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, generates only the Logical graph for the
              workunit.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphExpandPersist</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, generates expands <!-- DNT-Start -->PERSISTed<!-- DNT-End --> attributes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphExpandStored</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, generates expands <!-- DNT-Start -->STORED<!-- DNT-End --> attributes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphIncludeName</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, generates attribute names in the header of the
              activity boxes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphIncludeModule</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, generates module.attribute names in the header
              of the activity boxes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphDisplayJavadoc</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, generates the Javadoc-style comments embedded in
              the <!-- DNT-Start -->ECL<!-- DNT-End --> in place of the standard text that would be generated
              (see http://java.sun.com/j2se/javadoc/writingdoccomments/).
              Javadoc-style comments on <!-- DNT-Start -->RECORD<!-- DNT-End --> structures or scalar attributes
              will not generate, as they have no graph Activity box directly
              associated.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>logicalGraphDisplayJavadocParameters</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, generates information about parameters in any
              Javadoc-style comments.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>filteredReadSpillThreshold</emphasis><!-- DNT-End --></entry>

              <entry>Default: 2</entry>

              <entry>Filtered disk reads are spilled if will be duplicated
              more than N times.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldConstantCast</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, (cast)value is folded at generate time.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldFilter</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, filters are constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldAssign</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, <!-- DNT-Start -->TRANSFORMs<!-- DNT-End --> are constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldSQL</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, <!-- DNT-Start -->SQL<!-- DNT-End --> is constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeDiskRead</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, include project and filter in the transform for
              a disk read.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeSQL</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, optimize <!-- DNT-Start -->SQL<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeThorCounts</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, convert <!-- DNT-Start -->COUNT<!-- DNT-End -->(diskfile) into optimized
              version.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>peephole</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, peephole optimize memcpy/memsets, etc.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spotCSE</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, look for common sub-expressions in
              <!-- DNT-Start -->TRANSFORMs<!-- DNT-End -->/filters.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>noteRecordSizeInGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>Add estimates of record sizes to the graph</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>showActivitySizeInGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Show estimates of generated c++ size in the graph</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>showMetaInGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Add distribution/sort orders to the graph</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>showRecordCountInGraph</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>Show estimates of record counts in the graph</entry>
            </row>
          </tbody>
        </tgroup>

        <tgroup cols="1">
          <colspec colwidth="441.90pt" />

          <tbody>
            <row>
              <entry><emphasis></emphasis></entry>
            </row>
          </tbody>
        </tgroup>

        <tgroup cols="3">
          <colspec colwidth="178.45pt" />

          <colspec colwidth="65.60pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>spotTopN</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, convert <!-- DNT-Start -->CHOOSEN<!-- DNT-End -->(<!-- DNT-Start -->SORT<!-- DNT-End -->()) into a topN
              activity.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spotLocalMerge</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, if local <!-- DNT-Start -->JOIN<!-- DNT-End --> and both sides are sorted,
              generate a light-weight merge.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>countIndex</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, optimize <!-- DNT-Start -->COUNT<!-- DNT-End -->(index) into optimized version
              (also requires optimizeThorCounts).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>allowThroughSpill</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, allow through spills.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeBoolReturn</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, improve code when returning <!-- DNT-Start -->BOOLEAN<!-- DNT-End --> from a
              function.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeSubString</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, don't allocate memory when doing a
              substring.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>thorKeys</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, allow <!-- DNT-Start -->INDEX<!-- DNT-End --> operations in Thor.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>regexVersion</emphasis><!-- DNT-End --></entry>

              <entry>Default: 0</entry>

              <entry>If set to 1, specifies use of the previous regular
              expression implementation, which may be faster but also may
              exceed stack limits.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>compileOptions</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specify override compiler options (such as /Zm1000 to
              double the compiler heap size to workaround a heap overflow
              error).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>linkOptions</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specify override linker options.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeProjects</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If false, disables automatic field
              projection/distribution optimization.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>notifyOptimizedProjects</emphasis><!-- DNT-End --></entry>

              <entry>Default: 0</entry>

              <entry>If set to 1, reports optimizations to named attributes.
              If set to 2, reports all optimizations.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeProjectsPreservePersists</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, disables automatic field projection/distribution
              optimization around reading <!-- DNT-Start -->PERSISTed<!-- DNT-End --> files. If a <!-- DNT-Start -->PERSISTed<!-- DNT-End --> file
              is read on a different size cluster than it was created on,
              optimizing the projected fields can mean that the
              distribution/sort order cannot be recreated.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>aggressiveOptimizeProjects</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, enables attempted minimization of network
              traffic for sorts/distributes. This option doesn't usually
              result in significant benefits, but may do so in some specific
              cases.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>percolateConstants</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If false, disables attempted aggressive constant value
              optimizations.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para><emphasis role="bold">The following </emphasis><emphasis
    role="bold">options</emphasis><emphasis role="bold"> are useful for
    debugging: </emphasis></para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="3">
          <colspec colwidth="178.45pt" />

          <colspec colwidth="65.60pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>clusterSize</emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Override the number of nodes in the cluster (for
              testing)</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>debugNlp</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, output debug information about the <!-- DNT-Start -->NLP<!-- DNT-End -->
              processing to the .cpp file.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>resourceMaxMemory</emphasis><!-- DNT-End --></entry>

              <entry>Default: 400M</entry>

              <entry>Maximum amount of memory a subgraph can use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>resourceMaxSockets</emphasis><!-- DNT-End --></entry>

              <entry>Default: 2000</entry>

              <entry>Maximum number of sockets a subgraph can use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>resourceMaxActivities</emphasis><!-- DNT-End --></entry>

              <entry>Default: 200</entry>

              <entry>Maximum number of activities a subgraph can
              contain.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>unlimitedResources</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, assume lots of resources when resourcing the
              graphs.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>traceRowXML</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, turns on tracing in <!-- DNT-Start -->ECL<!-- DNT-End --> Watch graphs. This
              should only be used with small datasets for debugging
              purposes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>_Probe</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, display all result rows from intermediate result
              sets in the graph in <!-- DNT-Start -->ECL<!-- DNT-End --> Watch when used in conjunction with the
              traceRowXML option. This should only be used with small datasets
              for debugging purposes.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>debugQuery</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, compile query using debug settings.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeLevel</emphasis><!-- DNT-End --></entry>

              <entry>Default: 3 for roxie, else 0</entry>

              <entry>Set the C++ compiler optimization level (optimizations
              can cause the compiler to take a lot longer).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>checkAsserts</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, enables <!-- DNT-Start -->ASSERT<!-- DNT-End --> checking.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>soapTraceLevel</emphasis><!-- DNT-End --></entry>

              <entry>Default: 1</entry>

              <entry>The level of detail in reporting <!-- DNT-Start -->SOAPCALL<!-- DNT-End --> or <!-- DNT-Start -->HTTPCALL<!-- DNT-End -->
              information (set to 0 for none, 1 for normal, 2 - 8 for more
              detail)</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>traceEnabled</emphasis><!-- DNT-End --></entry>

              <entry>Default: <!-- DNT-Start -->FALSE<!-- DNT-End --></entry>

              <entry>Enables tracing to log files when <!-- DNT-Start -->TRACE<!-- DNT-End --> actions are
              present. See <link linkend="TRACE"><!-- DNT-Start -->TRACE<!-- DNT-End --></link>.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>traceLimit</emphasis><!-- DNT-End --></entry>

              <entry>Default: 10</entry>

              <entry>Overrides the the default <!-- DNT-Start -->KEEP<!-- DNT-End --> setting for a <!-- DNT-Start -->TRACE<!-- DNT-End -->
              statement to indicate how many <!-- DNT-Start -->TRACE<!-- DNT-End --> statement to write to log
              file. See <link linkend="TRACE"><!-- DNT-Start -->TRACE<!-- DNT-End --></link>.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para><emphasis role="bold">The following </emphasis><emphasis
    role="bold">options</emphasis><emphasis role="bold"> are for advanced code
    generation use:</emphasis></para>

    <para>These <emphasis>options</emphasis> should be left alone unless you
    <!-- DNT-Start -->REALLY<!-- DNT-End --> know what you are doing. Typically they are used internally by our
    developers to enable/disable features that are still in development.
    Occasionally the technical support staff will suggest that you change one
    of these settings to work around a problem that you encounter, but
    otherwise the default settings are recommended in all cases.</para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="3">
          <colspec colwidth="178.45pt" />

          <colspec colwidth="65.60pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis>filteredReadSpillThreshold</emphasis><!-- DNT-End --></entry>

              <entry>Default: 2</entry>

              <entry>Filtered disk reads are spilled if will be duplicated
              more than N times.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldConstantCast </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, (cast)value is folded at generate time.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldFilter </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, filters are constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldAssign </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, <!-- DNT-Start -->TRANSFORMs<!-- DNT-End --> are constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>foldSQL </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, <!-- DNT-Start -->SQL<!-- DNT-End --> is constant folded.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeDiskRead </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, include project and filter in the transform for
              a disk read.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeSQL </emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, optimize <!-- DNT-Start -->SQL<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeThorCounts </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, convert <!-- DNT-Start -->COUNT<!-- DNT-End -->(diskfile) into optimized
              version.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>peephole </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, peephole optimize memcpy/memsets, etc.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spotCSE </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, look for common sub-expressions in
              <!-- DNT-Start -->TRANSFORMs<!-- DNT-End -->/filters.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spotTopN </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, convert <!-- DNT-Start -->CHOOSEN<!-- DNT-End -->(<!-- DNT-Start -->SORT<!-- DNT-End -->()) into a topN
              activity.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spotLocalMerge </emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, if local <!-- DNT-Start -->JOIN<!-- DNT-End --> and both sides are sorted,
              generate a light-weight merge.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>countIndex </emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, optimize <!-- DNT-Start -->COUNT<!-- DNT-End -->(index) into optimized version
              (also requires optimizeThorCounts).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>allowThroughSpill </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, allow through spills.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeBoolReturn </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, improve code when returning <!-- DNT-Start -->BOOLEAN<!-- DNT-End --> from a
              function.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeSubString </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, don't allocate memory when doing a
              substring.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>thorKeys </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If true, allow <!-- DNT-Start -->INDEX<!-- DNT-End --> operations in thor.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>regexVersion </emphasis><!-- DNT-End --></entry>

              <entry>Default: 0</entry>

              <entry>If set to 1, specifies use of the previous regular
              expression implementation, which may be faster but also may
              exceed stack limits.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>compileOptions </emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specify override compiler options (such as /Zm1000 to
              double the compiler heap size to workaround a heap overflow
              error).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>linkOptions </emphasis><!-- DNT-End --></entry>

              <entry>Default: none</entry>

              <entry>Specify override linker options.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeProjects </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If false, disables automatic field
              projection/distribution optimization.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>notifyOptimizedProjects </emphasis><!-- DNT-End --></entry>

              <entry>Default: 0</entry>

              <entry>If set to 1, reports optimizations to named attributes.
              If set to 2, reports all optimizations.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>optimizeProjectsPreservePersists
              </emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, disables automatic field projection/distribution
              optimization around reading <!-- DNT-Start -->PERSISTed<!-- DNT-End --> files. If a <!-- DNT-Start -->PERSISTed<!-- DNT-End --> file
              is read on a different size cluster than it was created on,
              optimizing the projected fields can mean that the
              distribution/sort order cannot be recreated.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>aggressiveOptimizeProjects </emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>If true, enables attempted minimization of network
              traffic for sorts/distributes. This option doesn't usually
              result in significant benefits, but may do so in some specific
              cases.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>percolateConstants </emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>If false, disables attempted aggressive constant value
              optimizations.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>exportDependencies</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Generate information about inter-definition
              dependencies</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>maxCompileThreads</emphasis><!-- DNT-End --></entry>

              <entry>Default 4 for eclccserver and 1 for eclcc</entry>

              <entry>Number of compiler instances to compile the c++</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>reportCppWarnings</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Report warnings from c++ compilation</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>saveCppTempFiles</emphasis><!-- DNT-End --></entry>

              <entry>Default: false</entry>

              <entry>Retain the generated c++ files</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>spanMultipleCpp</emphasis><!-- DNT-End --></entry>

              <entry>Default: true</entry>

              <entry>Generate a work unit in multiple c++ files</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>activitiesPerCpp</emphasis><!-- DNT-End --></entry>

              <entry>Default 500 for Linux or 800 for Windows</entry>

              <entry>Number of activities in each c++ file (requires
              spanMultipleCpp)</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>obfuscateOutput</emphasis><!-- DNT-End --></entry>

              <entry>Default false</entry>

              <entry>If true, details are removed from the generated workunit,
              including <!-- DNT-Start -->ECL<!-- DNT-End --> code, estimates of record size, and number of
              records.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>  #OPTION('traceRowXml', TRUE);
  #OPTION('_Probe', TRUE);
  
  my_rec := RECORD
    STRING20 lname;
    STRING20 fname;
    STRING2 age;
  END;
  
  d := DATASET([{ 'PORTLY', 'STUART' , '39'},
              { 'PORTLY', 'STACIE' , '36'},
              { 'PORTLY', 'DARA' , ' 1'},
              { 'PORTLY', 'GARRETT', ' 4'}], my_rec);
  
  OUTPUT(d(d.age &gt; ' 1'), {lname, fname, age} );
  
  //************************************
  //This example demonstrates Logical Graphs and
  // Javadoc-style comment blocks
  #OPTION('generateLogicalGraphOnly',TRUE);
  #OPTION('logicalGraphDisplayJavadocParameters',TRUE);
  
  /**
  * Defines a record that contains information about a person
  */
  namesRecord :=
       RECORD
  string20    surname;
  string10    forename;
  integer2    age := 25;
       END;
  
  /**
  Defines a table that can be used to read the information from the file
  and then do something with it.
  */
  namesTable := DATASET('x',namesRecord,FLAT);
  
  
  /**
       Allows the name table to be filtered.
  
       @param ages The ages that are allowed to be processed.
            badForename Forname to avoid.
  
       @return the filtered dataset.
  */
  namesTable filtered(SET OF INTEGER2 ages, STRING badForename) :=
       namesTable(age in ages, forename != badForename);
  
  OUTPUT(filtered([10,20,33], ''));
</programlisting><!-- DNT-End -->
  </sect2>
</sect1>
