<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="NORMALIZE">
  <!-- DNT-Start --><title>NORMALIZE</title><!-- DNT-End -->

  <para><emphasis role="bold"><!-- DNT-Start -->NORMALIZE<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->NORMALIZE<!-- DNT-End --></primary>
    </indexterm><indexterm>
      <primary><!-- DNT-Start -->NORMALIZE<!-- DNT-End --> function</primary>
    </indexterm>(</emphasis><emphasis>recordset, expression, transform
  </emphasis> <emphasis role="bold">[, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> | <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [, <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [ (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ] [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis> <emphasis>name </emphasis><emphasis role="bold">) ] )</emphasis></para>

  <para><emphasis role="bold"><!-- DNT-Start -->NORMALIZE<!-- DNT-End -->(</emphasis><emphasis>recordset,
  </emphasis><emphasis role="bold"><!-- DNT-Start -->LEFT<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->LEFT<!-- DNT-End --></primary>
    </indexterm>.</emphasis><emphasis>childdataset, transform
  </emphasis> <emphasis role="bold">[, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> | <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool </emphasis><emphasis role="bold">) ] [, <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [ (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ] [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis> <emphasis>name </emphasis><emphasis role="bold">) ] )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.20pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>recordset</emphasis><!-- DNT-End --></entry>

            <entry>The set of records to process.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>expression</emphasis><!-- DNT-End --></entry>

            <entry>A numeric expression specifying the total number of times
            to call the transform for that record.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>transform</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->TRANSFORM<!-- DNT-End --> function to call for each record in the
            recordset.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>childdataset</emphasis><!-- DNT-End --></entry>

            <entry>The field name of a child <!-- DNT-Start -->DATASET<!-- DNT-End --> in the recordset. This
            must use the keyword <!-- DNT-Start -->LEFT<!-- DNT-End --> as its qualifier.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the output record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

            <entry>Specifies the significance of the output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

            <entry>When False, specifies the output record order is not significant. When True, specifies the default output record order.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Specifies the input record order is not significant.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity in parallel.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Try to evaluate this activity using <emphasis>numthreads</emphasis> threads.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

            <entry>Optional. Override the algorithm used for this activity.</entry>
          </row>
          <row>
            <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

            <entry>The algorithm to use for this activity. Must be from the list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start -->Return:<!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->NORMALIZE<!-- DNT-End --> returns a record set.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold"><!-- DNT-Start -->NORMALIZE<!-- DNT-End --> </emphasis>function normalizes
  child records out of a <emphasis>recordset</emphasis> where the child
  records are appended to the end of the parent data records. The purpose is
  to take variable-length flat-file records and split out the child
  information. The parent information can easily be extracted using either
  <!-- DNT-Start -->TABLE<!-- DNT-End --> or <!-- DNT-Start -->PROJECT<!-- DNT-End -->.</para>

  <sect2 id="NORMALIZE_Form_1">
    <!-- DNT-Start --><title>NORMALIZE Form 1</title><!-- DNT-End -->

    <para>Form 1 processes through all records in the <emphasis>recordset
    </emphasis>performing the <emphasis>transform</emphasis> function the
    <emphasis>expression</emphasis> number of times on each record in
    turn.</para>
  </sect2>

  <sect2 id="TRANSFORM_Function_Requirements_for_Form_1">
    <!-- DNT-Start --><title>TRANSFORM Function Requirements for Form 1</title><!-- DNT-End -->

    <para>The <emphasis>transform</emphasis> function must take at least two
    parameters: a <!-- DNT-Start -->LEFT<!-- DNT-End --> record of the same format as the
    <emphasis>recordset,</emphasis> and an integer <!-- DNT-Start -->COUNTER<!-- DNT-End --> specifying the
    number of times the <emphasis>transform</emphasis> has been called for
    that record. The resulting record set format does not need to be the same
    as the input.</para>
  </sect2>

  <sect2 id="NORMALIZE_Form_2">
    <!-- DNT-Start --><title>NORMALIZE Form 2</title><!-- DNT-End -->

    <para>Form 2 processes through all records in the <emphasis>recordset
    </emphasis>iterating the <emphasis>transform</emphasis> function through
    all the <emphasis>childdataset </emphasis>records in each record in
    turn.</para>
  </sect2>

  <sect2 id="TRANSFORM_Function_Requirements_for_Form_2">
    <!-- DNT-Start --><title>TRANSFORM Function Requirements for Form 2</title><!-- DNT-End -->

    <para>The <emphasis>transform</emphasis> function must take at least one
    parameter: a <!-- DNT-Start -->RIGHT<!-- DNT-End --> record of the same format as the
    <emphasis>childdataset</emphasis>. The resulting record set format does
    not need to be the same as the input.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>//Form 1 example
NamesRec := RECORD
  
UNSIGNED1 numRows;
STRING20 thename;
STRING20 addr1 := '';
STRING20 addr2 := '';
STRING20 addr3 := '';
STRING20 addr4 := '';
END;
NamesTable := DATASET([ {1,'Kevin','10 Malt Lane'},
{2,'Liz','10 Malt Lane','3 The cottages'},
{0,'Mr Nobody'},
{4,'Anywhere','Here','There','Near','Far'}],
NamesRec);

OutRec := RECORD
UNSIGNED1 numRows;
STRING20 thename;
STRING20 addr;
END;

OutRec NormIt(NamesRec L, INTEGER C) := TRANSFORM
SELF := L;
SELF.addr := CHOOSE(C, L.addr1, L.addr2, L.addr3,
             L.addr4);
END;
  
NormAddrs :=
            NORMALIZE(namesTable,LEFT.numRows,NormIt(LEFT,COUNTER<indexterm>
        <primary>COUNTER</primary>
      </indexterm>));
/* the result is: numRows thename
            addr
1 Kevin 10 Malt Lane
2 Liz 10 Malt Lane
2 Liz 3 The cottages
4 Anywhere Here
4 Anywhere There
4 Anywhere Near
4 Anywhere Far */
//************************
//Form 2 example
ChildRec := RECORD
INTEGER1 NameID;
STRING20 Addr;
END;
DenormedRec := RECORD
INTEGER1 NameID;
STRING20 Name;
DATASET(ChildRec) Children;
END;

ds := DATASET([ {1,'Kevin',[ {1,'10 Malt Lane'}]},
{2,'Liz', [ {2,'10 Malt Lane'},
{2,'3 The cottages'}]},
{3,'Mr Nobody', []},
{4,'Anywhere',[ {4,'Far'},
{4,'Here'},
{4,'There'},
{4,'Near'}]} ],
DenormedRec);
ChildRec NewChildren(ChildRec R) := TRANSFORM
SELF := R;
END;
NewChilds := NORMALIZE(ds,LEFT.Children,NewChildren(RIGHT));
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="TRANSFORM_Structure"><!-- DNT-Start -->TRANSFORM<!-- DNT-End --> Structure</link>, <link linkend="RECORD_Structure"><!-- DNT-Start -->RECORD<!-- DNT-End --> Structure</link>, <link linkend="DENORMALIZE"><!-- DNT-Start -->DENORMALIZE<!-- DNT-End --></link></para>
  </sect2>
</sect1>
