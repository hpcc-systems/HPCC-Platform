<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="_FOR">
  <!-- DNT-Start --><title>#FOR</title><!-- DNT-End -->

  <para><emphasis role="bold">#<!-- DNT-Start -->FOR<!-- DNT-End --><indexterm>
      <primary>#<!-- DNT-Start -->FOR<!-- DNT-End --></primary>
    </indexterm>( </emphasis><emphasis> tag </emphasis><emphasis role="bold">[
  ( </emphasis><emphasis>filter </emphasis><emphasis role="bold">)
  ]</emphasis><emphasis> </emphasis><emphasis
  role="bold">)</emphasis><emphasis role="bold">
  </emphasis><emphasis></emphasis></para>

  <para><emphasis>statements</emphasis><emphasis
  role="bold"></emphasis></para>

  <para><emphasis role="bold">#<!-- DNT-Start -->END<!-- DNT-End --></emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="79.40pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>tag</emphasis><!-- DNT-End --></entry>

            <entry>An <!-- DNT-Start -->XML<!-- DNT-End --> tag.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>filter</emphasis><!-- DNT-End --></entry>

            <entry>A logical expression indicating which specific tag
            instances to process.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>statements</emphasis><!-- DNT-End --></entry>

            <entry>The Template statements to execute.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>#END</emphasis><!-- DNT-End --></entry>

            <entry>The #<!-- DNT-Start -->FOR<!-- DNT-End --> structure terminator.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">#<!-- DNT-Start -->FOR<!-- DNT-End --> </emphasis>structure loops through the
  <!-- DNT-Start -->XML<!-- DNT-End -->, searching for each instance of the <emphasis>tag</emphasis> that meets
  the <emphasis>filter</emphasis> expression and executes the
  <emphasis>statements </emphasis>on the data contained within that
  <emphasis>tag</emphasis>.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting>  // This script processes XML and generates ECL COUNT statements
  // which run against the datasets and filters specified in the XML.
  XMLstuff :=
   '&lt;section&gt;'+
       '&lt;item&gt;'+
           '&lt;dataset&gt;person&lt;/dataset&gt;'+
           '&lt;filter&gt;firstname = \'RICHARD\'&lt;/filter&gt;'+
       '&lt;/item&gt;'+
       '&lt;item&gt;'+
           '&lt;dataset&gt;person&lt;/dataset&gt;'+
           '&lt;filter&gt;firstname = \'JOHN\'&lt;/filter&gt;'+
       '&lt;/item&gt;'+
       '&lt;item&gt;'+
           '&lt;dataset&gt;person&lt;/dataset&gt;'+
           '&lt;filter&gt;firstname = \'HENRY\'&lt;/filter&gt;'+
       '&lt;/item&gt;'+
   '&lt;/section&gt;';
  
  LOADXML(XMLstuff);
  #DECLARE(CountStr); // Declare CountStr
  #SET(CountStr, '' ); // Initialize it to an empty string
  #FOR(item)
     #APPEND(CountStr,'COUNT(' + %'dataset'% + '(' + %'filter'% + ' ));\n');
  #END
  
  OUTPUT(%'CountStr'%); // output the string just built
  %CountStr% // then execute the generated "COUNT" actions
  
  // Note that the "CountStr" will have 3 COUNT actions in it:
  //   COUNT(person(person.firstname = 'RICHARD'));
  //   COUNT(person(person.firstname = 'JOHN'));
  //   COUNT(person(person.firstname = 'HENRY'));
</programlisting><!-- DNT-End -->

  <para>See Also: <link linkend="_LOOP-_BREAK">#<!-- DNT-Start -->LOOP<!-- DNT-End --></link>, <link
  linkend="_DECLARE">#<!-- DNT-Start -->DECLARE<!-- DNT-End --></link></para>
</sect1>
