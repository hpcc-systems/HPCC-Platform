<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="BUILD">
  <!-- DNT-Start --><title>BUILD</title><!-- DNT-End -->

  <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
  :=<emphasis role="bold"> ] <!-- DNT-Start -->BUILD<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->BUILD<!-- DNT-End --></primary>
    </indexterm>(</emphasis><emphasis>baserecset</emphasis><emphasis
  role="bold">, [</emphasis><emphasis> indexrec </emphasis><emphasis
  role="bold">] , </emphasis><emphasis>indexfile </emphasis><emphasis
  role="bold">[, </emphasis><emphasis>options </emphasis><emphasis
  role="bold">] );</emphasis></para>

  <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
  :=<emphasis role="bold"> ]
  <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis>baserecset</emphasis><emphasis
  role="bold">,</emphasis><emphasis> keys</emphasis><emphasis
  role="bold">,</emphasis><emphasis> payload</emphasis><emphasis role="bold">,
  </emphasis><emphasis>indexfile </emphasis><emphasis role="bold">[,
  </emphasis><emphasis>options </emphasis><emphasis role="bold">]
  );</emphasis></para>

  <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
  :=<emphasis role="bold"> ] <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> indexdef
  </emphasis><emphasis role="bold">[, </emphasis><emphasis>options
  </emphasis><emphasis role="bold">] );</emphasis></para>

  <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
  :=<emphasis role="bold"> ] <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> indexdef, dataset,
  </emphasis><emphasis role="bold">[, </emphasis><emphasis>options
  </emphasis><emphasis role="bold">] );</emphasis></para>

  <para><emphasis role="bold"><!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> library
  </emphasis><emphasis role="bold">);</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="78.50pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>attrname</emphasis><!-- DNT-End --></entry>

            <entry>Optional. The action name, which turns the action into an
            attribute definition, therefore not executed until the
            <emphasis>attrname</emphasis> is used as an action.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>baserecset</emphasis><!-- DNT-End --></entry>

            <entry>The set of data records for which the index file will be
            created. This may be a record set derived from the base data with
            the key fields and file position.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>indexrec</emphasis><!-- DNT-End --></entry>

            <entry>Optional. The <!-- DNT-Start -->RECORD<!-- DNT-End --> structure of the fields in the
            indexfile that contains key and file position information for
            referencing into the <emphasis>baserecset</emphasis>. Field names
            and types must match the <emphasis>baserecset</emphasis> fields
            (<!-- DNT-Start -->REAL<!-- DNT-End --> and <!-- DNT-Start -->DECIMAL<!-- DNT-End --> value type fields are not supported). This may
            also contain additional fields not present in the
            <emphasis>baserecset</emphasis> (computed fields). If omitted, all
            fields in the <emphasis>baserecset</emphasis> are used. The last
            field must be the name of an <!-- DNT-Start -->UNSIGNED<!-- DNT-End -->8 field defined using the
            {virtual(filepposition)} function in the <!-- DNT-Start -->DATASET<!-- DNT-End --> declaration of
            the <emphasis>baserecset</emphasis>.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>keys</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->RECORD<!-- DNT-End --> structure of fields in the
            <emphasis>indexfile</emphasis> that contains key and file position
            information for referencing into the
            <emphasis>baserecset</emphasis>. Field names and types must match
            the <emphasis>baserecset</emphasis> fields (<!-- DNT-Start -->REAL<!-- DNT-End --> and <!-- DNT-Start -->DECIMAL<!-- DNT-End --> value
            type fields are not supported). This may also contain additional
            fields not present in the <emphasis>baserecset</emphasis>. If
            omitted, all fields in the <emphasis>baserecset</emphasis> are
            used.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>payload</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->RECORD<!-- DNT-End --> structure of the <emphasis>indexfile</emphasis>
            that contains additional fields not used as keys . If the name of
            the <emphasis>baserecset</emphasis> is in the structure, it
            specifies âall other fields not already named in the keys
            parameter.â This may contain fields not present in the
            <emphasis>baserecset</emphasis> (computed fields). These fields do
            not take up space in the non-leaf nodes of the index and cannot be
            referenced in a <!-- DNT-Start -->KEYED<!-- DNT-End -->() filter clause</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>indexfile</emphasis><!-- DNT-End --></entry>

            <entry>A string constant containing the logical filename of the
            index to produce. See the Scope &amp; Logical Filenames article
            for more on logical filenames.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>options</emphasis><!-- DNT-End --></entry>

            <entry>Optional. One or more of the options listed below.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>indexdef</emphasis><!-- DNT-End --></entry>

            <entry>The name of the <!-- DNT-Start -->INDEX<!-- DNT-End --> attribute to build.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>library</emphasis><!-- DNT-End --></entry>

            <entry>The name of a <!-- DNT-Start -->MODULE<!-- DNT-End --> attribute with the <!-- DNT-Start -->LIBRARY<!-- DNT-End -->
            option.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The first four forms of the <emphasis role="bold"><!-- DNT-Start -->BUILD<!-- DNT-End -->
  </emphasis>action create index files. Indexes are automatically compressed,
  minimizing overhead associated with using indexed record access. The keyword
  <!-- DNT-Start -->BUILDINDEX<!-- DNT-End --> may be used in place of <!-- DNT-Start -->BUILD<!-- DNT-End --> in these forms.</para>

  <para>The fifth form creates an external query library<indexterm>
      <primary>query library</primary>
    </indexterm>âa workunit that implements the specified
  <emphasis>library</emphasis>. This is similar to creating a .<!-- DNT-Start -->DLL<!-- DNT-End --> in Windows
  programming, or a .<!-- DNT-Start -->SO<!-- DNT-End --> in Linux.</para>

  <sect2 id="Index_BUILD_Options">
    <!-- DNT-Start --><title>Index BUILD Options</title><!-- DNT-End -->

    <para>The following options are available on all three <!-- DNT-Start -->INDEX<!-- DNT-End --> forms of
    <!-- DNT-Start -->BUILD<!-- DNT-End --> (only):</para>

    <para><emphasis role="bold">[, <!-- DNT-Start -->CLUSTER<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->CLUSTER<!-- DNT-End --></primary>
      </indexterm>(</emphasis><emphasis> target </emphasis><emphasis
    role="bold">)] [, <!-- DNT-Start -->SORTED<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->SORTED<!-- DNT-End --></primary>
      </indexterm>] [, <!-- DNT-Start -->DISTRIBUTE<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->DISTRIBUTE<!-- DNT-End --></primary>
      </indexterm>( </emphasis><emphasis>key</emphasis><emphasis role="bold">
    ) [ , <!-- DNT-Start -->MERGE<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->MERGE<!-- DNT-End --></primary>
      </indexterm> ] ]</emphasis><emphasis role="bold">[, <!-- DNT-Start -->DATASET<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->DATASET<!-- DNT-End --></primary>
      </indexterm>( </emphasis><emphasis>basedataset</emphasis><emphasis
    role="bold"> )] [, <!-- DNT-Start -->OVERWRITE<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->OVERWRITE<!-- DNT-End --></primary>
      </indexterm>]</emphasis><emphasis role="bold"> [, <!-- DNT-Start -->UPDATE<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->UPDATE<!-- DNT-End --></primary>
      </indexterm>]<emphasis
    role="bold">[</emphasis><emphasis>,</emphasis><emphasis
    role="bold"><!-- DNT-Start -->EXPIRE<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->EXPIRE<!-- DNT-End --></primary>
      </indexterm>( [</emphasis><emphasis>days</emphasis><emphasis
    role="bold">] ) ]</emphasis>[, <!-- DNT-Start -->FEW<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->FEW<!-- DNT-End --></primary>
      </indexterm>] [, <!-- DNT-Start -->FILEPOSITION<!-- DNT-End -->(<emphasis>false</emphasis>)<indexterm>
        <primary><!-- DNT-Start -->FILEPOSITION<!-- DNT-End --></primary>
      </indexterm>] [, <!-- DNT-Start -->LOCAL<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->LOCAL<!-- DNT-End --></primary>
      </indexterm>] [, <!-- DNT-Start -->NOROOT<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->NOROOT<!-- DNT-End --></primary>
      </indexterm>] [, <!-- DNT-Start -->DISTRIBUTED<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->DISTRIBUTED<!-- DNT-End --></primary>
      </indexterm>]</emphasis><emphasis role="bold">[, <!-- DNT-Start -->COMPRESSED<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->COMPRESSION<!-- DNT-End --></primary>
      </indexterm>( <!-- DNT-Start -->LZW<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->LZW<!-- DNT-End --></primary>
      </indexterm> | <!-- DNT-Start -->ROW<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->ROW<!-- DNT-End --></primary>
      </indexterm> | <!-- DNT-Start -->FIRST<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->FIRST<!-- DNT-End --></primary>
      </indexterm>) ] [, <!-- DNT-Start -->WIDTH<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->WIDTH<!-- DNT-End --></primary>
      </indexterm>(</emphasis><emphasis> nodes </emphasis><emphasis
    role="bold">) ] [, <!-- DNT-Start -->DEDUP<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->DEDUP<!-- DNT-End --></primary>
      </indexterm>]<emphasis role="bold">[</emphasis>,<emphasis
    role="bold"><!-- DNT-Start -->SKEW<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->SKEW<!-- DNT-End --></primary>
      </indexterm>(</emphasis><emphasis>limit</emphasis><emphasis
    role="bold">[</emphasis><emphasis>, target</emphasis><emphasis
    role="bold">] ) [, <!-- DNT-Start -->THRESHOLD<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->THRESHOLD<!-- DNT-End --></primary>
      </indexterm>(</emphasis><emphasis>size</emphasis><emphasis role="bold">)
    ] ] <emphasis role="bold">[, <!-- DNT-Start -->MAXLENGTH<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->MAXLENGTH<!-- DNT-End --></primary>
      </indexterm>[(</emphasis><emphasis>value</emphasis><emphasis
    role="bold">)] ] ]</emphasis></emphasis></emphasis><emphasis
    role="bold">[, <!-- DNT-Start -->UNORDERED<!-- DNT-End --> | <!-- DNT-Start -->ORDERED<!-- DNT-End -->(</emphasis> <emphasis>bool
    </emphasis><emphasis role="bold">) ] [, <!-- DNT-Start -->STABLE<!-- DNT-End --> | <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> ] [, <!-- DNT-Start -->PARALLEL<!-- DNT-End --> [
    (</emphasis> <emphasis>numthreads </emphasis><emphasis role="bold">) ] ]
    [, <!-- DNT-Start -->ALGORITHM<!-- DNT-End -->(</emphasis> <emphasis>name </emphasis><emphasis role="bold">)
    ][, <!-- DNT-Start -->SET<!-- DNT-End --> (</emphasis> <emphasis>option, value </emphasis><emphasis
    role="bold">) ]</emphasis></para>

    <para><informaltable colsep="1" frame="all" rowsep="1">
        <tgroup cols="2">
          <colspec colwidth="125pt" />

          <colspec />

          <tbody>
            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">CLUSTER</emphasis><!-- DNT-End --></entry>

              <entry>Specifies writing the <emphasis>indexfile</emphasis> to
              the specified list of target clusters. If omitted, the
              <emphasis>indexfile</emphasis> is written to the cluster on
              which the workunit executes. The number of physical file parts
              written to disk is always determined by the number of nodes in
              the cluster on which the workunit executes, regardless of the
              number of nodes on the target cluster(s) unless the <!-- DNT-Start -->WIDTH<!-- DNT-End --> option
              is also specified.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>target</emphasis><!-- DNT-End --></entry>

              <entry>A comma-delimited list of string constants containing the
              names of the clusters to write the
              <emphasis>indexfile</emphasis> to. The names must be listed as
              they appear on the <!-- DNT-Start -->ECL<!-- DNT-End --> Watch Activity page or returned by the
              Std.System.Thorlib.Group() function, optionally with square
              brackets containing a comma-delimited list of node-numbers
              (1-based) and/or ranges (specified with a dash, as in n-m) to
              indicate the specific set of nodes to write to.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">SORTED</emphasis><!-- DNT-End --></entry>

              <entry>Specifies that the <emphasis>baserecset</emphasis> is
              already sorted, implying that the automatic sort based on all
              the <emphasis>indexrec</emphasis> fields is not required before
              the index is created.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">DISTRIBUTE</emphasis><!-- DNT-End --></entry>

              <entry>Specifies building the <emphasis>indexfile</emphasis>
              based on the distribution of the key.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>key</emphasis><!-- DNT-End --></entry>

              <entry>The name of an existing <!-- DNT-Start -->INDEX<!-- DNT-End --> attribute
              definition.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">MERGE</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Specifies merging the resulting index into the
              specified key.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">DATASET</emphasis><!-- DNT-End --></entry>

              <entry>This is only needed when the
              <emphasis>baserecset</emphasis> is the result of an operation
              (such as a <!-- DNT-Start -->JOIN<!-- DNT-End -->) whose result makes it ambiguous as to which
              physical dataset is being indexed (in other words, use this
              option only when you receive an error that it cannot be
              deduced). Naming the <emphasis>basedataset</emphasis> ensures
              that the proper record links are used in the index.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>basedataset</emphasis><!-- DNT-End --></entry>

              <entry>The name of the <!-- DNT-Start -->DATASET<!-- DNT-End --> attribute from which the
              <emphasis>baserecset</emphasis> is derived.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">OVERWRITE</emphasis><!-- DNT-End --></entry>

              <entry>Specifies overwriting the <emphasis>indexfile</emphasis>
              if it already exists.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">UPDATE</emphasis><!-- DNT-End --></entry>

              <entry>Specifies that the file should be rewritten only if the
              code or input data has changed.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">EXPIRE</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Specifies the file is a temporary file that may
              be automatically deleted after the specified number of days
              since the file was read.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">FILEPOSITION</emphasis><!-- DNT-End --></entry>

              <entry>Optional. If <emphasis>flag</emphasis> is <!-- DNT-Start -->FALSE<!-- DNT-End -->, prevents
              the implicit fileposition field from being created and will not
              treat a trailing integer field any differently from the rest of
              the payload.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>flag</emphasis><!-- DNT-End --></entry>

              <entry>Optional. <!-- DNT-Start -->TRUE<!-- DNT-End --> or <!-- DNT-Start -->FALSE<!-- DNT-End -->, indicating whether or not to
              create the implicit fileposition field.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>days</emphasis><!-- DNT-End --></entry>

              <entry>Optional. The number of days from last file read after
              which the file may be automatically deleted. If omitted, the
              default is seven (7).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">FEW</emphasis><!-- DNT-End --></entry>

              <entry>Specifies the <emphasis>indexfile</emphasis> is created
              as a single one-part file. Used only for small datasets
              (typically lookup-type files, such as 2-character state codes).
              This option is now deprecated in favor of using the
              <!-- DNT-Start -->WIDTH<!-- DNT-End -->(1).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>indexdef</emphasis><!-- DNT-End --></entry>

              <entry>The name of an existing <!-- DNT-Start -->INDEX<!-- DNT-End --> attribute definition that
              provides the <emphasis>baserecset</emphasis>,
              <emphasis>indexrec</emphasis>, and
              <emphasis>indexfile</emphasis> parameters to use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">LOCAL</emphasis><!-- DNT-End --></entry>

              <entry>Specifies the operation is performed on each
              supercomputer node independently, without requiring interaction
              with all other nodes to acquire data; the operation maintains
              the distribution of any previous <!-- DNT-Start -->DISTRIBUTE<!-- DNT-End --> function.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">NOROOT</emphasis><!-- DNT-End --></entry>

              <entry>Specifies that the index is not globally sorted, and
              there is no root index to indicate which part of the index will
              contain a particular entry. This may be useful in Roxie queries
              in conjunction with <!-- DNT-Start -->ALLNODES<!-- DNT-End --> use.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">DISTRIBUTED</emphasis><!-- DNT-End --></entry>

              <entry>Specifies both the <!-- DNT-Start -->LOCAL<!-- DNT-End --> and <!-- DNT-Start -->NOROOT<!-- DNT-End --> options (congruent
              with the <!-- DNT-Start -->DISTRIBUTED<!-- DNT-End --> option on an <!-- DNT-Start -->INDEX<!-- DNT-End --> declaration, which
              specifies the index was built with the <!-- DNT-Start -->LOCAL<!-- DNT-End --> and <!-- DNT-Start -->NOROOT<!-- DNT-End -->
              options).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">COMPRESSED</emphasis><!-- DNT-End --></entry>

              <entry>Specifies the type of compression used. If omitted, the
              default is <!-- DNT-Start -->LZW<!-- DNT-End -->, a variant of the Lempel-Ziv-Welch algorithm.
              Specifying <!-- DNT-Start -->ROW<!-- DNT-End --> compresses index entries based on differences
              between contiguous rows (for use with fixed-length records,
              only), and is recommended for use in circumstances where
              speedier decompression time is more important than the amount of
              compression achieved. <!-- DNT-Start -->FIRST<!-- DNT-End --> compresses common leading elements
              of the key (recommended only for timing comparison use).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">WIDTH</emphasis><!-- DNT-End --></entry>

              <entry>Specifies writing the <emphasis>indexfile</emphasis> to a
              different number of physical file parts than the number of nodes
              in the cluster on which the workunit executes. If omitted, the
              default is the number of nodes in the cluster on which the
              workunit executes. This option is primarily to create indexes on
              a large Thor that are destined to be deployed to a smaller Roxie
              (making the Roxie queries more efficient).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>nodes</emphasis><!-- DNT-End --></entry>

              <entry>The number of physical file parts to write. If set to one
              (1), this operates exactly the same as the <!-- DNT-Start -->FEW<!-- DNT-End --> option,
              above.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">DEDUP</emphasis><!-- DNT-End --></entry>

              <entry>Specifies that duplicate entries are eliminated from the
              <!-- DNT-Start -->INDEX<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">SKEW</emphasis><!-- DNT-End --></entry>

              <entry>Indicates that you know the data will not be spread
              evenly across nodes (will be skewed and you choose to override
              the default by specifying your own limit value to allow the job
              to continue despite the skewing.)</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>limit</emphasis><!-- DNT-End --></entry>

              <entry>A value between zero (0) and one (1.0 = 100%) indicating
              the maximum percentage of skew to allow before the job fails
              (the default skew is 1.0 / &lt;number of slaves on
              cluster&gt;).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>target</emphasis><!-- DNT-End --></entry>

              <entry>Optional. A value between zero (0) and one (1.0 = 100%)
              indicating the desired maximum percentage of skew to allow (the
              default skew is 1.0 / &lt;number of slaves on
              cluster&gt;).</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">THRESHOLD</emphasis><!-- DNT-End --></entry>

              <entry>Indicates the minimum size for a single part before the
              <!-- DNT-Start -->SKEW<!-- DNT-End --> limit is enforced.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>size</emphasis><!-- DNT-End --></entry>

              <entry>An integer value indicating the minimum number of bytes
              for a single part. Default is 1<!-- DNT-Start -->GB<!-- DNT-End -->.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">MAXLENGTH</emphasis><!-- DNT-End --></entry>

              <entry>Optional. This option is used to create indexes that are
              backward compatible for platform versions prior to 3.0.
              Specifies the maximum length of a variable-length index record.
              Fixed length records always use the minimum size required. If
              the default maximum length causes inefficiency problems, it can
              be explicitly overridden.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>value</emphasis><!-- DNT-End --></entry>

              <entry>Optional. An integer value indicating the maximum length.
              If omitted, the maximum size is calculated from the record
              structure. Variable-length records that do not specify <!-- DNT-Start -->MAXLENGTH<!-- DNT-End -->
              may be slightly inefficient</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">UNORDERED</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Specifies the output record order is not
              significant.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">ORDERED</emphasis><!-- DNT-End --></entry>

              <entry>Specifies the significance of the output record
              order.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>bool</emphasis><!-- DNT-End --></entry>

              <entry>When False, specifies the output record order is not
              significant. When True, specifies the default output record
              order.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">STABLE</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Specifies the input record order is
              significant.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">UNSTABLE</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Specifies the input record order is not
              significant.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">PARALLEL</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Try to evaluate this activity in
              parallel.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>numthreads</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Try to evaluate this activity using
              <emphasis>numthreads</emphasis> threads.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">ALGORITHM</emphasis><!-- DNT-End --></entry>

              <entry>Optional. Override the algorithm used for this
              activity.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>name</emphasis><!-- DNT-End --></entry>

              <entry>The algorithm to use for this activity. Must be from the
              list of supported algorithms for the <!-- DNT-Start -->SORT<!-- DNT-End --> function's <!-- DNT-Start -->STABLE<!-- DNT-End --> and
              <!-- DNT-Start -->UNSTABLE<!-- DNT-End --> options.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis role="bold">SET</emphasis><!-- DNT-End --></entry>

              <entry>Optional. <!-- DNT-Start -->SET<!-- DNT-End --> is used to set a value to a named metadata
              option. This allows you to set user metadata whose use and
              purpose is up to the developer. Currently
              <emphasis>_nodeSize</emphasis> is the only system-defined
              metadata, though other names starting with an underscore (_)
              should be considered reserved for system use. You may want to
              use <!-- DNT-Start -->SET<!-- DNT-End -->(â_nodeSizeâ, â32768â) if your hardware and usage pattern
              work better with larger page sizes. The default (8192) may not
              be optimal for all scenarios on modern hardware. We recommend
              using a power of 2 and not smaller than 8k.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>option</emphasis><!-- DNT-End --></entry>

              <entry>A case sensitive string constant containing the name of
              the option to set.</entry>
            </row>

            <row>
              <entry><!-- DNT-Start --><emphasis>value</emphasis><!-- DNT-End --></entry>

              <entry>The value to set the option to. This may be any type of
              value, dependent on what the option expects to be.</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable></para>

    <para></para>
  </sect2>

  <sect2 id="BUILD_an_Access_Index">
    <!-- DNT-Start --><title>BUILD an Access Index</title><!-- DNT-End -->

    <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
    :=<emphasis role="bold"> ]
    <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis>baserecset</emphasis><emphasis role="bold">,
    [</emphasis><emphasis> indexrec </emphasis><emphasis role="bold">] ,
    </emphasis><emphasis>indexfile </emphasis><emphasis role="bold">[,
    </emphasis><emphasis>options </emphasis><emphasis role="bold">]
    );</emphasis></para>

    <para>Form 1 creates an index file to allow keyed access to the
    <emphasis>baserecset</emphasis>. The index is used primarily by the <!-- DNT-Start -->FETCH<!-- DNT-End -->
    and <!-- DNT-Start -->JOIN<!-- DNT-End --> (with the <!-- DNT-Start -->KEYED<!-- DNT-End --> option) operations.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>Vehicles := DATASET('vehicles',
     {STRING2 st,
      STRING20 city,
      STRING20 lname,
      UNSIGNED8 filepos{virtual(fileposition)}},
     FLAT);
BUILD(Vehicles,{lname,filepos},'vkey::lname');
 //build key into Vehicles dataset on last name
</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="BUILD_a_Payload_Index">
    <!-- DNT-Start --><title>BUILD a Payload Index</title><!-- DNT-End -->

    <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
    :=<emphasis role="bold"> ]
    <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis>baserecset</emphasis><emphasis
    role="bold">,</emphasis><emphasis> keys</emphasis><emphasis
    role="bold">,</emphasis><emphasis> payload</emphasis><emphasis
    role="bold">, </emphasis><emphasis>indexfile </emphasis><emphasis
    role="bold">[, </emphasis><emphasis>options </emphasis><emphasis
    role="bold">] );</emphasis></para>

    <para>Form 2 creates an index file containing extra <emphasis>payload
    </emphasis>fields in addition to the <emphasis>keys</emphasis>. This form
    is used primarily to create indexes used by âhalf-keyâ <!-- DNT-Start -->JOIN<!-- DNT-End --> operations to
    eliminate the need to directly access the <emphasis>baserecset</emphasis>,
    thus increasing performance over the âfull-keyedâ version of the same
    operation (done with the <!-- DNT-Start -->KEYED<!-- DNT-End --> option on the <!-- DNT-Start -->JOIN<!-- DNT-End -->).</para>

    <para>By default, the <emphasis>payload</emphasis> fields are sorted
    during the <!-- DNT-Start -->BUILDINDEX<!-- DNT-End --> operation to minimize space on the leaf nodes of the
    key. This sorting can be controlled by using
    <emphasis>sortIndexPayload</emphasis> in a #<!-- DNT-Start -->OPTION<!-- DNT-End --> statement.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>Vehicles := DATASET('vehicles',
     {STRING2 st,
      STRING20 city,
      STRING20 lname,
      UNSIGNED8 filepos{virtual(fileposition)}},
      FLAT);
BUILD(Vehicles,{st,city},{lname},'vkey::st.city');
 //build key into Vehicles dataset on state and city
 //payload the last name</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="BUILD_from_an_INDEX_Definition">
    <!-- DNT-Start --><title>BUILD from an INDEX Definition</title><!-- DNT-End -->

    <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
    :=<emphasis role="bold"> ] <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> indexdef
    </emphasis><emphasis role="bold">[, </emphasis><emphasis>options
    </emphasis><emphasis role="bold">] );</emphasis></para>

    <para>Form 3 creates an index file by using a previously defined <!-- DNT-Start -->INDEX<!-- DNT-End -->
    definition.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>nameKey := INDEX(mainTable,{surname,forename,filepos},'name.idx');
BUILD(nameKey); //gets all info from the INDEX definition
</programlisting><!-- DNT-End -->

    <para><emphasis role="bold">[</emphasis><emphasis>attrname</emphasis>
    :=<emphasis role="bold"> ] <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> indexdef, dataset
    </emphasis><emphasis role="bold">[, </emphasis><emphasis>options
    </emphasis><emphasis role="bold">] );</emphasis></para>

    <para>Form 4 creates an index file on a dataset using a previously defined
    <!-- DNT-Start -->INDEX<!-- DNT-End --> definition.</para>

    <para>This is used to build an index where the dataset definition is
    complex. This allows the index to be logically separated from the dataset
    from which it is created. This is especially useful when the dataset
    definition is very complicated (Mb of source) because when the index is
    subsequently used in a query, all the code to create it is also
    parsed.</para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>ds = DATASET(100, TRANSFORM({ unsigned id }, SELF.id := COUNTER));
i := INDEX({ unsigned id }, 'myIndex');
BUILD(i, ds);
</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="BUILD_a_Query_Library">
    <!-- DNT-Start --><title>BUILD a Query Library</title><!-- DNT-End -->

    <para><emphasis role="bold"><!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis> library
    </emphasis><emphasis role="bold">);</emphasis></para>

    <para>Form 5 creates an external query library <emphasis role="bold">for
    use in hthor or Roxie, only</emphasis>.</para>

    <para>A query library allows a set of related attributes to be packaged as
    a self contained unit so the code can be shared between different
    workunits. This reduces the time required to deploy a set of attributes,
    and also reduces the memory footprint for the set of queries within Roxie
    that use the <emphasis>library</emphasis>. Also, functionality in the
    <emphasis>library</emphasis> can be updated without having to re-deploy
    all the queries that use that functionality.</para>

    <para>Query libraries are suitable for packaging together sets of
    functions that are closely related. They aren't suited for including
    attributes defined as <!-- DNT-Start -->MACROsâ<!-- DNT-End -->the meaning of a macro isn't known until its
    parameters are substituted.</para>

    <para>The name form of #<!-- DNT-Start -->WORKUNIT<!-- DNT-End --><indexterm>
        <primary>#<!-- DNT-Start -->WORKUNIT<!-- DNT-End --></primary>
      </indexterm> names the workunit that <!-- DNT-Start -->BUILD<!-- DNT-End --> creates as the external
    library. That name is the external library name used by the <!-- DNT-Start -->LIBRARY<!-- DNT-End -->
    function<indexterm>
        <primary><!-- DNT-Start -->LIBRARY<!-- DNT-End --> function</primary>
      </indexterm> (which provides access to the library from within the query
    that uses the <emphasis>library</emphasis>). <emphasis role="bold">Since
    the workunit itself is the external query library,
    <!-- DNT-Start -->BUILD<!-- DNT-End -->(</emphasis><emphasis role="bold">library</emphasis><emphasis
    role="bold">) must be the only action in the workunit.</emphasis></para>

    <para>Example:</para>

    <!-- DNT-Start --><programlisting>NamesRec := RECORD
  INTEGER1  NameID;
  STRING20  FName;
  STRING20  LName;
END;
FilterLibIface1(DATASET(namesRec) ds, STRING search) := INTERFACE
  EXPORT DATASET(namesRec) matches;
  EXPORT DATASET(namesRec) others;
END;

FilterDsLib1(DATASET(namesRec) ds, STRING search) :=
      MODULE,LIBRARY(FilterLibIface1)
  EXPORT matches := ds(Lname  = search);
  EXPORT others  := ds(Lname != search);
END;
#WORKUNIT('name','Ppass.FilterDsLib')
BUILD(FilterDsLib1);
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="INDEX_record_structure"><!-- DNT-Start -->INDEX<!-- DNT-End --></link>, <link
    linkend="JOIN"><!-- DNT-Start -->JOIN<!-- DNT-End --></link>, <link linkend="FETCH"><!-- DNT-Start -->FETCH<!-- DNT-End --></link>, <link
    linkend="MODULE_Structure"><!-- DNT-Start -->MODULE<!-- DNT-End --></link>, <link
    linkend="INTERFACE_Structure"><!-- DNT-Start -->INTERFACE<!-- DNT-End --></link>, <link
    linkend="LIBRARY"><!-- DNT-Start -->LIBRARY<!-- DNT-End --></link>, <link
    linkend="DISTRIBUTE"><!-- DNT-Start -->DISTRIBUTE<!-- DNT-End --></link>, <link
    linkend="_WORKUNIT">#<!-- DNT-Start -->WORKUNIT<!-- DNT-End --></link></para>
  </sect2>
</sect1>
