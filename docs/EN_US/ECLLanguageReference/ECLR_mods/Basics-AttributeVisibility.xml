<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="Attribute_Visibility">
  <!-- DNT-Start --><title>Definition Visibility<indexterm>
      <primary>Definition Visibility</primary>
    </indexterm></title><!-- DNT-End -->

  <para><!-- DNT-Start -->ECL<!-- DNT-End --> code, definitions, are stored in .<!-- DNT-Start -->ECL<!-- DNT-End --> files <indexterm>
      <primary>.<!-- DNT-Start -->ECL<!-- DNT-End --> files</primary>
    </indexterm>in your code repository, which are organized into modules
  (directories or folders on disk). Each .<!-- DNT-Start -->ECL<!-- DNT-End --> file may only contain a single
  <!-- DNT-Start -->EXPORT<!-- DNT-End --> or <!-- DNT-Start -->SHARED<!-- DNT-End --> definition (see below) along with any supporting local
  definitions required to fully define the definition's result. The name of
  the file and the name of its <!-- DNT-Start -->EXPORT<!-- DNT-End --> or <!-- DNT-Start -->SHARED<!-- DNT-End --> definition must exactly
  match.</para>

  <para>Within a module (directory or folder on disk), you may have as many
  <!-- DNT-Start -->EXPORT<!-- DNT-End --> and/or <!-- DNT-Start -->SHARED<!-- DNT-End --> definitions as needed. An <!-- DNT-Start -->IMPORT<!-- DNT-End --> statement (see the
  <emphasis role="bold"><!-- DNT-Start -->IMPORT<!-- DNT-End --> </emphasis>keyword) identifies any other
  modules whose visible definitions will be available for use in the current
  definition.</para>

  <para>The following fundamental definition visibility scopes are available
  in <!-- DNT-Start -->ECL<!-- DNT-End -->: <emphasis role="bold">"Global," <!-- DNT-Start -->Module<!-- DNT-End --></emphasis>, and <emphasis
  role="bold"><!-- DNT-Start -->Local<!-- DNT-End --></emphasis>.</para>

  <sect2 id="Global_attribute_visibility">
    <!-- DNT-Start --><title>"Global"</title><!-- DNT-End -->

    <para>Definitions defined as <emphasis
    role="bold"><!-- DNT-Start -->EXPORT<!-- DNT-End --></emphasis><indexterm>
        <primary><!-- DNT-Start -->EXPORT<!-- DNT-End --></primary>
      </indexterm> (see the <emphasis role="bold"><!-- DNT-Start -->EXPORT<!-- DNT-End --></emphasis> keyword)
    are available throughout the module in which they are defined, and
    throughout any other module that <!-- DNT-Start -->IMPORTs<!-- DNT-End --> that module (see the <emphasis
    role="bold"><!-- DNT-Start -->IMPORT<!-- DNT-End --></emphasis> keyword).</para>

    <!-- DNT-Start --><programlisting>//inside the Definition1.ecl file (in AnotherModule folder) you have:
EXPORT Definition1 := 5;  
   //EXPORT makes Definition1 available to other modules and
   //also available throughout its own module</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="Module">
    <!-- DNT-Start --><title>Module</title><!-- DNT-End -->

    <para>The scope of the definitions defined as <emphasis
    role="bold"><!-- DNT-Start -->SHARED<!-- DNT-End --><indexterm>
        <primary><!-- DNT-Start -->SHARED<!-- DNT-End --></primary>
      </indexterm></emphasis> (see the <emphasis role="bold"><!-- DNT-Start -->SHARED<!-- DNT-End --></emphasis>
    keyword) is limited to that one module, and are available throughout the
    module (unlike local definitions). This allows you to keep private any
    definitions that are only needed to implement internal functionality.
    <!-- DNT-Start -->SHARED<!-- DNT-End --> definitions are used to support <!-- DNT-Start -->EXPORT<!-- DNT-End --> definitions.</para>

    <!-- DNT-Start --><programlisting>//inside the Definition2.ecl file you have:
IMPORT AnotherModule;
   //makes definitions from AnotherModule available to this code, as needed

SHARED Definition2 := AnotherModule.Definition1 + 5;  
   //Definition2 available throughout its own module, only

//*****************************************************************************
//then inside the Definition3.ecl file (in the same folder as Definition2) you have:
IMPORT $;  
   //makes definitions from the current module available to this code, as needed

EXPORT Definition3 := $.Definition2 + 5;
  //make Definition3 available to other modules and
  //also available throughout its own module</programlisting><!-- DNT-End -->
  </sect2>

  <sect2 id="Local">
    <!-- DNT-Start --><title>Local</title><!-- DNT-End -->

    <para>A definition without either the <!-- DNT-Start -->EXPORT<!-- DNT-End --> or <!-- DNT-Start -->SHARED<!-- DNT-End --> keywords is
    available only to subsequent definitions, until the end of the next <!-- DNT-Start -->EXPORT<!-- DNT-End -->
    or <!-- DNT-Start -->SHARED<!-- DNT-End --> definition. This makes them private definitions used only within
    the scope of that one <!-- DNT-Start -->EXPORT<!-- DNT-End --> or <!-- DNT-Start -->SHARED<!-- DNT-End --> definition, which allows you to
    keep private any definitions that are only needed to implement internal
    functionality. <!-- DNT-Start -->Local<!-- DNT-End --> definitions definitions are used to support the
    <!-- DNT-Start -->EXPORT<!-- DNT-End --> or <!-- DNT-Start -->SHARED<!-- DNT-End --> definition in whose file they reside. <!-- DNT-Start -->Local<!-- DNT-End --> definitions
    are referenced by their definition name alone; no qualification is
    needed.</para>

    <!-- DNT-Start --><programlisting>//then inside the Definition4.ecl file (in the same folder as Definition2) you have:
IMPORT $;  
   //makes definitions from the current module available to this code, as needed

LocalDef := 5;
  //local -- available through the end of Definition4's definition, only

EXPORT Definition4 := LocalDef + 5;
//EXPORT terminates scope for LocalDef

LocalDef2 := Definition4 + LocalDef;
  //INVALID SYNTAX -- LocalDef is out of scope here
  //and any local definitions following the EXPORT
  //or SHARED definition in the file are meaningless 
  //since they can never be used by anything
</programlisting><!-- DNT-End -->

    <para>The <emphasis role="bold"><!-- DNT-Start -->LOCAL<!-- DNT-End --></emphasis><indexterm>
        <primary><!-- DNT-Start -->LOCAL<!-- DNT-End --></primary>
      </indexterm> keyword is valid for use within any nested structure, but
    most useful within a <!-- DNT-Start -->FUNCTIONMACRO<!-- DNT-End --> structure to clearly identify that the
    scope of a definition is limited to the code generated within the
    <!-- DNT-Start -->FUNCTIONMACRO<!-- DNT-End -->.</para>

    <!-- DNT-Start --><programlisting>AddOne(num) := FUNCTIONMACRO
  LOCAL numPlus := num + 1;
  RETURN numPlus;
ENDMACRO;

numPlus := 'this is a syntax error without LOCAL in the FUNCTIONMACRO';
numPlus;
AddOne(5);
</programlisting><!-- DNT-End -->

    <para>See Also: <link linkend="IMPORT"><!-- DNT-Start -->IMPORT<!-- DNT-End --></link>, <link
    linkend="EXPORT"><!-- DNT-Start -->EXPORT<!-- DNT-End --></link>, <link linkend="SHARED"><!-- DNT-Start -->SHARED<!-- DNT-End --></link>,
    <link linkend="MODULE_Structure"><!-- DNT-Start -->MODULE<!-- DNT-End --></link>, <link
    linkend="FUNCTIONMACRO_Structure"><!-- DNT-Start -->FUNCTIONMACRO<!-- DNT-End --></link></para>
  </sect2>
</sect1>
