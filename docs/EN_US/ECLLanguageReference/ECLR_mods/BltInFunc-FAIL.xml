<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="FAIL">
  <title>FAIL<indexterm>
      <primary>FAIL</primary>
    </indexterm></title>

  <para><emphasis>[</emphasis><emphasis>attrname</emphasis> :=<emphasis
  role="bold"> ] FAIL<indexterm>
      <primary>FAIL action</primary>
    </indexterm> [ (</emphasis><emphasis> errormessage </emphasis><emphasis
  role="bold">|</emphasis><emphasis> errorcode </emphasis><emphasis
  role="bold">) ] ;</emphasis></para>

  <para><emphasis role="bold"></emphasis><emphasis
  role="bold">[</emphasis><emphasis>attrname</emphasis> :=<emphasis
  role="bold"> ] FAIL(</emphasis><emphasis> errorcode , errormessage
  </emphasis><emphasis role="bold">) ;</emphasis></para>

  <para><emphasis role="bold"></emphasis><emphasis
  role="bold">[</emphasis><emphasis>attrname</emphasis> :=<emphasis
  role="bold"> ] FAIL(</emphasis><emphasis> datatype </emphasis><emphasis
  role="bold">[</emphasis><emphasis>, </emphasis><emphasis
  role="bold">[</emphasis><emphasis> errorcode </emphasis><emphasis
  role="bold">]</emphasis><emphasis> </emphasis><emphasis
  role="bold">[</emphasis><emphasis>, errormessage </emphasis><emphasis
  role="bold">] ] ) </emphasis>;</para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="82.40pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>attrname</emphasis></entry>

            <entry>Optional. The action name, which turns the action into an
            attribute definition, therefore not executed until the
            <emphasis>attrname</emphasis> is used as an action.</entry>
          </row>

          <row>
            <entry><emphasis>errormessage</emphasis></entry>

            <entry>Optional. A string constant containing the message to
            display.</entry>
          </row>

          <row>
            <entry><emphasis>errorcode</emphasis></entry>

            <entry>Optional. An integer constant containing the error number
            to display.</entry>
          </row>

          <row>
            <entry><emphasis>datatype</emphasis></entry>

            <entry>The value type, name of a RECORD structure, DATASET, or
            DICTIONARY to emulate.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">FAIL </emphasis>action immediately halts
  processing on the workunit and displays the <emphasis>errorcode
  </emphasis>and/or <emphasis>errormessage</emphasis>. The third form is
  available for use in contexts where a value type or dataset is required.
  FAIL may not be used in an expression context (such as within a
  TRANSFORM)--use the ERROR function<indexterm>
      <primary>ERROR function</primary>
    </indexterm> for those situations.</para>

  <para>Example:</para>

  <programlisting lang="ECL" role="runnable">MyRec := RECORD
    STRING50 Value1;
    UNSIGNED Value2;
END;

ds := DATASET([{'C',1},{'C',2},{'C',3},
               {'C',4},{'C',5},{'X',1},{'A',1}],MyRec);

MyRec FailTransform := TRANSFORM
  self.value1 := FAILMESSAGE[1..17]; 
  self.value2 := FAILCODE
END;

limited1 := LIMIT(ds, 2);
limited2 := LIMIT(ds, 3);
limited3 := LIMIT(ds, 4);

recovered1 := CATCH(limited1, SKIP);
recovered2 := CATCH(limited2, ONFAIL(FailTransform));
recovered3 := CATCH(CATCH(limited3, FAIL(1, 'Failed, sorry')), ONFAIL(FailTransform));

OUTPUT(recovered1);  //empty recordset 
OUTPUT(recovered2);  //
OUTPUT(recovered3);  //
</programlisting>

  <para>See Also: <link linkend="FAILURE">FAILURE</link>, <link
  linkend="ERROR">ERROR</link></para>
</sect1>
