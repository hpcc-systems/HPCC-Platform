<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="PIPEOUTANDMERGE">
  <!-- DNT-Start --><title>HDFSConnector.PipeOutAndMerge</title><!-- DNT-End -->

  <para><emphasis
  role="bold">HDFSConnector.PipeOutAndMerge</emphasis><emphasis> (<!-- DNT-Start -->ECL<!-- DNT-End -->_<!-- DNT-Start -->RS<!-- DNT-End -->,
  HadoopFileName, Layout, HadoopFileFormat, HDFSHost, HDFSPort, HDFSUser
  )</emphasis></para>

  <para><informaltable colsep="0" frame="none" rowsep="0">
      <tgroup cols="2">
        <colspec colwidth="150pt" />

        <colspec />

        <tbody>
          <row>
            <entry><!-- DNT-Start --><emphasis>ECL_RS</emphasis><!-- DNT-End --></entry>

            <entry>The <!-- DNT-Start -->ECL<!-- DNT-End --> recordset to export.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>HadoopFileName</emphasis><!-- DNT-End --></entry>

            <entry>The fully qualified target <!-- DNT-Start -->HDFS<!-- DNT-End --> file name.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>Layout</emphasis><!-- DNT-End --></entry>

            <entry>The structure which describes the <!-- DNT-Start -->ECL<!-- DNT-End -->_<!-- DNT-Start -->RS<!-- DNT-End --> recordset.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>HadoopFileFormat</emphasis><!-- DNT-End --></entry>

            <entry>The Hadoop data file format : <!-- DNT-Start -->FLAT<!-- DNT-End --> | <!-- DNT-Start -->CSV<!-- DNT-End --></entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>HDFSHost</emphasis><!-- DNT-End --></entry>

            <entry>The Hadoop <!-- DNT-Start -->DFS<!-- DNT-End --> host name or <!-- DNT-Start -->IP<!-- DNT-End --> address.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>HDFSPort</emphasis><!-- DNT-End --></entry>

            <entry>The Hadoop NameNode port number.</entry>
          </row>

          <row>
            <entry><!-- DNT-Start --><emphasis>HDFSUser</emphasis><!-- DNT-End --></entry>

            <entry><!-- DNT-Start -->HDFS<!-- DNT-End --> username to use to login to <!-- DNT-Start -->HDFS<!-- DNT-End --> in order to write the
            file. This user must have permission to write to the target <!-- DNT-Start -->HDFS<!-- DNT-End -->
            location.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>The <emphasis role="bold">HDFSConnector.PipeOutAndMerge
  </emphasis>macro writes the given <emphasis><!-- DNT-Start -->ECL<!-- DNT-End -->_<!-- DNT-Start -->RS<!-- DNT-End --></emphasis> recordset to
  the target <!-- DNT-Start -->HDFS<!-- DNT-End --> system in file parts and merges them together to form a
  single target file on the <!-- DNT-Start -->HDFS<!-- DNT-End --> system.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting>#OPTION('pickBestEngine', 0);  
IMPORT std;
IMPORT DataConnectors;
Layout_Flat :=RECORD
  STRING10  fname;
  STRING10  lname;
  UNSIGNED1 prange;
  STRING10  street;
  UNSIGNED1 zips;
  UNSIGNED1 age;
  STRING2   birth_state;
  STRING3   birth_month;
  UNSIGNED1 one;
  UNSIGNED8 id;
END;
MyDataFile := DATASET('~certification::full_test_distributed',Layout_Flat, FLAT);
DataConnectors.HDFSConnector.PipeOutAndMerge(MyDataFile, 
                                    '/user/hadoop/test/MyData1', 
                                    Layout_Flat, FLAT, 
                                    '192.168.56.120', 
                                    54310, 
                                    'hadoopusername' );
</programlisting><!-- DNT-End -->

  <?hard-pagebreak ?>

  <!-- DNT-Start --><programlisting>#OPTION('pickBestEngine', 0);  
IMPORT std;
IMPORT DataConnectors;
Layout_CSV := RECORD
  STRING10 fname;
  STRING10 lname;
  STRING3  prange;
  STRING10 street;
  STRING5  zips;
  STRING3  age;
  STRING2  birth_state;
  STRING3  birth_month;
  STRING3  one;
  STRING20 id;
END;
MyDataFile := DATASET('~certification::full_test_distributed',Layout_CSV, CSV);
DataConnectors.HDFSConnector.PipeOutAndMerge(MyDataFile, 
                                    '/user/hadoop/test/MyData1', 
                                    Layout_CSV, CSV, 
                                    '192.168.56.120', 
                                    54310, 
                                    'hadoopusername' );
</programlisting><!-- DNT-End -->

  <para></para>
</sect1>
