<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book xml:base="../">
  <title>The ECL Scheduler</title>

  <bookinfo>
    <title>ECL Scheduler</title>

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/redswooshWithLogo3.jpg" />
      </imageobject>
    </mediaobject>

    <author>
      <surname>Boca Raton Documentation Team</surname>
    </author>

    <legalnotice>
      <para>We welcome your comments and feedback about this document via
      email to <email>docfeedback@hpccsystems.com</email></para>

      <para>Please include <emphasis role="bold">Documentation
      Feedback</emphasis> in the subject line and reference the document name,
      page numbers, and current Version Number in the text of the
      message.</para>

      <para>LexisNexis and the Knowledge Burst logo are registered trademarks
      of Reed Elsevier Properties Inc., used under license.</para>

      <para>HPCC Systems is a registered trademark of LexisNexis Risk Data
      Management Inc.</para>

      <para>Other products, logos, and services may be trademarks or
      registered trademarks of their respective companies.</para>

      <para>All names and example data used in this manual are fictitious. Any
      similarity to actual persons, living or dead, is purely
      coincidental.</para>

      <para></para>
    </legalnotice>

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='FooterInfo'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='DateVer'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <corpname>HPCC Systems</corpname>

    <xi:include href="common/Version.xml" xpointer="xpointer(//*[@id='Copyright'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <mediaobject role="logo">
      <imageobject>
        <imagedata fileref="images/LN_Rightjustified.jpg" />
      </imageobject>
    </mediaobject>
  </bookinfo>

  <chapter>
    <title>The Ecl Scheduler</title>

    <sect1 role="nobrk">
      <title>Introduction</title>

      <para>The ECL Scheduler is a component process installed with the HPCC
      system platform. It typically starts with the platform.</para>

      <para>An interface to the scheduler is available through ECL Watch. The
      ECL Scheduler interface allows you to see a list of scheduled workunits.
      It can also trigger an event. An Event is a case-insensitive string
      constant naming the event to trap.</para>

      <para>A command line tool, <emphasis>scheduleadmin</emphasis> is
      available on the server installed in /opt/HPCCSystems/bin.</para>

      <sect2>
        <title>ECL Scheduling</title>

        <para>ECL Scheduling provides a means of automating processes within
        ECL code or to chain processes together to work in sequence. For
        example, you can write ECL code that watches a landing zone for the
        arrival of a file, and when it arrives, sprays it to Thor, processes
        it, builds an index, and then adds it to a superfile.</para>
      </sect2>

      <sect2>
        <title>How it Works</title>

        <para>ECL Scheduling is event-based. The ECL Scheduler monitors a
        Schedule list containing registered Workunits and Events and executes
        any Workunits associated with an Event when that Event is
        triggered.</para>

        <para>Your ECL Code can execute when an Event is triggered, or can
        trigger an Event. If you submit code containing a <emphasis
        role="bold">WHEN </emphasis>clause, the Event and Workunit registers
        in the Schedule list. When that Event triggers, the Workunit compiles
        and executes. When the Workunit completes, ECL Scheduler removes it
        from the Schedule list.</para>

        <para>For example, if you submit a Workunit using <emphasis
        role="bold">WHEN(‘Event1’,’MyEvent’, COUNT(2)) </emphasis>in the
        appropriate place, it will execute twice (the value of <emphasis
        role="bold">COUNT</emphasis>) before the ECL Scheduler removes it from
        the Schedule list and the Workunit is marked as completed.</para>
      </sect2>
    </sect1>
  </chapter>

  <xi:include href="ECLScheduler/ECLSched-Mods/ECLSchedComp.xml"
              xpointer="xpointer(//*[@id='ECLSched_comp'])"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <xi:include href="ECLScheduler/ECLSched-Mods/ECLSchedAdmin.xml"
              xpointer="xpointer(//*[@id='ECLSched-Admin'])"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

  <chapter>
    <title>ECL Usage</title>

    <para>The ECL Scheduler is a tool that can perform a specific action based
    on a specific event. The following functions can be viewed or manipulated
    in the scheduler.</para>

    <sect1 id="WHEN">
      <title>WHEN</title>

      <xi:include href="ECLLanguageReference/ECLR_mods/BltInFunc-WHEN.xml"
                  xpointer="xpointer(//*[@id='SchWhen'])"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>

    <sect1 id="NOTIFY">
      <title>NOTIFY</title>

      <xi:include href="ECLLanguageReference/ECLR_mods/BltInFunc-NOTIFY.xml"
                  xpointer="xpointer(//*[@id='SchNOTIFY'])"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>

    <sect1>
      <title>EVENT</title>

      <xi:include href="ECLLanguageReference/ECLR_mods/BltInFunc-EVENT.xml"
                  xpointer="xpointer(//*[@id='SchEvent'])"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>

    <sect1>
      <title>CRON</title>

      <xi:include href="ECLLanguageReference/ECLR_mods/BltInFunc-CRON.xml"
                  xpointer="xpointer(//*[@id='SchCRON'])"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>

    <sect1>
      <title>WAIT</title>

      <xi:include href="ECLLanguageReference/ECLR_mods/BltInFunc-WAIT.xml"
                  xpointer="xpointer(//*[@id='SchWAIT'])"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </sect1>
  </chapter>

  <chapter>
    <title>DFU Monitoring and Events</title>

    <para>The following are supported methods for the ECL Scheduler included
    in the ECL Standard Library Reference.</para>

    <xi:include href="ECLStandardLibraryReference/SLR-Mods/MonitorFile.xml"
                xpointer="xpointer(//*[@id='MonitorFile'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />

    <xi:include href="ECLStandardLibraryReference/SLR-Mods/MonitorLogicalFileName.xml"
                xpointer="xpointer(//*[@id='MonitorLogicalFileName'])"
                xmlns:xi="http://www.w3.org/2001/XInclude" />
  </chapter>
</book>
