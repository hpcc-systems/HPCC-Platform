<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="security-manager-plugin-development">
  <title role="nbrk">Security Manager Development</title>

  <para>The Security Manager Plugin framework provides a mechanism for the
  creation and deployment of custom security manager plugins.</para>

  <sect1 id="how-to-create-a-security-manager-plugin">
    <title>Plugin Development</title>

    <para>A custom Security Manager Plugin consists of a <emphasis
    role="bold">library</emphasis> (.so or .dll) file which provides
    implementation(s) of the iSecManager interface, a <emphasis
    role="bold">configuration definition</emphasis> (articulated as an XSD
    schema), and a component declaration (buildset.xml file).</para>

    <para><emphasis role="bold">Library requirements</emphasis> <itemizedlist>
        <listitem>
          <para>Must implement the ISecManager interface</para>
        </listitem>

        <listitem>
          <para>Must expose a factory method which returns instances of the
          ISecmanager implementation.</para>

          <para>Example of a standard factory method name :</para>

          <programlisting>extern "C"
{ 
    ISecManager * createInstance(const char *serviceName,
                                 IPropertyTree &amp;secMgrCfg,
                                 IPropertyTree &amp;bndCfg);
} </programlisting>

          <para>The framework expects to have access to the "createInstance()"
          method, if the developer chooses to provide other factory methods,
          it can override the default name in configuration, but must have the
          expected signature:</para>

          <programlisting>ISecManager methodname(const char *, IPropertyTree &amp;, IPropertyTree &amp;)</programlisting>
        </listitem>
      </itemizedlist></para>

    <para><emphasis role="bold">Buildset definition</emphasis> - The plugin
    declares itself as an HPCC Security Manager Plugin component, and declares
    the location of the plugin files and the configuration definition
    schema.</para>

    <para><emphasis role="bold">EXAMPLE:</emphasis></para>

    <para><programlisting>&lt;Environment&gt;
   &lt;Programs&gt;
      &lt;Build name="_" url="/opt/HPCCSystems"&gt;
          &lt;BuildSet  deployable="no"
                     installSet="deploy_map.xml"
                     name="mysecuritypluginname"
                     path="componentfiles/mysecuritypluginname"
                     processName="MySecurityPluginName"
                     schema="myCustom_secmgr.xsd"&gt;
          &lt;/BuildSet&gt;
      &lt;/Build&gt;
   &lt;/Programs&gt;
&lt;/Environment&gt;</programlisting></para>

    <para><emphasis role="bold">Configuration Definition</emphasis> - The
    plugin must provide a definition of the configuration elements and the
    structure it expects to receive at the time it is instantiated. The XSD
    file is consumed by the HPCC Configuration manager component and is
    rendered as a GUI form. The configuration definition is defined as an
    element of the component name (as declared in the buildset) followed by
    attributes and/or complex elements.</para>

    <para>There are four attributes every plugin is required to declare in its
    configuration definition in addition to any custom configuration defined
    by the plugin: 'type', 'name', 'libName', and 'instanceFactoryName'</para>

    <itemizedlist spacing="compact">
      <listitem>
        <para><emphasis role="bold">type</emphasis> - This attribute should be
        read-only and set to 'SecurityManager'</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">name</emphasis> - The name of the custom
        Security Manager Plugin instance</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">libName</emphasis> - The name of the
        library which provides instances of this Security Manager Plugin
        type</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">instanceFactoryName</emphasis> - Name of
        the method provided by the library, which is responsible for creating
        instances of the Security Manager Plugin</para>
      </listitem>
    </itemizedlist>

    <para><emphasis role="bold">EXAMPLE:</emphasis></para>

    <programlisting>&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"&gt;
  &lt;xs:element name="MySecurityPluginType"&gt;
     &lt;xs:complexType&gt;
        &lt;xs:attribute name="type" type="SecurityManager" 
                      use="required" default="SecurityManager"&gt;
           &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                 &lt;viewType&gt;hidden&lt;/viewType&gt;
              &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
        &lt;/xs:attribute&gt;
        &lt;xs:attribute name="name" type="xs:string" use="required"&gt;
           &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                 &lt;tooltip&gt;Name for this Security Manager Plugin instance&lt;/tooltip&gt;
                 &lt;required&gt;true&lt;/required&gt;
              &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
        &lt;/xs:attribute&gt;  
        &lt;xs:attribute name="libName" type="xs:string" use="optional"&gt;
           &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                  &lt;tooltip&gt;The Security Manager library name (.so)&lt;/tooltip&gt;
               &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
         &lt;/xs:attribute&gt;
         &lt;xs:attribute name="instanceFactoryName" type="xs:string" 
                       use="optional" default="createInstance"&gt;
            &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                  &lt;tooltip&gt;The factory method name in the 
                   Security Mangager library (.so)&lt;/tooltip&gt;
               &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
         &lt;/xs:attribute&gt;
           &lt;xs:sequence&gt;
             &lt;xs:element name="compoundOption" minOccurs="0" maxOccurs="unbounded"&gt;
                &lt;xs:complexType&gt;
                   &lt;xs:attribute name="Option" type="xs:string" use="required"&gt;
                       &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                             &lt;tooltip&gt;This is an example compound option element 
                             which Security Manager Plugins can define&lt;/tooltip&gt;
                           &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
                   &lt;/xs:attribute&gt;
               &lt;/xs:complexType&gt;
             &lt;/xs:element&gt;
         &lt;/xs:sequence&gt;
        &lt;xs:attribute name="optionalAttribute" type="xs:string" use="optional"&gt;
            &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                   &lt;tooltip&gt;This is an example optional attribute 
                           which Security Manager Plugins can define&lt;/tooltip&gt;
                &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
         &lt;/xs:attribute&gt;
         &lt;xs:attribute name="samplepasswordfile" type="xs:string" use="required"&gt;
            &lt;xs:annotation&gt;&lt;xs:appinfo&gt;
                  &lt;tooltip&gt;An attribute which defines a file name required 
                          by this Security Manager Plugin&lt;/tooltip&gt;
               &lt;/xs:appinfo&gt;&lt;/xs:annotation&gt;
         &lt;/xs:attribute&gt;
     &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;</programlisting>

    <?hard-pagebreak ?>

    <para><emphasis role="bold">genenvrules.conf</emphasis> - (optional) This
    file allows the plugin to add itself to the
    "do_not(automatically)_generate" list. While this is an optional file,
    more often than not it is actually needed.</para>

    <para><emphasis role="bold">EXAMPLE:</emphasis></para>

    <para><programlisting>do_not_generate=mysecuritypluginname</programlisting></para>

    <para><emphasis role="bold">Configuration transformation rules</emphasis>
    - (optional) specified as an xsl template, this set of rules can be
    applied to the configuration XML. Refer to XSL templates in the HPCC
    source tree.</para>

    <sect2 id="concrete-example">
      <title>Concrete Example</title>

      <para>The HPCC Platform includes a security manager plugin
      implementation (HTPasswd) and can be used as a guidance for the plugin
      development process:</para>

      <para><ulink
      url="https://github.com/hpcc-systems/HPCC-Platform/tree/master/system/security/plugins/htpasswdSecurity">https://github.com/hpcc-systems/HPCC-Platform/tree/master/system/security/plugins/htpasswdSecurity</ulink></para>
    </sect2>
  </sect1>
</chapter>
