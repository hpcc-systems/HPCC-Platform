<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="MonitorLogicalFileName">
  <!-- DNT-Start --><title>MonitorLogicalFileName</title><!-- DNT-End -->

  <para><emphasis role="bold"><!-- DNT-Start -->STD<!-- DNT-End -->.File.<!-- DNT-Start -->MonitorLogicalFileName<!-- DNT-End --><indexterm>
      <primary><!-- DNT-Start -->STD<!-- DNT-End -->.File.<!-- DNT-Start -->MonitorLogicalFileName<!-- DNT-End --></primary>
    </indexterm><indexterm>
      <primary>File.<!-- DNT-Start -->MonitorLogicalFileName<!-- DNT-End --></primary>
    </indexterm><indexterm>
      <primary><!-- DNT-Start -->MonitorLogicalFileName<!-- DNT-End --></primary>
    </indexterm>(</emphasis> <emphasis> event, </emphasis> <emphasis
  role="bold"> </emphasis> <emphasis>filename, </emphasis> <emphasis
  role="bold"> [</emphasis> <emphasis>, shotcount </emphasis> <emphasis
  role="bold">] [</emphasis> <emphasis>, espserverIPport </emphasis> <emphasis
  role="bold">] )</emphasis> <emphasis></emphasis></para>

  <para><emphasis>dfuwuid </emphasis> <emphasis role="bold">:=
  <!-- DNT-Start -->STD<!-- DNT-End -->.File.fMonitorLogicalFileName<indexterm>
      <primary><!-- DNT-Start -->STD<!-- DNT-End -->.File.fMonitorLogicalFileName</primary>
    </indexterm><indexterm>
      <primary>File.fMonitorLogicalFileName</primary>
    </indexterm><indexterm>
      <primary>fMonitorLogicalFileName</primary>
    </indexterm>(</emphasis> <emphasis> event, </emphasis> <emphasis
  role="bold"> </emphasis> <emphasis>filename, </emphasis> <emphasis
  role="bold"> [</emphasis> <emphasis>, shotcount </emphasis> <emphasis
  role="bold">] [</emphasis> <emphasis>, espserverIPport </emphasis> <emphasis
  role="bold">] );</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><!-- DNT-Start --><emphasis>event</emphasis><!-- DNT-End --></entry>

          <entry>A null-terminated string containing the user-defined name of
          the event to fire when the <emphasis>filename</emphasis> appears.
          This value is used as the first parameter to the <!-- DNT-Start -->EVENT<!-- DNT-End -->
          function.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>filename</emphasis><!-- DNT-End --></entry>

          <entry>A null-terminated string containing the name of the logical
          file in the <!-- DNT-Start -->DFU<!-- DNT-End --> to monitor.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>shotcount</emphasis><!-- DNT-End --></entry>

          <entry>Optional. An integer value indicating the number of times to
          generate the event before the monitoring job completes. A negative
          one (-1) value indicates the monitoring job continues until manually
          aborted. If omitted, the default is 1.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>espserverIPport</emphasis><!-- DNT-End --></entry>

          <entry>Optional. A null-terminated string containing the protocol,
          <!-- DNT-Start -->IP<!-- DNT-End -->, port, and directory, or the <!-- DNT-Start -->DNS<!-- DNT-End --> equivalent, of the <!-- DNT-Start -->ESP<!-- DNT-End --> server
          program. This is usually the same <!-- DNT-Start -->IP<!-- DNT-End --> and port as <!-- DNT-Start -->ECL<!-- DNT-End --> Watch, with
          â/FileSprayâ appended. If omitted, the default is the value
          contained in the lib_system.ws_fs_server attribute.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>dfuwuid</emphasis><!-- DNT-End --></entry>

          <entry>The attribute name to recieve the null-terminated string
          containing the <!-- DNT-Start -->DFU<!-- DNT-End --> workunit <!-- DNT-Start -->ID<!-- DNT-End --> (<!-- DNT-Start -->DFUWUID<!-- DNT-End -->) generated for the
          monitoring job.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start -->Return:<emphasis> </emphasis><!-- DNT-End --></entry>

          <entry>fMonitorLogicalFileName returns a null-terminated string
          containing the <!-- DNT-Start -->DFU<!-- DNT-End --> workunit <!-- DNT-Start -->ID<!-- DNT-End --> (<!-- DNT-Start -->DFUWUID<!-- DNT-End -->).</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold"><!-- DNT-Start -->MonitorLogicalFileName<!-- DNT-End --> </emphasis>function
  creates a file monitor job in the <!-- DNT-Start -->DFU<!-- DNT-End --> Server. Once the job is received it
  goes into a 'monitoring' mode (which can be seen in the eclwatch <!-- DNT-Start -->DFU<!-- DNT-End -->
  Workunit display), which polls at a fixed interval (default 15 mins). If an
  appropriately named file arrives in this interval it will fire the
  <emphasis>event</emphasis> with the name of the triggering object as the
  event subtype (see the <!-- DNT-Start -->EVENT<!-- DNT-End --> function).</para>

  <para>This function does not support wildcard characters. To monitor
  physical files or directories using wildcards, use the <link
  linkend="MonitorFile">MonitorFile</link> function.</para>

  <para>This process continues until either:</para>

  <para>1) The <emphasis>shotcount</emphasis> number of events have been
  generated.</para>

  <para>2) The user aborts the <!-- DNT-Start -->DFU<!-- DNT-End --> workunit.</para>

  <para>The <!-- DNT-Start -->STD<!-- DNT-End -->.File.AbortDfuWorkunit and <!-- DNT-Start -->STD<!-- DNT-End -->.File.WaitDfuWorkunit functions
  can be used to abort or wait for the <!-- DNT-Start -->DFU<!-- DNT-End --> job by passing them the returned
  <emphasis>dfuwuid</emphasis>.</para>

  <para><emphasis role="bold">Note the following caveats and
  restrictions:</emphasis></para>

  <para>1) If a matching file already exists when the <!-- DNT-Start -->DFU<!-- DNT-End --> Monitoring job is
  started, that file will <emphasis role="underline">not</emphasis> generate
  an event. It will only generate an event once the file has been deleted and
  recreated.</para>

  <para>2) If a file is created and then deleted (or deleted then re-created)
  between polling intervals, it will not be seen by the monitor and will not
  trigger an event.</para>

  <para>3) Events are only generated on the polling interval.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting format="linespecific">EventName := 'MyFileEvent';
FileName  := 'test::myfile';
IF (STD.File.FileExists(FileName),
         STD.File.DeleteLogicalFile(FileName));
STD.File.MonitorLogicalFileName(EventName,FileName);
OUTPUT('File Created') : WHEN(EVENT(EventName,'*'),COUNT(1));
    
rec := RECORD
  STRING10 key;
  STRING10 val;
END;
afile := DATASET([{ 'A', '0'}], rec);
OUTPUT(afile,,FileName);
</programlisting><!-- DNT-End -->
</sect1>
