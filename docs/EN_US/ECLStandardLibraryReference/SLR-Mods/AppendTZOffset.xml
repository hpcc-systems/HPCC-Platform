<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="AppendTZOffset">
  <title>AppendTZOffset</title>

  <para><emphasis role="bold">STD.Date.TimeZone.AppendTZOffset<indexterm>
      <primary>STD.Date.TimeZone.AppendTZOffset</primary>
    </indexterm><indexterm>
      <primary>TimeZone.AppendTZOffset</primary>
    </indexterm><indexterm>
      <primary>AppendTZOffset</primary>
    </indexterm>(</emphasis> <emphasis>infile, timeZoneAbbrevField,
  newOffsetField,</emphasis> [<emphasis>fromLocationField</emphasis>,
  ][<emphasis>toTimeZoneAbbrev</emphasis>, ] [<emphasis>toLocation</emphasis>
  ]<emphasis role="bold"> )</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><emphasis>infile</emphasis></entry>

          <entry>REQUIRED. The dataset to process.</entry>
        </row>

        <row>
          <entry><emphasis>timeZoneAbbrevField</emphasis></entry>

          <entry>REQUIRED. The field within inFile that contains the time zone
          abbreviation to use for matching; the values in this field should be
          uppercase. This is not a string</entry>
        </row>

        <row>
          <entry><emphasis>newOffsetField</emphasis></entry>

          <entry>REQUIRED. The field to append to inFile that will contain the
          number of seconds offset from UTC. This is not a string</entry>
        </row>

        <row>
          <entry><emphasis>fromLocationField</emphasis></entry>

          <entry>OPTIONAL. The field within inFile that contains the time zone
          location for the time zone cited by timeZoneAbbrevField. This is not
          a string. Defaults to a null value (indicating that there is no time
          zone location field).</entry>
        </row>

        <row>
          <entry><emphasis>toTimeZoneAbbrev</emphasis></entry>

          <entry>OPTIONAL. The to time zone abbreviation to use for all
          calculations, as a string. Defaults to 'UTC'</entry>
        </row>

        <row>
          <entry><emphasis>toLocation</emphasis></entry>

          <entry>OPTIONAL. The name of the location that goes along with
          toTimeZoneAbbrev; if a location is not provided or is an empty
          string, the first record matching toTimeZoneAbbrev is used. Defaults
          to an empty string</entry>
        </row>

        <row>
          <entry>Returns:</entry>

          <entry>A new dataset with the same record definition as inFile but
          with four new fields added. The new fields are named based on the
          name given as the newOffsetField attribute. The appended fields
          are:<programlisting>INTEGER4 &lt;newOffsetField&gt;            // Offset, in seconds, between original 
                                     //time zone and toTimeZoneAbbrev 
BOOLEAN  &lt;newOffsetField&gt;_is_valid   // TRUE if &lt;newOffsetField&gt; contains a 
                                     // valid value
                                     // If &lt;newOffsetField&gt;_is_valid is FALSE 
                                     // then &lt;newOffsetField&gt; will be zero.
STRING5  &lt;newOffsetField&gt;_tz         // The value of toTimeZoneAbbrev
STRING15 &lt;newOffsetField&gt;_location   // The time zone location for 
                                     // &lt;newOffsetField&gt;_tz. </programlisting></entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold">STD.Date.TimeZone.AppendTZOffset</emphasis>
  takes a dataset that contains a time zone abbreviation and optional
  location, and appends four new attributes to the dataset that contain useful
  information for translating a time value into another time zone.</para>

  <para>This could be useful as an ETL step where time data is made common in
  respect to one particular time zone (e.g., UTC). The actions within this
  function macro are conceptually similar to SecondsBetweenTZ() but applied to
  an entire dataset, and somewhat more efficiently.</para>

  <para><emphasis role="bold">Note:</emphasis> In order for this function
  macro to execute correctly, the calling code must import the Std
  library.</para>

  <?hard-pagebreak ?>

  <para>Example:</para>

  <programlisting format="linespecific">IMPORT STD;
ds := DATASET ([
               {120000, 'CT'},
               {120000, 'ET'}
               ],{Std.Date.Time_t time, STRING tz});
utcOffsetDS := Std.Date.TimeZone.AppendTZOffset(ds, tz, seconds_to_utc);
OUTPUT(utcOffsetDS, NAMED('offset_to_utc_result'));
 
ptOffsetDS := Std.Date.TimeZone.AppendTZOffset (ds, tz, seconds_to_pacific_time,
                                                toTimeZoneAbbrev := 'PT', 
                                                toLocation := 'NORTH AMERICA');
OUTPUT(ptOffsetDS, NAMED('offset_to_pacific_time_result'));</programlisting>

  <para>See Also: <link
  linkend="AppendTZAdjustedTime">AppendTZAdjustedTime</link> , <link
  linkend="SecondsBetweenTZ">SecondsBetweenTZ</link></para>
</sect1>
