<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="GetEspUrl">
  <title><emphasis role="bold">GetEspUrl</emphasis></title>

  <para><emphasis>result</emphasis> <emphasis role="bold"> :=
  STD.File.GetEspUrl <indexterm>
      <primary>STD.File.GetEspUrl</primary>
    </indexterm><indexterm>
      <primary>File.GetEspUrl</primary>
    </indexterm> <indexterm>
      <primary>GetEspUrl</primary>
    </indexterm>( [</emphasis> <emphasis>username, userPW </emphasis>
  <emphasis role="bold">]);</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><emphasis>username</emphasis></entry>

          <entry>Optional. A STRING containing a username to use for
          authenticated access to the ESP process. If omitted, it indicates
          that no user authentication is required. </entry>
        </row>

        <row>
          <entry><emphasis>userPW</emphasis></entry>

          <entry>Optional. A STRING containing the password to use with the
          user cited in the <emphasis>username</emphasis> argument. If
          <emphasis>username</emphasis> is empty then this is ignored</entry>
        </row>

        <row>
          <entry>Return:<emphasis> </emphasis></entry>

          <entry>GetEspUrl returns a STRING containing the full URL (including
          HTTP scheme and port) to an ESP server process. If more than one ESP
          process is defined then the first found process is returned. Returns
          an empty string if an ESP server process cannot be found in the
          environment.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold">GetEspUrl </emphasis>function returns the
  full URL to an ESP server process. </para>

  <para>Example:</para>

  <programlisting format="linespecific">EspAddress := STD.File.GetEspUrl
</programlisting>
</sect1>
