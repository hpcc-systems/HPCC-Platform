<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="GetLogicalFileAttribute">
  <!-- DNT-Start --><title>GetLogicalFileAttribute</title><!-- DNT-End -->

  <!-- DNT-Start --><para><emphasis role="bold">STD.File.GetLogicalFileAttribute<indexterm>
      <primary>STD.File.GetLogicalFileAttribute</primary>
    </indexterm><indexterm>
      <primary>File.GetLogicalFileAttribute</primary>
    </indexterm><indexterm>
      <primary>GetLogicalFileAttribute</primary>
    </indexterm>(</emphasis> <emphasis> logicalfilename, attrname </emphasis>
  <emphasis role="bold">)</emphasis></para><!-- DNT-End -->

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><!-- DNT-Start --><emphasis>logicalfilename</emphasis><!-- DNT-End --></entry>

          <entry>A null-terminated string containing the name of the logical
          file as it is known by the <!-- DNT-Start -->DFU<!-- DNT-End -->.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start --><emphasis>attrname</emphasis><!-- DNT-End --></entry>

          <entry>A null-terminated string containing the name of the file
          attribute to return. Possible values are recordSize, recordCount,
          size, clusterName, directory, owner, description, <!-- DNT-Start -->ECL<!-- DNT-End -->, partmask,
          numparts, name, modified, format, job, checkSum, kind, csvSeparate,
          csvTerminate, headerLength, footerLength, rowTag, workunit,
          accessed, expireDays, maxRecordSize, csvQuote, blockCompressed,
          compressedSize, fileCrc, formatCrc, or protected. The value is
          case-sensitive.</entry>
        </row>

        <row>
          <entry><!-- DNT-Start -->Return:<emphasis> </emphasis><!-- DNT-End --></entry>

          <entry><!-- DNT-Start -->GetLogicalFileAttribute<!-- DNT-End --> returns returns a <!-- DNT-Start -->VARSTRING<!-- DNT-End -->
          (null-terminated) value.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold"><!-- DNT-Start -->GetLogicalFileAttribute<!-- DNT-End --> </emphasis>function
  returns the value of the <emphasis>attrname</emphasis> for the specified
  <emphasis>logicalfilename</emphasis>.</para>

  <para>Example:</para>

  <!-- DNT-Start --><programlisting format="linespecific">IMPORT STD;
file := '~class::bmf::join::halfkeyed';

OUTPUT(STD.File.GetLogicalFileAttribute(file,'recordSize'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'recordCount'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'size'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'clusterName'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'directory'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'numparts'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'owner'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'description'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'ECL'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'partmask'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'numparts'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'name'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'modified'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'protected'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'format'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'job'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'checkSum'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'kind'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'csvSeparate'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'csvTerminate'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'headerLength'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'footerLength'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'rowtag'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'workunit'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'accessed'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'expireDays'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'maxRecordSize'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'csvQuote'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'blockCompressed'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'compressedSize'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'fileCrc'));
OUTPUT(STD.File.GetLogicalFileAttribute(file,'formatCrc'));
</programlisting><!-- DNT-End -->
</sect1>
