<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="SetWorkunitAppValue">
  <title>SetWorkunitAppValue</title>

  <para><emphasis role="bold">STD.System.Workunit.SetWorkunitAppValue
  <indexterm>
      <primary>STD.System.Workunit.SetWorkunitAppValue</primary>
    </indexterm> <indexterm>
      <primary>System.Workunit.SetWorkunitAppValue</primary>
    </indexterm> <indexterm>
      <primary>Workunit.SetWorkunitAppValue</primary>
    </indexterm> <indexterm>
      <primary>SetWorkunitAppValue</primary>
    </indexterm> (</emphasis> <emphasis>app, key, value,</emphasis> <emphasis
  role="bold"> [ </emphasis> <emphasis>overwrite</emphasis> <emphasis
  role="bold"> ])</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry><emphasis>app</emphasis></entry>

          <entry>The application name to set.</entry>
        </row>

        <row>
          <entry><emphasis>key</emphasis></entry>

          <entry>The name of the value to set.</entry>
        </row>

        <row>
          <entry><emphasis>value</emphasis></entry>

          <entry>The value to set.</entry>
        </row>

        <row>
          <entry><emphasis>overwrite</emphasis></entry>

          <entry>A boolean TRUE or FALSE flag indicating whether to allow the
          value to overwrite an existing value. Default is TRUE..</entry>
        </row>

        <row>
          <entry>Return:<emphasis> </emphasis></entry>

          <entry>SetWorkunitAppValue returns TRUE if the value was set
          successfully.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold">SetWorkunitAppValue </emphasis>function sets
  an application value in the current workunit. It returns TRUE if the value
  was set successfully.</para>

  <para>Example:</para>

  <programlisting format="linespecific">IMPORT STD;
STD.System.Workunit.SetWorkunitAppValue('MyApp','FirstName','Jim',TRUE);
OUTPUT(STD.System.Workunit.WorkunitList(appvalues := 'MyApp/FirstName='Jim');
//returns a list of workunits with app values where FirstName='Jim'</programlisting>

  <para>See Also: <link linkend="WorkunitList">WorkunitList</link></para>
</sect1>
