<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="VizBundleGeospatialMethods">
  <title><emphasis>Geospatial Methods</emphasis></title>

  <para>This section covers the Geospatial methods that create geographical
  map visualizations contained in the Choropleth module. These methods project
  data onto maps using shading to depict values.</para>

  <para></para>

  <sect1 id="VizUSStates">
    <title>USStates</title>

    <para><emphasis role="bold">Visualizer.Choropleth.USStates(<indexterm>
        <primary>Visualizer.Choropleth.USStates</primary>
      </indexterm><indexterm>
        <primary>Choropleth.USStates</primary>
      </indexterm><indexterm>
        <primary>USStates</primary>
      </indexterm>(</emphasis> <emphasis>id</emphasis> , <emphasis
    role="bold">[</emphasis>.<emphasis>dataSource</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>outputName</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>mappings</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>properties</emphasis><emphasis
    role="bold">]);</emphasis></para>

    <para></para>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.50pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>id</emphasis></entry>

            <entry>Unique identifier for the visualization</entry>
          </row>

          <row>
            <entry><emphasis>dataSource</emphasis></entry>

            <entry>Location of the result set (WUID, Logical File, Roxie Query
            result), defaults to the current WU</entry>
          </row>

          <row>
            <entry><emphasis>outputName</emphasis></entry>

            <entry>Result set name (ignored for Logical Files)</entry>
          </row>

          <row>
            <entry><emphasis>mappings</emphasis></entry>

            <entry>Maps Column Name &lt;--&gt; field ID</entry>
          </row>

          <row>
            <entry><emphasis>filteredBy</emphasis></entry>

            <entry>Filter condition (also useful for widget
            interactions)</entry>
          </row>

          <row>
            <entry><emphasis>properties</emphasis></entry>

            <entry>Dermatology properties. See <link
            linkend="VizDermProp">Dermatology Properties</link></entry>
          </row>

          <row>
            <entry>Return:<emphasis></emphasis></entry>

            <entry>A "meta" output describing the visualization.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>The <emphasis role="bold">USStates </emphasis>visualization method
    depicts data on a map of U.S. States.</para>

    <para>Example:</para>

    <programlisting format="linespecific">IMPORT Visualizer;
  _usStates := DATASET([  {'AL', 4779736}, 
                         {'AK', 710231}, 
                         {'AZ', 6392017}, 
                         {'AR', 2915918}],
                         {STRING State, INTEGER4 weight});
  data_usStates := OUTPUT(_usStates, NAMED('choro_usStates'));
  data_usStates;
  viz_usstates := Visualizer.Choropleth.USStates('usStates',, 'choro_usStates');
  viz_usstates;
</programlisting>
  </sect1>

  <sect1 id="VizUSCounties">
    <title>USCounties</title>

    <para><emphasis role="bold">Visualizer.Choropleth.USCounties(<indexterm>
        <primary>Visualizer.Choropleth.USCounties</primary>
      </indexterm><indexterm>
        <primary>Choropleth.USCounties</primary>
      </indexterm><indexterm>
        <primary>USCounties</primary>
      </indexterm>(</emphasis> <emphasis>id</emphasis> , <emphasis
    role="bold">[</emphasis>.<emphasis>dataSource</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>outputName</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>mappings</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>properties</emphasis><emphasis
    role="bold">]);</emphasis></para>

    <para></para>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.50pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>id</emphasis></entry>

            <entry>Unique identifier for the visualization</entry>
          </row>

          <row>
            <entry><emphasis>dataSource</emphasis></entry>

            <entry>Location of the result set (WUID, Logical File, Roxie Query
            result), defaults to the current WU</entry>
          </row>

          <row>
            <entry><emphasis>outputName</emphasis></entry>

            <entry>Result set name (ignored for Logical Files)</entry>
          </row>

          <row>
            <entry><emphasis>mappings</emphasis></entry>

            <entry>Maps Column Name &lt;--&gt; field ID</entry>
          </row>

          <row>
            <entry><emphasis>filteredBy</emphasis></entry>

            <entry>Filter condition (also useful for widget
            interactions)</entry>
          </row>

          <row>
            <entry><emphasis>properties</emphasis></entry>

            <entry>Dermatology properties. See <link
            linkend="VizDermProp">Dermatology Properties</link></entry>
          </row>

          <row>
            <entry>Return:<emphasis></emphasis></entry>

            <entry>A "meta" output describing the visualization.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>The <emphasis role="bold">USCounties </emphasis>visualization method
    depicts data on a map of U.S. counties.</para>

    <para>Example:</para>

    <programlisting format="linespecific">IMPORT Visualizer;

  _usCounties := DATASET([    {1073,29.946185501741},
                                        {1097,0.79566003616637},
                                        {1117,1.5223596574691},
                                        {4005,27.311773623042}],
                                        {STRING FIPS, INTEGER4 weight});

  data_usCounties := OUTPUT(_usCounties, NAMED('choro_usCounties'));
  data_usCounties;
  viz_uscounties := Visualizer.Choropleth.USCounties('usCounties',, 'choro_usCounties');
  viz_uscounties;
</programlisting>
  </sect1>

  <sect1 id="VizEuro">
    <title>Euro</title>

    <para><emphasis role="bold">Visualizer.Choropleth.Euro(<indexterm>
        <primary>Visualizer.Choropleth.Euro</primary>
      </indexterm><indexterm>
        <primary>Choropleth.Euro</primary>
      </indexterm><indexterm>
        <primary>Euro</primary>
      </indexterm><indexterm>
        <primary>EuroGB</primary>
      </indexterm><indexterm>
        <primary>EuroIE</primary>
      </indexterm>(</emphasis> <emphasis>id</emphasis> ,<emphasis
    role="bold">[</emphasis><emphasis>region</emphasis><emphasis
    role="bold">]</emphasis> <emphasis
    role="bold">[</emphasis>.<emphasis>dataSource</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>outputName</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>mappings</emphasis><emphasis
    role="bold">], [</emphasis><emphasis>properties</emphasis><emphasis
    role="bold">]);</emphasis></para>

    <para></para>

    <informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="80.50pt" />

        <colspec />

        <tbody>
          <row>
            <entry><emphasis>id</emphasis></entry>

            <entry>Unique identifier for the visualization</entry>
          </row>

          <row>
            <entry><emphasis>region</emphasis></entry>

            <entry>2 Letter European Code (GB, IE, etc.)</entry>
          </row>

          <row>
            <entry><emphasis>dataSource</emphasis></entry>

            <entry>Location of the result set (WUID, Logical File, Roxie Query
            result), defaults to the current WU</entry>
          </row>

          <row>
            <entry><emphasis>outputName</emphasis></entry>

            <entry>Result set name (ignored for Logical Files)</entry>
          </row>

          <row>
            <entry><emphasis>mappings</emphasis></entry>

            <entry>Maps Column Name &lt;--&gt; field ID</entry>
          </row>

          <row>
            <entry><emphasis>filteredBy</emphasis></entry>

            <entry>Filter condition (also useful for widget
            interactions)</entry>
          </row>

          <row>
            <entry><emphasis>properties</emphasis></entry>

            <entry>Dermatology properties. See <link
            linkend="VizDermProp">Dermatology Properties</link></entry>
          </row>

          <row>
            <entry>Return:<emphasis></emphasis></entry>

            <entry>A "meta" output describing the visualization.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <para>The <emphasis role="bold">Euro </emphasis>visualization method
    depicts data on a map of Europe. The <emphasis
    role="bold">EuroIE</emphasis> and <emphasis role="bold">EuroGB</emphasis>
    methods are provided as examples. To create other country-specific
    methods, merely use the Euro method and provide the two-character country
    code in the _region parameter.</para>

    <para>Example:</para>

    <programlisting format="linespecific">IMPORT Visualizer;
_euroIE := DATASET([    {'Carlow', '27431', '27181', '54612'}, 
                                    {'Dublin City', '257303', '270309', '527612'}, 
                                    {'Kilkenny', '47788', '47631', '95419'}, 
                                    {'Cork', '198658', '201144', '399802'}],
                                    {STRING region, INTEGER4 males, INTEGER4 females, INTEGER4 total});
  data_euroIE := OUTPUT(_euroIE, NAMED('choro_euroIE'));
  data_euroIE;
  
  viz_euroIE := Visualizer.Choropleth.EuroIE('euroIE',, 'choro_euroIE', DATASET([{'County', 'region'}, {'Population', 'total'}], Visualizer.KeyValueDef),, DATASET([{'paletteID', 'Greens'}], Visualizer.KeyValueDef));
  viz_euroIE;</programlisting>
  </sect1>
</chapter>
