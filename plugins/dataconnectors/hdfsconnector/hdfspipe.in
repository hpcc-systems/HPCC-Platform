#!/bin/bash

source @HDFSCONFIG@/hdfsconnector.conf 

CLASSPATH=$CLASSPATH:$HADOOP_LOCATION/conf

for f in $HADOOP_LOCATION/*.jar ; do
	CLASSPATH=$CLASSPATH:$f
done

for f in $HADOOP_LOCATION/lib/*.jar ; do
	CLASSPATH=$CLASSPATH:$f
done

export CLASSPATH=$CLASSPATH

PID=$$

idfound=0;
nodeid=0;

for p in $*;
 do
#   echo "[$p]" >> $LOG;
   if [ "$idfound" = "1" ];
   then
        nodeid=$p;
        idfound=0;
   elif [ "$p" = "-nodeid" ];
   then
	idfound=1;
   fi
done;

LOG=/tmp/HPCC-HDFSCONNECTOR.log.$nodeid.$PID

echo "Script starting"		>> $LOG
echo "Running as user: $USER"   >> $LOG
echo "Running mode: $run_mode"  >> $LOG
echo "Incoming params: ${@}"    >> $LOG
echo "nodeid: $nodeid" 		>> $LOG

if [ "$1" = "" ];
then
	echo "Running without input params" >> $LOG
	exit 1;
elif [ $1 = "-mf" ];
then
	/opt/HPCCSystems/bin/hdfsconnector "${@}" 2>> $LOG;
elif [ $1 = "-si" ];
then
	/opt/HPCCSystems/bin/hdfsconnector  "${@}" 2>> $LOG;
elif [ $1 = "-so" ];
then

	HPCCTMPFILE=/tmp/HPCCTMPFILE_$nodeid;
	if [ -f $HPCCTMPFILE ]
	then
		rm "$HPCCTMPFILE" 			2>> $LOG
		echo "deleted tmp file" 		>> $LOG
	else
		echo "$HPCCTMPFILE does not exist" 	>> $LOG
	fi

	echo "redirecting stdin to tmp file ... " 	>> $LOG
	cat /dev/stdin > "$HPCCTMPFILE"

	ls -l "$HPCCTMPFILE" 				>> $LOG

	echo "calling hdfsconnector..." 		>> $LOG

	/opt/HPCCSystems/bin/hdfsconnector "${@}" -pipepath $HPCCTMPFILE  	2>> $LOG

	echo "write exited with: $?" 			>> $LOG
elif [ $1 = "-sop" ];
then
	pipepath=/tmp/HPCCPIPE_$nodeid;
	mkfifo $pipepath 2> /tmp/HPCC-FIFO.err.$PID;
	chmod 666 $pipepath 2> /tmp/HPCC-FIFO.err.$PID;

	echo "mkfifo $pipepath setup ..." 		>> $LOG

	if test ! -s "/tmp/HPCC-FIFO.err.$PID"
	then
		rm -f /tmp/HPCC-FIFO.err.$PID 2> /dev/null
	else
		echo "  WARNING (hdfsconnector mkfifo) error registered in file: /tmp/HPCC-FIFO.err.$PID " >> $LOG
	fi
	/opt/HPCCSystems/bin/hdfsconnector  "${@}" -pipepath $pipepath	2>> $LOG &
	echo "redirecting stdin to named pipe ... " 	>> $LOG
	cat < /dev/stdin > "$pipepath"			2>> $LOG

	echo "write exited with: $?" 			>> $LOG

else
	echo "Error: check your params." 		>> $LOG;
	exit 1;
fi

exit 0;
