/*##############################################################################

    HPCC SYSTEMS software Copyright (C) 2020 HPCC SystemsÂ® .

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
############################################################################## */

/* Proxy plugin definition for (EE only) data library */

export DataLib := SERVICE:plugin('data'),fold
  string261 AddressClean(const string address1, const string address2)  : c, pure, entrypoint='dataAddressClean', hole;
  string120 CompanyClean(const string scr)  : c, pure, entrypoint='dataCompanyClean', hole;
  string    DeDouble(const string scr)  : c, pure, entrypoint='dataDeDouble';
  unsigned4 DoNamesMatch(const string le_f, const string le_m, const string le_l,
                      const string ri_f,const string ri_m,const string ri_l, unsigned4 thresh)  : c, pure, entrypoint='dataDoNamesMatch', hole;
  unsigned4 DoNamesMatchNew(const string le_f, const string le_m, const string le_l,
                      const string ri_f,const string ri_m,const string ri_l, unsigned4 thresh, boolean useNew)  : c, pure, entrypoint='dataDoNamesMatchNew', hole;
  string1   Gender(const string name) : c, pure, entrypoint='dataGender', hole;
  unsigned4 LeadMatch(const string src, const string search)  : c, pure, entrypoint='dataLeadMatch', hole;
  string142 NameClean(const string scr)  : c, pure, entrypoint='dataNameClean', hole;
  unsigned4 NameMatch(const string le_f, const string le_m, const string le_l,
                      const string ri_f,const string ri_m,const string ri_l)  : c, pure, entrypoint='dataNameMatch', hole;
  unsigned4 NameMatchNew(const string le_f, const string le_m, const string le_l,
                      const string ri_f,const string ri_m,const string ri_l, boolean useNew, boolean useStrict = false)  : c, pure, entrypoint='dataNameMatchNew', hole;
  unsigned4 NameSimilar(const string le, const string ri,boolean blanks)  : c, pure, entrypoint='dataNameSimilar', hole;
  unsigned4 PositionalMatch(const string src, const string search)  : c, pure, entrypoint='dataPositionalMatch', hole;
  string    PreferredFirst(const string scr)  : c, pure, entrypoint='dataPreferredFirst';
  string    PreferredFirstNew(const string scr, boolean useNew)  : c, pure, entrypoint='dataPreferredFirstNew';
  unsigned4 SlidingMatch(const string src, const string arg)  : c, pure, entrypoint='dataSlidingMatch', hole;
  unsigned4 StringFind(const string scr, const string search, unsigned4 instance)  : c, pure, entrypoint='dataStringFind', hole;
  unsigned4 StringSimilar100(const string le, const string ri)  : c, pure, entrypoint='dataStringSimilar', hole;
  string    StringReplaceSmaller(const string scr, const string search, const string replace)  : c, pure, entrypoint='dataStringReplaceSmaller';
  unsigned4 StrCompare(const string str1, const string str2)  : c, pure, entrypoint='datastrCompare', hole;
END;
