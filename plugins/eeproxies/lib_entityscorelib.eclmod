/*##############################################################################

    HPCC SYSTEMS software Copyright (C) 2020 HPCC SystemsÂ® .

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
############################################################################## */

/* Proxy plugin definition for (EE only) entityscore library */

export TextSearchDataRecord := record varunicode indexWord; varunicode searchContext; end;
export TextSearchResultRecord := record integer4 score; varunicode matchContext; end;
export EntityScoreLib := SERVICE : plugin('entityscore'), time
  integer4 AddressCompare(unicode streetOrFull1, unicode city1, unicode state1, unicode pcode1, unicode country1, unicode streetOrFull2, unicode city2, unicode state2, unicode pcode2, unicode country2) : c, pure, entrypoint='ESL_AddressCompare';
  integer4 AddressIndexWordCompare(unicode word1, unicode word2) : c, pure, entrypoint='ESL_AddressIndexWordCompare';
  integer4 CountryCompare(unicode country1, unicode country2) : c, pure, entrypoint='ESL_CountryCompare';
  integer4 CountryIndexWordCompare(unicode word1, unicode word2) : c, pure, entrypoint='ESL_CountryIndexWordCompare';
  integer4 IDCompare(unicode id1, unicode id2) : c, pure, entrypoint='ESL_IDCompare';
  integer4 NameCompare(unsigned4 entityType1, unicode lastOrFull1, unicode first1, unicode middle1, unsigned4 entityType2, unicode lastOrFull2, unicode first2, unicode middle2, boolean initials) : c, pure, entrypoint='ESL_NameCompare';
  integer4 NameIndexWordCompare(unicode word1, unicode word2) : c, pure, entrypoint='ESL_NameIndexWordCompare';
  integer4 PhoneCompare(unicode phone1, unicode phone2) : c, pure, entrypoint='ESL_PhoneCompare';
  dataset(TextSearchResultRecord) TextCountryCompare(unicode text, unicode country) : c, pure, entrypoint='ESL_TextCountryCompare';
  dataset(TextSearchResultRecord) TextNameCompare(unicode text, unsigned4 entityType, unicode lastOrFull, unicode first, unicode middle, boolean initials) : c, pure, entrypoint='ESL_TextNameCompare';
  dataset(TextSearchDataRecord) TextSearchData(unicode text, unsigned4 contextLen) : c, pure, entrypoint='ESL_TextSearchData';
  boolean IsAddressPartial(unicode streetOrFull, unicode city, unicode state, unicode pcode, unicode country) : c, pure, entrypoint='ESL_IsAddressPartial';
  boolean IsAddressCommonWord(unicode word) : c, pure, entrypoint='ESL_IsAddressCommonWord';
  boolean IsCountryCommonWord(unicode word) : c, pure, entrypoint='ESL_IsCountryCommonWord';
  boolean IsDirectionCommonWord(unicode word) : c, pure, entrypoint='ESL_IsDirectionCommonWord';
  boolean IsIndividualCommonWord(unicode word) : c, pure, entrypoint='ESL_IsIndividualCommonWord';
  boolean IsOrganizationCommonWord(unicode word) : c, pure, entrypoint='ESL_IsOrganizationCommonWord';
END;
