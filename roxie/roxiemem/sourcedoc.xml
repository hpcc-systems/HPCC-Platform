<?xml version="1.0" encoding="utf-8"?>
<!--
################################################################################
#    Copyright (C) 2011 HPCC Systems.
#
#    All rights reserved. This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################
-->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section>
    <title>roxie/roxiemem</title>

    <para>
        The roxie/roxiemem directory contains the sources for the roxie/roxiemem library. This is used by roxie
        and eclagent (and possibly in the future Thor) to allocate memory for ECL data rows. Note that it is NOT used
        for allocation of other objects used in queries.
    </para>

    <para>
        The roxiemem memory manager's design goals were:
        <orderedlist>
            <listitem><para>
                Allow the memory used by a single query, or by all queries combined, to be limited, with graceful recovery.
            </para></listitem>
            <listitem><para>
                Allow all the memory used by a query to be guaranteed to get freed when the query finishes, thus reducing the
                possibility of memory leaks.
            </para></listitem>
            <listitem><para>
                Support link-counted rows without having to copy serialized data from slaves.
            </para></listitem>
            <listitem><para>
                Predictable behaviour with no pathogenic cases.
            </para></listitem>
            <listitem><para>
                Be as fast as possible on allocate and deallocate of small rows.
            </para></listitem>
        </orderedlist>
    </para>
    <para>
        Note that efficient usage of memory does not appear on that list - the expectation when the memory
        manager was first designed was that Roxie queries would use minimal amounts of memory and speed was
        more important.
    </para>
    <para>
        In order to extend roxiemem to support Thor usage too, some changes are needed to these design goals:
        <orderedlist>
            <listitem><para>
                As thor is not executing multiple queries in the same process space, the per-query limiting is
                not useful.
            </para></listitem>
            <listitem><para>
                Thor cares a lot more than Roxie about efficient use of memory as well as pure speed of allocation.
            </para></listitem>
            <listitem><para>
                Thor typically needs to spill and continue when row memory exceeds available, rather than failing the query.
                For this to work it needs to be able to tell when memory is running out.
            </para></listitem>
        </orderedlist>
    </para>
    <para>
       RoxieMem uses a chunking allocation paradigm to avoid any possibility of fragmentation (which helps keep the behaviour
       predictable). The patterns of allocation are reasonably well known (and we can use information from the ECL compiler
       to tell us more - for example - the sizes of record that are going to be allocated by a query). Where variable-size
       rows are in use this is less predictable though we still know the pattern of sizes used for expanding.
    </para>
</section>
