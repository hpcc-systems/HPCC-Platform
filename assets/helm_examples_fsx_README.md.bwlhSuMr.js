import{_ as e,a,o as t,ag as n}from"./chunks/framework.Do1Zayaf.js";const u=JSON.parse('{"title":"HPCC FSx for Lustre Storage","description":"","frontmatter":{},"headers":[],"relativePath":"helm/examples/fsx/README.md","filePath":"helm/examples/fsx/README.md","lastUpdated":1761843274000}'),i={name:"helm/examples/fsx/README.md"};function l(o,s,p,r,c,h){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="hpcc-fsx-for-lustre-storage" tabindex="-1">HPCC FSx for Lustre Storage <a class="header-anchor" href="#hpcc-fsx-for-lustre-storage" aria-label="Permalink to &quot;HPCC FSx for Lustre Storage&quot;">​</a></h1><p>AWS FSx for Lustre is a cloud storage service that offers high-performance storage that can scale up to millions of IOPS. It is used for HPC (high performance computing) workloads where speed matters, such as machine learning, video rendering, or genome analysis.</p><h1 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h1><h2 id="aws-cli-version" tabindex="-1">AWS CLI Version <a class="header-anchor" href="#aws-cli-version" aria-label="Permalink to &quot;AWS CLI Version&quot;">​</a></h2><p>Verify that you are using version 2.12.3 or later of the AWS CLI.<br> Run the following command to check the version:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aws --version | cut -d / -f2 | cut -d &#39; &#39; -f1</span></span></code></pre></div><p>If your version is less than 2.12.3 or if you have not installed AWS CLI, go to <a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html" target="_blank" rel="noreferrer">https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html</a> for AWS&#39;s documentation on installing or updating AWS CLI.</p><h2 id="eksctl-version" tabindex="-1">eksctl Version <a class="header-anchor" href="#eksctl-version" aria-label="Permalink to &quot;eksctl Version&quot;">​</a></h2><p>Verify that you are using version 0.153.0 or later of the eksctl command line tool.<br> Run the following command to check the version:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eksctl version</span></span></code></pre></div><p>If your version is less than 0.153.0 or if you have not installed eksctl, go to <a href="https://github.com/eksctl-io/eksctl/blob/main/README.md#installation" target="_blank" rel="noreferrer">https://github.com/eksctl-io/eksctl/blob/main/README.md#installation</a> on Github for installing and updating eksctl.</p><h2 id="kubectl-version" tabindex="-1">kubectl Version <a class="header-anchor" href="#kubectl-version" aria-label="Permalink to &quot;kubectl Version&quot;">​</a></h2><p>Your kubectl version must be within one minor version difference with your EKS cluster version. For example, a 1.26.X kubectl version works with 1.25, 1.26, and 1.27 EKS cluster versions.<br> Run the following command to check the version:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl version --client</span></span></code></pre></div><p>If it is not installed or if you want to update it to a later version, go to <a href="https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html" target="_blank" rel="noreferrer">https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html</a> for AWS&#39;s documentation on installing or updating kubectl.<br> Another option is to keep the kubectl version the same while changing the version of your EKS cluster to ensure that they are one minor version difference within each other.</p><h1 id="prepare-environment" tabindex="-1">Prepare Environment <a class="header-anchor" href="#prepare-environment" aria-label="Permalink to &quot;Prepare Environment&quot;">​</a></h1><p>Fill in the following information in the fsx-env file</p><div class="language-code vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">code</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ACCOUNT_ID        # AWS Account ID</span></span>
<span class="line"><span>EKS_NAME          # Name of your EKS cluster: kubectl config get-clusters  (The first part of the name before &quot;.&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BRANCH_VERSION    # Branch version of the fsx csi driver, such as 0.10 or 1.0. To view versions: https://github.com/kubernetes-sigs/aws-fsx-csi-driver/branches/active. It is recommended to use the latest released version.</span></span>
<span class="line"><span>SUBNET_ID         # Subnet ID for your FSx file system</span></span>
<span class="line"><span>SG_ID             # Comma separated list of security group IDs to be attached. You may use the EKS cluster security group</span></span>
<span class="line"><span></span></span>
<span class="line"><span>EKS_REGION        # Region of your EKS cluster, such as us-east-1</span></span></code></pre></div><h1 id="install-the-fsx-csi-driver" tabindex="-1">Install the FSx CSI Driver <a class="header-anchor" href="#install-the-fsx-csi-driver" aria-label="Permalink to &quot;Install the FSx CSI Driver&quot;">​</a></h1><p>&quot;examples/fsx&quot; requires the FSx CSI driver to be installed. We provide a script to simplify the process. For details please reference <a href="https://docs.aws.amazon.com/eks/latest/userguide/fsx-csi.html." target="_blank" rel="noreferrer">https://docs.aws.amazon.com/eks/latest/userguide/fsx-csi.html.</a><br> Run the following command under the fsx directory:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">./install-fsx-csi-driver.sh</span></span></code></pre></div><p>The script configures the IAM roles and policies with the service account, installs the aws-fsx-csi-driver, and creates the file for the &quot;aws-fsx-auto&quot; storage class.<br> To verify</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm ls -n kube-system</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME              	NAMESPACE  	REVISION	UPDATED                             	STATUS  	CHART                   	APP VERSION</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aws-fsx-csi-driver	kube-system	1       	2023-08-22 10:07:40.503648 -0400 EDT	deployed	aws-fsx-csi-driver-1.7.0	1.0.0</span></span></code></pre></div><h1 id="apply-aws-fsx-auto-storage-class" tabindex="-1">Apply aws-fsx-auto Storage Class <a class="header-anchor" href="#apply-aws-fsx-auto-storage-class" aria-label="Permalink to &quot;Apply aws-fsx-auto Storage Class&quot;">​</a></h1><p>The storageclass.yaml file is generated after running the script. It creates the &quot;aws-fsx-auto&quot; storage class, which is used to dynamically provision the FSx file systems.</p><div class="language-code vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">code</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>kind: StorageClass</span></span>
<span class="line"><span>apiVersion: storage.k8s.io/v1</span></span>
<span class="line"><span>metadata:</span></span>
<span class="line"><span>  name: aws-fsx-auto</span></span>
<span class="line"><span>provisioner: fsx.csi.aws.com</span></span>
<span class="line"><span>parameters:</span></span>
<span class="line"><span>  subnetId: &lt;SUBNET_ID&gt;</span></span>
<span class="line"><span>  securityGroupIds: &lt;SG_ID&gt;</span></span>
<span class="line"><span>  #deploymentType: PERSISTENT_1 # optional</span></span>
<span class="line"><span>  #kmsKeyId: # optional</span></span>
<span class="line"><span>  #storageType: HDD # optional</span></span>
<span class="line"><span>  #perUnitStorageThroughput: &quot;200&quot; # optional</span></span>
<span class="line"><span>  #driveCacheType: &quot;NONE&quot; # optional</span></span>
<span class="line"><span>  #automaticBackupRetentionDays: &quot;1&quot; # optional</span></span>
<span class="line"><span>  #dailyAutomaticBackupStartTime: &quot;00:00&quot; # optional</span></span>
<span class="line"><span>  #copyTagsToBackups: &quot;true&quot; # optional</span></span>
<span class="line"><span>  #dataCompressionType: &quot;NONE&quot; # optional</span></span>
<span class="line"><span>  #weeklyMaintenanceStartTime: &quot;7:09:00&quot; # optional</span></span>
<span class="line"><span>  #fileSystemTypeVersion: &quot;2.12&quot; # optional</span></span>
<span class="line"><span>  #extraTags: &quot;Tag1=Value1,Tag2=Value2&quot; # optional</span></span>
<span class="line"><span>#mountOptions: # optional</span></span>
<span class="line"><span>  #- flock # optional</span></span></code></pre></div><p>There are many optional parameters for the FSx file system. We simply provide the minimum necessary: subnetId and securityGroupIds. Modify the other parameters based on your needs. For more details, reference the following:</p><ul><li><a href="https://github.com/kubernetes-sigs/aws-fsx-csi-driver/tree/master/examples/kubernetes/dynamic_provisioning#edit-storageclass" target="_blank" rel="noreferrer">https://github.com/kubernetes-sigs/aws-fsx-csi-driver/tree/master/examples/kubernetes/dynamic_provisioning#edit-storageclass</a></li><li><a href="https://docs.aws.amazon.com/fsx/latest/APIReference/API_LustreFileSystemConfiguration.html" target="_blank" rel="noreferrer">https://docs.aws.amazon.com/fsx/latest/APIReference/API_LustreFileSystemConfiguration.html</a></li></ul><p>When the storageclass.yaml is ready, run the following command under the fsx directory:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl apply -f storageclass.yaml</span></span></code></pre></div><p>To verify</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl get sc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME            PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aws-fsx-auto    fsx.csi.aws.com         Delete          Immediate              false                  23h</span></span></code></pre></div><h1 id="static-storage-within-kubernetes-with-values-retained-fsx-yaml" tabindex="-1">Static storage within Kubernetes with values-retained-fsx.yaml <a class="header-anchor" href="#static-storage-within-kubernetes-with-values-retained-fsx-yaml" aria-label="Permalink to &quot;Static storage within Kubernetes with values-retained-fsx.yaml&quot;">​</a></h1><p>We will use the hpcc-fsx-dynamic-pv helm chart to create storage that lives on the Kubernetes cluster level. The PVs are dynamically generated, but the PVCs are manually created by the helm chart. The creation of the PVCs will also create the FSx file systems by using the &quot;aws-fsx-auto&quot; storage class. Since the PVCs persist after the HPCC cluster is deleted, the storage can be reused across different HPCC clusters. However, it cannot be reused across different Kubernetes clusters.<br><br> The storage needs to be created before starting the HPCC cluster. Under the helm directory, run the following command:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm install awsstorage examples/fsx/hpcc-fsx-dynamic-pv</span></span></code></pre></div><p>To verify</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl get pvc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME                                 STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dali-awsstorage-hpcc-fsx-pvc         Pending                                      aws-fsx-auto   24s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data-awsstorage-hpcc-fsx-pvc         Pending                                      aws-fsx-auto   24s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dll-awsstorage-hpcc-fsx-pvc          Pending                                      aws-fsx-auto   24s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mydropzone-awsstorage-hpcc-fsx-pvc   Pending                                      aws-fsx-auto   24s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sasha-awsstorage-hpcc-fsx-pvc        Pending                                      aws-fsx-auto   24s</span></span></code></pre></div><p>The PVCs will become bound after the FSx file systems are finished creating. You may also check this in the AWS console. It will take around 5-10 minutes.<br> To verify</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl get pvc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME                                 STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dali-awsstorage-hpcc-fsx-pvc         Bound    pvc-be5c0ca2-478d-498a-88d5-a194a852b0bf   1200Gi     RWO            aws-fsx-auto   7m9s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data-awsstorage-hpcc-fsx-pvc         Bound    pvc-faff5ad2-5be8-4a8b-965a-2f2e9aceb5e8   1200Gi     RWX            aws-fsx-auto   7m9s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dll-awsstorage-hpcc-fsx-pvc          Bound    pvc-7f955252-603f-4e39-a173-708512a413a4   1200Gi     RWX            aws-fsx-auto   7m9s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mydropzone-awsstorage-hpcc-fsx-pvc   Bound    pvc-f48fc70a-f30d-4c78-bfd7-0c2f53934759   1200Gi     RWX            aws-fsx-auto   7m9s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sasha-awsstorage-hpcc-fsx-pvc        Bound    pvc-7826f8b5-c7c8-4975-b08b-2b9d79140c71   1200Gi     RWX            aws-fsx-auto   7m9s</span></span></code></pre></div><p>Once the FSx file systems are available, navigate to examples/fsx and run the following command:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl apply -f permission-pods.yaml</span></span></code></pre></div><p>This creates five pods: one for each PVC. They will mount to each FSx file system in order to change its permissions.<br> To verify</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl get pods</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NAME                     READY   STATUS    RESTARTS   AGE</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dali-permissions         1/1     Running   0          48s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data-permissions         1/1     Running   0          47s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dll-permissions          1/1     Running   0          48s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mydropzone-permissions   1/1     Running   0          47s</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sasha-permissions        1/1     Running   0          47s</span></span></code></pre></div><p>You may now delete the pods. Run the following command:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kubectl delete -f permission-pods.yaml</span></span></code></pre></div><p>Navigate to the helm directory. To start the HPCC cluster, run</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>helm install myhpcc ./hpcc --set global.image.version=latest -f examples/fsx/values-retained-fsx.yaml</span></span></code></pre></div><p>To cleanup, run</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm uninstall myhpcc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm uninstall awsstorage</span></span></code></pre></div>`,49)]))}const g=e(i,[["render",l]]);export{u as __pageData,g as default};
