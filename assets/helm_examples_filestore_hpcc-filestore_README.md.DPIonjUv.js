import{_ as s,a,o as t,ag as i}from"./chunks/framework.Do1Zayaf.js";const u=JSON.parse('{"title":"HPCC FileStore storage","description":"","frontmatter":{},"headers":[],"relativePath":"helm/examples/filestore/hpcc-filestore/README.md","filePath":"helm/examples/filestore/hpcc-filestore/README.md","lastUpdated":1761843274000}'),n={name:"helm/examples/filestore/hpcc-filestore/README.md"};function l(r,e,o,p,c,h){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="hpcc-filestore-storage" tabindex="-1">HPCC FileStore storage <a class="header-anchor" href="#hpcc-filestore-storage" aria-label="Permalink to &quot;HPCC FileStore storage&quot;">​</a></h1><h2 id="directory-contents" tabindex="-1">Directory contents <a class="header-anchor" href="#directory-contents" aria-label="Permalink to &quot;Directory contents&quot;">​</a></h2><h3 id="filestore-instance" tabindex="-1">FileStore Instance <a class="header-anchor" href="#filestore-instance" aria-label="Permalink to &quot;FileStore Instance&quot;">​</a></h3><p>Filestore instances are fully managed NFS file servers on Google Cloud for use with applications running on Compute Engine virtual machines (VMs) instances or Google Kubernetes Engine clusters. You can find more information here: <a href="https://cloud.google.com/filestore/docs" target="_blank" rel="noreferrer">https://cloud.google.com/filestore/docs</a></p><p>To create a Filestore instance: <a href="https://cloud.google.com/filestore/docs/creating-instances" target="_blank" rel="noreferrer">https://cloud.google.com/filestore/docs/creating-instances</a> If possible create a Filestore instance in the same zone</p><p>Example of creating a Filestore instance</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">gcloud filestore instances create -q filestore1 \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --project=&lt;GCP Project ID&gt; \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --zone=us-east1-b \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --tier=STANDARD \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --network=name=default \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --file-share=name=&quot;hpccdata&quot;,capacity=1TB</span></span></code></pre></div><p>You will need instance ip and file-share name (hpccdata) for further configuration</p><h3 id="hpcc-filestore" tabindex="-1">hpcc-filestore/ <a class="header-anchor" href="#hpcc-filestore" aria-label="Permalink to &quot;hpcc-filestore/&quot;">​</a></h3><p>A NFS client provisioner is required to create a storage class and bypass NFS permission related issue. We pick nfs-subdir-external-provisioner: <a href="https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/" target="_blank" rel="noreferrer">https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/</a></p><p>&quot;nfs-subdir-external-provisioner&quot; chart will be installed first. It can either be manually installed with following steps</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd hpcc-filestore</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm dependency update</span></span></code></pre></div><p>or installed via the provided setup.sh</p><p>The hpcc-filestore helm chart creates a Storage Class and Persistent Volume Claim for each of the required HPCC storage types.</p><p>Example use:</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm install gcpstorage hpcc-filestore/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">helm install myhpcc hpcc/ --set global.image.version=latest -f examples/file/values-filestore.yaml</span></span></code></pre></div><h3 id="values-filestore-yaml" tabindex="-1">values-filestore.yaml <a class="header-anchor" href="#values-filestore-yaml" aria-label="Permalink to &quot;values-filestore.yaml&quot;">​</a></h3><p>An example values file to be supplied when installing the HPCC chart. NB: Either use the output auto-generated when installing the &quot;hpcc-filestore&quot; helm chart, or ensure the names in your values files for the storage types match the PVC names created.</p>`,18)]))}const g=s(n,[["render",l]]);export{u as __pageData,g as default};
