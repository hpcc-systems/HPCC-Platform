import{_ as i,a,o as e,ag as t}from"./chunks/framework.Do1Zayaf.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"esp/src/test-ui/tests/framework/SetupForDev.md","filePath":"esp/src/test-ui/tests/framework/SetupForDev.md","lastUpdated":1761843274000}'),n={name:"esp/src/test-ui/tests/framework/SetupForDev.md"};function l(o,s,h,r,p,d){return e(),a("div",null,s[0]||(s[0]=[t(`<p>This documentation provides a comprehensive guide to setting up an Ubuntu VM on Oracle VirtualBox, installing the HPCC-Platform, and preparing the environment for testing and development.</p><h4 id="setting-up-an-ubuntu-vm-on-oracle-virtualbox" tabindex="-1">Setting Up an Ubuntu VM on Oracle VirtualBox <a class="header-anchor" href="#setting-up-an-ubuntu-vm-on-oracle-virtualbox" aria-label="Permalink to &quot;Setting Up an Ubuntu VM on Oracle VirtualBox&quot;">​</a></h4><p><strong>Overview of the installation process on a Windows machine:</strong></p><ol><li><p><strong>Download and install Oracle VirtualBox:</strong></p><ul><li>Visit the Oracle VirtualBox <a href="https://www.virtualbox.org/" target="_blank" rel="noreferrer">website</a> and download the latest version for Windows.</li><li>Follow the installation instructions to install VirtualBox on your system.</li></ul></li><li><p><strong>Download the Ubuntu 22.04 Desktop ISO file:</strong></p><ul><li>Go to the Ubuntu <a href="https://ubuntu.com/download/desktop" target="_blank" rel="noreferrer">downloads page</a> and download the Ubuntu 22.04 LTS ISO file.</li></ul></li><li><p><strong>Set up a new VM in VirtualBox:</strong></p><ul><li>Open VirtualBox and click on <code>New</code> to create a new virtual machine.</li><li>Name the VM and select the type and version (Linux, Ubuntu 64-bit).</li><li>Configure system settings such as memory size and hard disk (create a virtual hard disk now).</li><li>Assign multiple CPUs to your VM if your host machine has a multi-core processor. A good starting point is to allocate 2-4 CPUs to the VM.</li><li>Allocate memory based on the number of CPUs assigned. A good rule of thumb is to assign at least 1 GB of RAM per CPU. If you allocate 2 CPUs, assign at least 2 GB of RAM. For 4 CPUs, assign at least 4 GB of RAM, and so on. Depending on the tasks you&#39;ll be performing on the VM, you might need to allocate more memory.</li><li>Link the ISO file by going to the <code>Settings</code> of the VM, navigating to <code>Storage</code>, and attaching the ISO file to the optical drive.</li><li>Boot the VM and follow the installation wizard to complete the Ubuntu setup.</li></ul></li></ol><h4 id="installing-hpcc-platform-on-the-vm" tabindex="-1">Installing HPCC-Platform on the VM <a class="header-anchor" href="#installing-hpcc-platform-on-the-vm" aria-label="Permalink to &quot;Installing HPCC-Platform on the VM&quot;">​</a></h4><p><strong>After successfully installing the VM, proceed with installing the HPCC-Platform:</strong></p><ol><li><p><strong>Download the HPCC-Platform package:</strong></p><p>Use the below command in your VM terminal to download the latest release:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release}</span></span></code></pre></div><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.hpccsystems.com/releases/CE-Candidate-9.8.x/bin/platform/hpccsystems-platform-community_9.8.x-1jammy_amd64_withsymbols.deb</span></span></code></pre></div></li><li><p><strong>Install the package:</strong></p><p>Use the below command in your VM terminal to install the version you downloaded above:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> that</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> downloaded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> above}</span></span></code></pre></div><p>For example:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpccsystems-platform-community_9.8.x-1jammy_amd64_withsymbols.deb</span></span></code></pre></div></li><li><p><strong>Fix missing dependencies:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div></li><li><p><strong>Check if the installation is successful:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hpccsystems-pl&#39;</span></span></code></pre></div></li><li><p><strong>Start HPCC-Platform:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/init.d/hpcc-init</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div></li><li><p><strong>Verify access to ECL Watch:</strong></p><ul><li>Open a browser on your local machine and go to <code>http://{ip_of_your_vm}:8010/</code> to check if you can access ECL Watch.</li></ul></li></ol><h4 id="cloning-and-checking-out-the-hpcc-platform-repository-on-vm" tabindex="-1">Cloning and Checking Out the HPCC-Platform Repository on VM <a class="header-anchor" href="#cloning-and-checking-out-the-hpcc-platform-repository-on-vm" aria-label="Permalink to &quot;Cloning and Checking Out the HPCC-Platform Repository on VM&quot;">​</a></h4><ol><li><p><strong>Clone the HPCC-Platform GitHub repository:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/hpcc-systems/HPCC-Platform.git</span></span></code></pre></div></li><li><p><strong>Navigate to the repository directory:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HPCC-Platform</span></span></code></pre></div></li><li><p><strong>Check out the specific version of HPCC-Platform:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> candidate-9.8.x</span></span></code></pre></div></li></ol><h4 id="running-regression-test-setup" tabindex="-1">Running Regression Test Setup <a class="header-anchor" href="#running-regression-test-setup" aria-label="Permalink to &quot;Running Regression Test Setup&quot;">​</a></h4><p><strong>Navigate to the testing directory and set up regression tests:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing/regress</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./ecl-test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --preAbort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/opt/HPCCSystems/bin/smoketest-preabort.sh&#39;</span></span></code></pre></div><h4 id="running-spray-tests" tabindex="-1">Running Spray Tests <a class="header-anchor" href="#running-spray-tests" aria-label="Permalink to &quot;Running Spray Tests&quot;">​</a></h4><p><strong>Execute the spray tests:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./ecl-test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> query</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --preAbort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/HPCCSystems/bin/smoketest-preabort.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --excludeclass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python2,embedded-r,embedded-js,3rdpartyservice,mongodb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">spray</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre></div><h4 id="generating-json-files" tabindex="-1">Generating JSON Files <a class="header-anchor" href="#generating-json-files" aria-label="Permalink to &quot;Generating JSON Files&quot;">​</a></h4><p><strong>Generate JSON files for workunits, files, and DFU workunits:</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:8010/WsWorkunits/WUQuery.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json.tool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> workunits.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:8010/WsDfu/DFUQuery.json?PageSize=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json.tool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost:8010/FileSpray/GetDFUWorkunits.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json.tool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dfu-workunits.json</span></span></code></pre></div><h4 id="transferring-files-using-winscp" tabindex="-1">Transferring Files Using WinSCP <a class="header-anchor" href="#transferring-files-using-winscp" aria-label="Permalink to &quot;Transferring Files Using WinSCP&quot;">​</a></h4><p>Find your json files in the VM and use the WinSCP tool to transfer files from the VM to your local machine.</p><h4 id="downloading-dependencies" tabindex="-1">Downloading Dependencies <a class="header-anchor" href="#downloading-dependencies" aria-label="Permalink to &quot;Downloading Dependencies&quot;">​</a></h4><ol><li><strong>Download the following dependencies:</strong><ul><li><a href="https://repo1.maven.org/maven2/org/testng/testng/7.7.1/testng-7.7.1.jar" target="_blank" rel="noreferrer">TestNG 7.7.1</a></li><li><a href="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.17.0/jackson-annotations-2.17.0.jar" target="_blank" rel="noreferrer">Jackson Annotations 2.17.0</a></li><li><a href="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.17.0/jackson-core-2.17.0.jar" target="_blank" rel="noreferrer">Jackson Core 2.17.0</a></li><li><a href="https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.17.0/jackson-databind-2.17.0.jar" target="_blank" rel="noreferrer">Jackson Databind 2.17.0</a></li><li><a href="https://repo1.maven.org/maven2/com/beust/jcommander/1.82/jcommander-1.82.jar" target="_blank" rel="noreferrer">JCommander 1.82</a></li><li><a href="https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.22.0/selenium-java-4.22.0.zip" target="_blank" rel="noreferrer">Selenium Java 4.22.0</a></li><li><a href="https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar" target="_blank" rel="noreferrer">SLF4J API 1.7.30</a></li><li><a href="https://repo1.maven.org/maven2/org/slf4j/slf4j-simple/1.7.30/slf4j-simple-1.7.30.jar" target="_blank" rel="noreferrer">SLF4J Simple 1.7.30</a></li></ul></li></ol><h4 id="adding-dependencies-to-your-java-code" tabindex="-1">Adding Dependencies to Your Java Code <a class="header-anchor" href="#adding-dependencies-to-your-java-code" aria-label="Permalink to &quot;Adding Dependencies to Your Java Code&quot;">​</a></h4><ol><li>Include the downloaded dependencies in your Java project.</li><li>Specify the path to your ChromeDriver when creating a <code>ChromeDriver</code> object in your code.</li></ol><h4 id="writing-test-cases-for-ecl-watch" tabindex="-1">Writing Test Cases for ECL Watch <a class="header-anchor" href="#writing-test-cases-for-ecl-watch" aria-label="Permalink to &quot;Writing Test Cases for ECL Watch&quot;">​</a></h4><p>You are now ready to start writing your test cases for ECL Watch running at <code>http://{ip_of_your_vm}:8010/</code>.</p><h4 id="uninstall-hpcc-platform-on-vm" tabindex="-1">Uninstall HPCC-Platform on VM <a class="header-anchor" href="#uninstall-hpcc-platform-on-vm" aria-label="Permalink to &quot;Uninstall HPCC-Platform on VM&quot;">​</a></h4><p>Use below commands</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/HPCCSystems/sbin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./complete-uninstall.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div>`,29)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
