import{_ as a,a as s,o as n,ag as t}from"./chunks/framework.Do1Zayaf.js";const u=JSON.parse('{"title":"Overview","description":"","frontmatter":{},"headers":[],"relativePath":"initfiles/examples/EsdlExample/JavaPlugin/README.md","filePath":"initfiles/examples/EsdlExample/JavaPlugin/README.md","lastUpdated":1761843274000}'),i={name:"initfiles/examples/EsdlExample/JavaPlugin/README.md"};function o(l,e,p,c,r,d){return n(),s("div",null,e[0]||(e[0]=[t(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    HPCC SYSTEMS software Copyright (C) 2022 HPCC Systems®.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></span>
<span class="line"><span>    you may not use this file except in compliance with the License.</span></span>
<span class="line"><span>    You may obtain a copy of the License at</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      http://www.apache.org/licenses/LICENSE-2.0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Unless required by applicable law or agreed to in writing, software</span></span>
<span class="line"><span>    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></span>
<span class="line"><span>    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span>
<span class="line"><span>    See the License for the specific language governing permissions and</span></span>
<span class="line"><span>    limitations under the License.</span></span></code></pre></div><h1 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h1><p>This example shows how to create a Java plugin implementation for an ESDL service.</p><p>These instructions were written and tested on a bare-metal deployment. Though the example may work in VM, containerized or cloud-based deployments, specific instructions for those variations aren&#39;t covered here.</p><h1 id="environment-setup" tabindex="-1">Environment Setup <a class="header-anchor" href="#environment-setup" aria-label="Permalink to &quot;Environment Setup&quot;">​</a></h1><p>This example requires some prior setup of your HPCC Systems deployment. It assumes you&#39;re running the stock installed configuration from <code>/etc/HPCCSystems/environment.xml</code> on a single machine with shell access.</p><h2 id="dynamicesdl" tabindex="-1">DynamicESDL <a class="header-anchor" href="#dynamicesdl" aria-label="Permalink to &quot;DynamicESDL&quot;">​</a></h2><p>You must have configured at least one DynamicESDL ESP Service in this environment, either through configmgr or by editing environment.xml. The instance can be bound on port 0, or on the same port as where you&#39;re planning to run your service, or both. The purpose of the instance is to provide the configuration needed for your service. If there&#39;s an instance configured on the same port, that instance&#39;s configuration will be used, otherwise the configuration of the instance on port 0 will be used. This document assumes you&#39;re planning to bind your service to esp process &quot;myesp&quot; and port 8088.</p><h1 id="java-example" tabindex="-1">Java Example <a class="header-anchor" href="#java-example" aria-label="Permalink to &quot;Java Example&quot;">​</a></h1><p>Make a copy of the <code>/opt/HPCCSystems/examples/EsdlExample</code> folder onto the host that will run the example. Change to the newly copied <code>EsdlExmple/JavaPlugin</code> folder and run the following commands:</p><ol><li>Generate java base class <code>EsdlExampleServiceBase.java</code> and dummy implementation file</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>esdl java esdl_example.esdl EsdlExample</span></span></code></pre></div><ol start="2"><li>Compile java base classes and example service. You must have sudo access to place the classes in the default HPCC class location.</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo javac -g EsdlExampleServiceBase.java -cp /opt/HPCCSystems/classes -d /opt/HPCCSystems/classes/</span></span>
<span class="line"><span>sudo javac -g EsdlExampleService.java -cp /opt/HPCCSystems/classes -d /opt/HPCCSystems/classes/</span></span></code></pre></div><ol start="3"><li>Publish the esdl defined service to dynamicESDL</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>esdl publish esdl_example.esdl EsdlExample --overwrite</span></span></code></pre></div><ol start="4"><li>Bind java implementation to DynamicESDL</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>esdl bind-service myesp 8088 esdlexample.1 EsdlExample --config java_binding.xml --overwrite</span></span></code></pre></div><ol start="5"><li>Test calling the java service</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>soapplus -url http://.:8088/EsdlExample -i javarequest.xml</span></span></code></pre></div><ol start="6"><li><p>Interact with the service by browsing to <code>http://127.0.0.1:8088</code></p></li><li><p>To debug the java service</p></li></ol><p>Uncomment the jvmoptions line in environment.conf</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jvmoptions=-XX:-UsePerfData -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=2000</span></span></code></pre></div><p>And comment out the original jvmoptions line:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#jvmoptions=-XX:-UsePerfData</span></span></code></pre></div><p>From eclipse for java, create a new debug configuration for remote java application, under connect tab, select your esdl java service project, select standard socket attach connection type, fill in the host and port. The port should match what you&#39;ve specified in the jvmoptions inside environment.conf, which is 2000 in our example above. Click the Debug button and off you go.</p>`,26)]))}const m=a(i,[["render",o]]);export{u as __pageData,m as default};
