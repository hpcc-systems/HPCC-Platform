import{_ as e,a as r,o as a,ag as d}from"./chunks/framework.Do1Zayaf.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"esp/esdllib/docs/deprecatedDecryptString.md","filePath":"esp/esdllib/docs/deprecatedDecryptString.md","lastUpdated":1761843274000}'),n={name:"esp/esdllib/docs/deprecatedDecryptString.md"};function i(p,t,s,c,l,o){return a(),r("div",null,t[0]||(t[0]=[d(`<h4 id="deprecateddecryptstring" tabindex="-1">deprecatedDecryptString <a class="header-anchor" href="#deprecateddecryptstring" aria-label="Permalink to &quot;deprecatedDecryptString&quot;">â€‹</a></h4><pre><code>string deprecatedDecryptString(text)
</code></pre><p>Apply built in decryption to the input character buffer and return the result.</p><p><strong>The encryption algorithm and key are public. This is unsafe and should be avoided if at all possible.</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:center;">Required?</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">text</td><td style="text-align:center;">Y</td><td style="text-align:left;">Encrypted text to be decrypted. May be empty.</td></tr></tbody></table>`,5)]))}const g=e(n,[["render",i]]);export{h as __pageData,g as default};
