import{_ as t,a,o as s,ag as i}from"./chunks/framework.Do1Zayaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"esp/esdllib/docs/tx-summary-value.md","filePath":"esp/esdllib/docs/tx-summary-value.md","lastUpdated":1761843274000}'),l={name:"esp/esdllib/docs/tx-summary-value.md"};function n(r,e,d,o,h,u){return s(),a("div",null,e[0]||(e[0]=[i(`<h3 id="tx-summary-value" tabindex="-1">tx-summary-value <a class="header-anchor" href="#tx-summary-value" aria-label="Permalink to &quot;tx-summary-value&quot;">â€‹</a></h3><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">tx-summary-value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        core_group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Boolean literal&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enumerated text or numeric literal&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enumerated text literal&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text literal&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;XPath evaluable to text&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;enumerated text literal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><p>The transaction summary is a list of significant data points related to a transaction. Upon transaction completion, one or more subsets of this list are converted to text and sent to the ESP&#39;s trace log output. <code>tx-summary-value</code> adds or updates a named value in the summary list with the result of evaluating the <code>value</code> XPath.</p><p>With respect to the summary, this childless operation is concerned only with the creation of summary data. With this in mind, summary data points may be one of two types:</p><ul><li>A <em>scalar</em> data point is a single, one-off, value with no inherent meaning to the ESP. All values created are scalars.</li><li>A <em>timer</em> data point is a single value understood by the ESP to be a number that may be incremented after its insertion. No timer values are created or updated.</li></ul><table tabindex="0"><thead><tr><th style="text-align:left;">Property</th><th style="text-align:center;">Count</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">core_group</td><td style="text-align:center;">0..1</td><td style="text-align:left;">Flag indicating whether the entry should (<em>true</em>) or should not (<em>false</em>) be included in output produced for the core audience. All entries are included in output for the enterprise audience.<br><br>Default when omitted or empty is <em>false</em>.</td></tr><tr><td style="text-align:left;">level</td><td style="text-align:center;">0..1</td><td style="text-align:left;">Minimum ESP log level at which the entry is included in log output. May be <code>min</code> (1), <code>normal</code> (5), <code>max</code> (10), or an integer between 1 and 10.<br><br>Default when omitted or empty is <em>1</em>.</td></tr><tr><td style="text-align:left;">mode</td><td style="text-align:center;">0..1</td><td style="text-align:left;">Choice of how to add the value to trace output. May be <code>append</code> (add a new scalar value to the end of the list) or <code>set</code> (replace an existing scalar value or add a new scalar value to the end of the list).<br><br>Default when omiited or empty is <em>append</em>.</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:center;">1..1</td><td style="text-align:left;">Unique value label of the form <code>text ( &#39;.&#39; text )*</code>, where no <code>text</code> component may be empty.<br><br>The dotted name notation has special meaning in JSON formatted summary output. Each name segment preceding a dot represents the name of a JSON object nested within the summary object; multiple such segments result in multiple levels of embedded objects.</td></tr><tr><td style="text-align:left;">select</td><td style="text-align:center;">1..1</td><td style="text-align:left;">XPath expression that evaluates to the scalar value to be recorded.</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:center;">0..1</td><td style="text-align:left;">Choice of how to interpret the evaluated <code>select</code> expression. May be <em>text</em> if the value should be used as-is. May be <em>signed</em> if the value should be handled as a signed integer, up to 64 bits. May be <em>unsigned</em> if the value should be handled as an unsigned integer, up to 64 bits. May be <em>decimal</em> if the value should be handled as a non-integral number.<br><br>Default when omitted or empty is <em>text</em>. The default can handle all numeric values, but numbers will be presented as strings in JSON output. The default must be overridden when JSON output requires typed numeric values.</td></tr></tbody></table><p>Success is not guaranteed. Failure will produce warnings in trace output and script processing will continue. Script authors are responsible for resolving reported warnings. Reasons for failure are:</p><ul><li>Use of a malformed name;</li><li>Appending a scalar with a name in use;</li><li>Setting a scalar with a name in use as a timer.</li></ul>`,8)]))}const c=t(l,[["render",n]]);export{m as __pageData,c as default};
