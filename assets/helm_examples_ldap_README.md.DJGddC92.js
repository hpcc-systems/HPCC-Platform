import{_ as s,a,o as t,ag as i}from"./chunks/framework.Do1Zayaf.js";const k=JSON.parse('{"title":"Containerized HPCC LDAP Support","description":"","frontmatter":{},"headers":[],"relativePath":"helm/examples/ldap/README.md","filePath":"helm/examples/ldap/README.md","lastUpdated":1761843274000}'),n={name:"helm/examples/ldap/README.md"};function l(h,e,r,p,o,d){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="containerized-hpcc-ldap-support" tabindex="-1">Containerized HPCC LDAP Support <a class="header-anchor" href="#containerized-hpcc-ldap-support" aria-label="Permalink to &quot;Containerized HPCC LDAP Support&quot;">​</a></h1><p>These examples demonstrate how to externalize HPCC LDAP Active Directory Security Manager administrator account credentials using Kubernetes and Hashicorp Vault secrets. To use externalized credentials, you should first run the tutorial on setting up Kubernetes secrets and the Hashicorp Vault, which can be found in the README.md file in the &quot;HPCC-Platform/helm/examples/secrets&quot; folder.</p><p>Note that the LDAP Administrator account performs AD directory searches and modifications, and is the only HPCC user that must have Active Directory administrator rights. This account should exist in the configured &quot;systemBasedn&quot; branch of the Active Directory, typically set to cn=Users.</p><p>See &quot;HPCC-Platform/devdoc/DevTestWithLDAP.md&quot; for step-by-step instructions on configuring a deployment with LDAP for development and testing purposes. The &quot;hpcc-values.yaml&quot; file here is for use with those instructions.</p><hr><h2 id="configure-ldap-to-use-externalized-kubernetes-k8s-secrets" tabindex="-1">Configure LDAP to use externalized Kubernetes (k8s) secrets <a class="header-anchor" href="#configure-ldap-to-use-externalized-kubernetes-k8s-secrets" aria-label="Permalink to &quot;Configure LDAP to use externalized Kubernetes (k8s) secrets&quot;">​</a></h2><h3 id="create-the-k8s-secret" tabindex="-1">Create the k8s secret <a class="header-anchor" href="#create-the-k8s-secret" aria-label="Permalink to &quot;Create the k8s secret&quot;">​</a></h3><p>From the CLI, create the LDAP &quot;secret&quot; similar to the following. Make note of the secret name, &quot;admincredssecretname&quot; in this example. The LDAP Administrator &quot;username&quot; and &quot;password&quot; key/values are required; additional properties are allowed but ignored.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admincredssecretname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-literal=username=hpcc_admin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-literal=password=t0pS3cr3tP@ssw0rd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> admincredssecretname</span></span></code></pre></div><p>For more details on how to create secrets, see the &quot;secrets&quot; examples in the &quot;HPCC-Platform/helm/examples/secrets&quot; folder.</p><h3 id="deploy-the-k8s-secret-to-the-eclwatch-container" tabindex="-1">Deploy the k8s secret to the ECLWatch container <a class="header-anchor" href="#deploy-the-k8s-secret-to-the-eclwatch-container" aria-label="Permalink to &quot;Deploy the k8s secret to the ECLWatch container&quot;">​</a></h3><p>Override the HPCC-Platform/helm/hpcc/values.yaml&#39;s &quot;secrets:&quot; category as follows. Create a unique key name used to reference the secret (this will be the mounted file system name of the secret), and set it to the secret value (&quot;admincredssecretname&quot;) that you created above. In this example we give the key the name &quot;admincredsmountname,&quot; and optionally define an additional alternate one &quot;admincredsaltmountname&quot; which could be used with another Active Directory server. Note that the &quot;admincredsmountname&quot; key/value pair already exists as a default in the values.yaml file, and the key is referenced in the component&#39;s ldap.yaml file. You may override these and add additional key/values as needed.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   secrets:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     authn:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       admincredsmountname:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;admincredssecretname&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       #exernalize LDAP Admin creds</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       admincredsaltmountname:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;admincredsaltsecretname&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #exernalize alternate LDAP Admin creds</span></span></code></pre></div><h3 id="enable-ldap-and-reference-the-k8s-secret-key" tabindex="-1">Enable LDAP and reference the k8s secret key <a class="header-anchor" href="#enable-ldap-and-reference-the-k8s-secret-key" aria-label="Permalink to &quot;Enable LDAP and reference the k8s secret key&quot;">​</a></h3><p>In the HPCC-Platform/esp/applications/common/ldap/ldap.yaml file, the &quot;ldapAdminSecretKey&quot; is already set to the key mount name created above. To enable LDAP authentication and to optionally override this value, override the ESP/ECLWatch helm component located in values.yaml as follows.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esp:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eclwatch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  application:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eclwatch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  auth:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ldap:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ldapAddress:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;myldapserver&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ldapAdminSecretKey:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;admincredsaltmountname&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # use alternate secrets creds</span></span></code></pre></div><hr><h2 id="configure-ldap-to-use-externalized-hashicorp-vault-secrets" tabindex="-1">Configure LDAP to use externalized Hashicorp Vault secrets <a class="header-anchor" href="#configure-ldap-to-use-externalized-hashicorp-vault-secrets" aria-label="Permalink to &quot;Configure LDAP to use externalized Hashicorp Vault secrets&quot;">​</a></h2><h3 id="create-the-vault-secret" tabindex="-1">Create the vault secret <a class="header-anchor" href="#create-the-vault-secret" aria-label="Permalink to &quot;Create the vault secret&quot;">​</a></h3><p>From the CLI, create the LDAP vault &quot;secret&quot; similar to the following. Make note of the secret name, &quot;myvaultadmincreds&quot; in this example. The LDAP Administrator &quot;username&quot; and &quot;password&quot; key/values are required; additional properties are allowed but ignored. Make sure the secret name is specified with the &quot;secret/authn/&quot; prefix.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> put</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret/authn/myvaultadmincreds</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username=hpcc_admin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password=t0pS3cr3tP@ssw0rd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret/authn/myvaultadmincreds</span></span></code></pre></div><p>For more details on how to create vault secrets, see the &quot;secrets&quot; examples in the &quot;HPCC-Platform/helm/examples/secrets&quot; folder.</p><h3 id="note-that-the-vault-name-my-authn-vault-was-defined-in-the-secrets-tutorial-in-the-hpcc-platform-helm-examples-secrets-values-secrets-yaml-file-as-follows" tabindex="-1">Note that the vault name, my-authn-vault, was defined in the &quot;secrets&quot; tutorial, in the HPCC-Platform/helm/examples/secrets/values-secrets.yaml file as follows <a class="header-anchor" href="#note-that-the-vault-name-my-authn-vault-was-defined-in-the-secrets-tutorial-in-the-hpcc-platform-helm-examples-secrets-values-secrets-yaml-file-as-follows" aria-label="Permalink to &quot;Note that the vault name, my-authn-vault, was defined in the &quot;secrets&quot; tutorial, in the HPCC-Platform/helm/examples/secrets/values-secrets.yaml file as follows&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vaults:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  authn:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-authn-vault</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #Note the data node in the URL is there for the REST APIs use. The path inside the vault starts after /data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      url:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${env.VAULT_SERVICE_HOST}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${env.VAULT_SERVICE_PORT}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/v1/secret/data/authn/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${secret}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      kind:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kv-v2</span></span></code></pre></div><h3 id="reference-the-secret-key-in-the-ldap-yaml-or-override" tabindex="-1">Reference the secret key in the LDAP yaml or override <a class="header-anchor" href="#reference-the-secret-key-in-the-ldap-yaml-or-override" aria-label="Permalink to &quot;Reference the secret key in the LDAP yaml or override&quot;">​</a></h3><p>The key names &quot;ldapAdminSecretKey&quot; and &quot;ldapAdminVaultId&quot; are used by the LDAP security manager to resolve the secret, and must be spelled exactly as follows.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esp:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eclwatch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  application:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eclwatch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  auth:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ldap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ldap:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ldapAddress:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;myldapserver&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ldapAdminSecretKey:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;myvaultadmincreds&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    ldapAdminVaultId:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;my-authn-vault&quot;</span></span></code></pre></div>`,27)]))}const u=s(n,[["render",l]]);export{k as __pageData,u as default};
