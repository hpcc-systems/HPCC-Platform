import{_ as t,a as n,o as a,ag as d}from"./chunks/framework.Do1Zayaf.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"esp/esdllib/docs/encodeBase64String.md","filePath":"esp/esdllib/docs/encodeBase64String.md","lastUpdated":1761843274000}'),r={name:"esp/esdllib/docs/encodeBase64String.md"};function s(l,e,i,o,c,p){return a(),n("div",null,e[0]||(e[0]=[d(`<h4 id="encodebase64string" tabindex="-1">encodeBase64String <a class="header-anchor" href="#encodebase64string" aria-label="Permalink to &quot;encodeBase64String&quot;">â€‹</a></h4><pre><code>string encodeBase64String(text)
string encodeBase64String(text, includeLineBreaks)
</code></pre><p>Apply the Base64 encoder to an input buffer and return the encoded text.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:center;">Required?</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">text</td><td style="text-align:center;">Y</td><td style="text-align:left;">Character buffer to encoded. May be empty.</td></tr><tr><td style="text-align:left;">includeLineBreaks</td><td style="text-align:center;">N</td><td style="text-align:left;">Boolean indicating whether the encoded output should include line breaks (<em>true</em>) or not (<em>false</em>).<br><br>Default when omitted is <em>false</em>.</td></tr></tbody></table>`,4)]))}const f=t(r,[["render",s]]);export{h as __pageData,f as default};
