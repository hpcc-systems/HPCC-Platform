import{_ as i,a,o as e,ag as t}from"./chunks/framework.Do1Zayaf.js";const c=JSON.parse('{"title":"MongoDB plugin for ECL","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/mongodb/README.md","filePath":"plugins/mongodb/README.md","lastUpdated":1761843274000}'),n={name:"plugins/mongodb/README.md"};function l(p,s,h,d,o,r){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="mongodb-plugin-for-ecl" tabindex="-1">MongoDB plugin for ECL <a class="header-anchor" href="#mongodb-plugin-for-ecl" aria-label="Permalink to &quot;MongoDB plugin for ECL&quot;">​</a></h1><p>The MongoDB plugin allows an ECL user to embed MongoDB function calls into their code and run them on the HPCC Platform. It supports inserting a dataset into a database using <code>insert_many</code>, and can build ECL datasets from MongoDB result documents returned by the <code>find</code>, <code>update</code>, <code>delete</code>, <code>aggregate</code>, and <code>runCommand</code> methods.</p><p>The embedded script passed to the plugin can be used to create complex BSON documents to support almost every MongoDB command.</p><p>Important: Use the same keys that exist in MongoDB when declaring a return type or when creating a BSON document. Otherwise, the plugin will look for a field that may not exist when building the resulting dataset.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>The plugin uses vcpkg and can be installed by creating a separate build directory from the platform and running the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./mongodb-build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DMONGODBEMBED=ON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../HPCC-Platform</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./hpccsystems-plugin-mongodbembed_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.deb</span></span></code></pre></div><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><p><a href="https://www.doxygen.nl/index.html" target="_blank" rel="noreferrer">Doxygen</a> can be used to create HTML documentation for the code (call/caller graphs are also generated if <a href="https://www.graphviz.org/download/" target="_blank" rel="noreferrer">Graphviz dot</a> is installed and on your path).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugins/mongodb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doxygen</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Doxyfile</span></span></code></pre></div><p>Open <code>plugins/mongodb/docs/html/index.html</code> in a browser to view the generated documentation.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>To start using the plugin in ECL code, import the library:</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IMPORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MongoDB;</span></span></code></pre></div><p>Define a function with an <code>EMBED(mongodb ...)</code> statement. Only one MongoDB operation per embed statement is supported (for multiple chained operations use an aggregation pipeline).</p><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><p>To create the URI for the MongoDB connection the ECL user passes the username, password, server name (for clusters) or just the port (for local), plus optional batch size and connection options. The plugin constructs a shared connection instance. Multiple MongoDB clusters (different credentials/options) can be used within the same workunit. Batch size controls the MongoDB cursor fetch size (default 100).</p><table tabindex="0"><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>user</code></td><td>Username with read/write privileges.</td></tr><tr><td><code>password</code></td><td>Password for the above user.</td></tr><tr><td><code>server</code></td><td>Server connection string for MongoDB Atlas (e.g. <code>cluster0.example.mongodb.net</code>).</td></tr><tr><td><code>port</code></td><td>Port number for connecting to a local MongoDB server.</td></tr><tr><td><code>database</code></td><td>Database name (Required).</td></tr><tr><td><code>collection</code></td><td>Collection name (Required).</td></tr><tr><td><code>batchSize</code></td><td>Cursor batch size (default 100).</td></tr><tr><td><code>limit</code></td><td>Limit number of documents returned by <code>find</code> (no default limit).</td></tr><tr><td><code>connectionOptions</code></td><td>Ampersand separated options applied to the connection (one set per workunit).</td></tr></tbody></table><h4 id="connection-options" tabindex="-1">Connection Options <a class="header-anchor" href="#connection-options" aria-label="Permalink to &quot;Connection Options&quot;">​</a></h4><p>Specify additional connection options via the <code>connectionOptions</code> clause in the embed statement using ampersand separators: <code>option0&amp;option1</code>.</p><p>Example:</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getConnection() :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(dbname), collection(collname), batchSize(100), connectionOptions(&#39;ssl=true&amp;connectTimeoutMS=1000&#39;))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>When connecting to a MongoDB Cluster (not a local instance) <code>retryWrites=true</code> and <code>w=majority</code> are already set following MongoDB examples.</p><h4 id="uri-options" tabindex="-1">URI Options <a class="header-anchor" href="#uri-options" aria-label="Permalink to &quot;URI Options&quot;">​</a></h4><p>Timeout and other URI-supported options can be appended to the connection string: <code>&amp;connectTimeoutMS=30000</code>. Multiple options are separated by <code>&amp;</code>. See the <a href="https://www.mongodb.com/docs/v5.2/reference/connection-string/#connection-string-options" target="_blank" rel="noreferrer">Manual</a>.</p><h4 id="connecting-to-a-cluster-vs-local" tabindex="-1">Connecting to a Cluster vs Local <a class="header-anchor" href="#connecting-to-a-cluster-vs-local" aria-label="Permalink to &quot;Connecting to a Cluster vs Local&quot;">​</a></h4><p>Cluster connection:</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getConnection() :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(dbname), collection(collname), batchSize(100))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Local connection (port only):</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getConnection() :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : port(port), database(dbname), collection(collname))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>Function parameters inside the MongoDB script are referenced with a <code>$</code> prefix. <code>$</code> is also used by MongoDB operators, but they do not conflict unless you use a reserved operator name as a parameter.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _id}) getCount(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(dbname), collection(collname), batchSize(100))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({ salary: { $gt: $salary }});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;Limitations&quot;">​</a></h3><p>MongoDB Atlas shared cluster transfer limits (7‑day rolling):</p><ul><li>M0: 10 GB in / 10 GB out</li><li>M2: 20 GB in / 20 GB out</li><li>M5: 50 GB in / 50 GB out</li></ul><p>See the <a href="https://www.mongodb.com/docs/atlas/reference/free-shared-limitations/" target="_blank" rel="noreferrer">Atlas limitations</a>.</p><h3 id="type-conversions" tabindex="-1">Type Conversions <a class="header-anchor" href="#type-conversions" aria-label="Permalink to &quot;Type Conversions&quot;">​</a></h3><table tabindex="0"><thead><tr><th>ECL</th><th>MongoDB</th></tr></thead><tbody><tr><td>BOOLEAN</td><td>b_bool</td></tr><tr><td>REAL</td><td>b_double</td></tr><tr><td>INTEGER</td><td>b_int64</td></tr><tr><td>UINTEGER</td><td>b_int64 (converted)</td></tr><tr><td>UTF8</td><td>b_utf8</td></tr><tr><td>QSTRING/VSTRING/STRING</td><td>b_utf8</td></tr><tr><td>DECIMAL</td><td>b_decimal128</td></tr></tbody></table><table tabindex="0"><thead><tr><th>MongoDB</th><th>ECL</th></tr></thead><tbody><tr><td>b_date</td><td>STRING or INTEGER</td></tr><tr><td>b_regex</td><td><code>{STRING pattern, STRING options}</code></td></tr><tr><td>b_timestamp</td><td><code>{UNSIGNED t, UNSIGNED i}</code></td></tr></tbody></table><p>Unsigned Integers are unsupported in MongoDB and are converted to signed 64-bit integers.</p><p>Regex and timestamp helper record layouts are provided in <code>mongodb.ecllib</code>.</p><h3 id="inserting-documents" tabindex="-1">Inserting Documents <a class="header-anchor" href="#inserting-documents" aria-label="Permalink to &quot;Inserting Documents&quot;">​</a></h3><p><code>insert_one</code> vs <code>insert_many</code> is selected automatically. Passing a dataset triggers <code>insert_many</code>; a single record or scalars triggers <code>insert_one</code>.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mongodb.insertManyResultRecord) insertMany(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layoutEmployee) employees) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	insert({$employees});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insertMany(ds);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insertOne(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	insert({first: $first, last: $last, salary: $salary});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insertOne(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Doe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12345.6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="finding-documents" tabindex="-1">Finding Documents <a class="header-anchor" href="#finding-documents" aria-label="Permalink to &quot;Finding Documents&quot;">​</a></h3><p>Supports <code>find_one</code> and <code>find</code> (many). Optional projection.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary}) findOne() :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find_one({first: &#39;John&#39;, last: &#39;Doe&#39;});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary}) findMany() :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({first: &#39;John&#39;, last: &#39;Doe&#39;});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Projection example:</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary}) findMany(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> include) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	find({first: &#39;John&#39;, last: &#39;Doe&#39;}, {first: $include, last: $include, salary: $include});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="updating-documents" tabindex="-1">Updating Documents <a class="header-anchor" href="#updating-documents" aria-label="Permalink to &quot;Updating Documents&quot;">​</a></h3><p>Returns counts of matched and modified documents. Supports document or pipeline updates.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mongodb.updateResultRecord) updateOne(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> raise) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	update_one({}, {$inc: {salary: $raise}});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mongodb.updateResultRecord) updateMany(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> raise) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	update_many({salary: {$lte: $min}}, {$inc: {salary: $raise}});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="deleting-documents" tabindex="-1">Deleting Documents <a class="header-anchor" href="#deleting-documents" aria-label="Permalink to &quot;Deleting Documents&quot;">​</a></h3><p><code>delete_one</code> and <code>delete_many</code> supported.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({mongodb.deleteResultRecord}) deleteOne(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	delete_one({first:&#39;James&#39;, salary: {$lte: $min}});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({mongodb.deleteResultRecord}) deleteMany(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	delete_many({salary: {$gt: $max}});</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="aggregation-pipelines" tabindex="-1">Aggregation Pipelines <a class="header-anchor" href="#aggregation-pipelines" aria-label="Permalink to &quot;Aggregation Pipelines&quot;">​</a></h3><p>Pass a pipeline array <code>[{...}, ...]</code> to <code>aggregate</code>.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> first</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STRING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salary}) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aggregate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">REAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(coll), batchSize(100))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	aggregate([{$match: {salary: {$gte: $min, $lt: $max}}}, {$sort: {salary: $order}}]);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="runcommand" tabindex="-1">runCommand <a class="header-anchor" href="#runcommand" aria-label="Permalink to &quot;runCommand&quot;">​</a></h3><p>Run database-level commands with <code>runCommand</code> returning operation-specific documents.</p><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(layoutEmployee) findInfo(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BOOLEAN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mybool) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(db), collection(&#39;test1&#39;))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	runCommand({ findAndModify: &#39;test1&#39;, query: {first: &#39;Anne&#39;, last: &#39;Smith&#39;}, remove: $mybool });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="creating-an-index" tabindex="-1">Creating an Index <a class="header-anchor" href="#creating-an-index" aria-label="Permalink to &quot;Creating an Index&quot;">​</a></h3><div class="language-ecl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ecl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">createIndex(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> asc) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(&#39;mydb&#39;), collection(&#39;test2&#39;))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	create_index({ first: $asc, last: $asc });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">createIndex(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INTEGER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> asc, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BOOLEAN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myBool) :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EMBED(mongodb : user(user), password(pwd), server(server), database(&#39;mydb&#39;), collection(&#39;test2&#39;))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	create_index({ first: $asc, last: $asc }, { name: &#39;Person&#39;, unique: $myBool });</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENDEMBED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><p>This README has been consolidated to remove duplicated sections and to escape any placeholder angle brackets where present. All MongoDB examples use single quotes inside ECL to avoid JSON-like double quote conflicts, and no raw HTML tags are present that would confuse the Vue template parser.</p>`,66)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
