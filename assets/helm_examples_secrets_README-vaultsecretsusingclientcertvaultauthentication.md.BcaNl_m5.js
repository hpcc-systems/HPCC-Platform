import{_ as a,a as e,o as t,ag as i}from"./chunks/framework.Do1Zayaf.js";const d=JSON.parse('{"title":"Containerized HPCC Systems Vault Secrets using appRole vault authentication","description":"","frontmatter":{},"headers":[],"relativePath":"helm/examples/secrets/README-vaultsecretsusingclientcertvaultauthentication.md","filePath":"helm/examples/secrets/README-vaultsecretsusingclientcertvaultauthentication.md","lastUpdated":1761843274000}'),l={name:"helm/examples/secrets/README-vaultsecretsusingclientcertvaultauthentication.md"};function n(h,s,p,r,c,o){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="containerized-hpcc-systems-vault-secrets-using-approle-vault-authentication" tabindex="-1">Containerized HPCC Systems Vault Secrets using appRole vault authentication <a class="header-anchor" href="#containerized-hpcc-systems-vault-secrets-using-approle-vault-authentication" aria-label="Permalink to &quot;Containerized HPCC Systems Vault Secrets using appRole vault authentication&quot;">​</a></h1><p>This example demonstrates HPCC use use of Hashicorp Vault secrets using the &quot;TLS certificates auth method&quot;.</p><p>This example assumes you are starting from a linux command shell in the HPCC-Platform/helm directory. From there you will find the example files and this README file in the examples/secrets directory.</p><h2 id="hashicorp-vault-support" tabindex="-1">Hashicorp Vault support: <a class="header-anchor" href="#hashicorp-vault-support" aria-label="Permalink to &quot;Hashicorp Vault support:&quot;">​</a></h2><p>This example uses Hashicorp vault. The following steps can be used to set up a development mode only instance of vault just for the purposes of this example. This makes it easy to test out vault functionality without going through the much more extensive configuration process for a production ready vault installation.</p><h2 id="install-hashicorp-vault-command-line-client-on-your-local-system" tabindex="-1">Install hashicorp vault command line client on your local system: <a class="header-anchor" href="#install-hashicorp-vault-command-line-client-on-your-local-system" aria-label="Permalink to &quot;Install hashicorp vault command line client on your local system:&quot;">​</a></h2><p><a href="https://learn.hashicorp.com/tutorials/vault/getting-started-install" target="_blank" rel="noreferrer">https://learn.hashicorp.com/tutorials/vault/getting-started-install</a></p><hr><h2 id="install-cert-manager" tabindex="-1">Install cert-manager <a class="header-anchor" href="#install-cert-manager" aria-label="Permalink to &quot;Install cert-manager&quot;">​</a></h2><p>Install cert-manager support following the example found at examples/certmanager.</p><p>With the addition of the following step:</p><p>Repeat the root certificate creation process from the cert-manager setup to create the CA secret for the vaultclient issuer.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -newkey</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa:2048</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nodes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -keyout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vaultclientca.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1825</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vaultclientca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/certmanager/ca-req.cfg</span></span></code></pre></div><h2 id="create-a-kubernetes-tls-secret-from-the-generated-signing-root-certificate-and-privatekey" tabindex="-1">Create a Kubernetes TLS secret from the generated signing root certificate and privatekey <a class="header-anchor" href="#create-a-kubernetes-tls-secret-from-the-generated-signing-root-certificate-and-privatekey" aria-label="Permalink to &quot;Create a Kubernetes TLS secret from the generated signing root certificate and privatekey&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc-vaultclient-issuer-key-pair</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cert=vaultclientca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --key=vaultclientca.key</span></span></code></pre></div><h2 id="install-hashicorp-vault-service-in-standalone-mode-with-tls" tabindex="-1">Install hashicorp vault service in standalone mode with tls: <a class="header-anchor" href="#install-hashicorp-vault-service-in-standalone-mode-with-tls" aria-label="Permalink to &quot;Install hashicorp vault service in standalone mode with tls:&quot;">​</a></h2><p>Install vault server with tls support. This is currently outside the scope of this document.</p><h2 id="setting-up-vault" tabindex="-1">Setting up vault <a class="header-anchor" href="#setting-up-vault" aria-label="Permalink to &quot;Setting up vault&quot;">​</a></h2><p>Tell the vault command line application the server location (dev mode is http, default location is https)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VAULT_ADDR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://127.0.0.1:8200</span></span></code></pre></div><p>In a separate terminal window start vault port forwarding.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port-forward</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vault-0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8200:8200</span></span></code></pre></div><p>Login to the vault command line using the vault root token (development mode defaults to &quot;root&quot;):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">toke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>If you don&#39;t provide the token on the command line you will be prompted to input the value and it will be hidden from view.</p><h2 id="configure-vault-tls-cert-auth" tabindex="-1">Configure vault tls cert auth <a class="header-anchor" href="#configure-vault-tls-cert-auth" aria-label="Permalink to &quot;Configure vault tls cert auth&quot;">​</a></h2><p>Enabling appRole auth will allow access the vault via the appRole authentication protocol.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cert</span></span></code></pre></div><p>Setup vault auth policy granting access to the ecl secrets locations we plan to use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> policy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc-ecl-ro</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/hpcc_vault_ecl_policies.hcl</span></span></code></pre></div><p>Setup hpcc-vault-access auth role:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth/cert/certs/hpcc-ecl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    display_name=hpcc-ecl-cert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    policies=hpcc-ecl-ro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    certificate=@vaultclientca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    allowed_common_names=ecl.vaultclient.hpcc.example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ttl=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span></code></pre></div><p>Setup vault auth policy granting access to the eclUser secrets locations we plan to use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> policy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc-ecluser-ro</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/hpcc_vault_ecluser_policies.hcl</span></span></code></pre></div><p>Setup hpcc-vault-access auth role:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth/cert/certs/hpcc-ecluser</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    display_name=hpcc-ecluser-cert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    policies=hpcc-ecluser-ro</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    certificate=@vaultclientca.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    allowed_common_names=ecluser.vaultclient.hpcc.example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ttl=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span></code></pre></div><h2 id="ecluser-category-secrets" tabindex="-1">&#39;eclUser&#39; category secrets <a class="header-anchor" href="#ecluser-category-secrets" aria-label="Permalink to &quot;&#39;eclUser&#39; category secrets&quot;">​</a></h2><p>Create example vault &#39;eclUser&#39; secrets:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> put</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret/eclUser/vault-example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypt.key=@examples/secrets/crypt.key</span></span></code></pre></div><h2 id="ecl-category-secrets" tabindex="-1">&#39;ecl&#39; category secrets <a class="header-anchor" href="#ecl-category-secrets" aria-label="Permalink to &quot;&#39;ecl&#39; category secrets&quot;">​</a></h2><p>Secrets in the &#39;ecl&#39; category are not accessible by ECL code directly and therefore not visible to ECL users. They can be used by internal ECL feartures and commands. For example:</p><h2 id="http-connect-secrets" tabindex="-1">HTTP-CONNECT Secrets: <a class="header-anchor" href="#http-connect-secrets" aria-label="Permalink to &quot;HTTP-CONNECT Secrets:&quot;">​</a></h2><p>This example focuses on ECL secrets to provide HTTP connection strings and credentials for ECL SOAPCALL and HTTPCALL commands.</p><p>These secrets are prefixed with the string &quot;http-connect-&quot; requiring this prefix ensures that HTTPCALL/SOAPCALL only accesses secrets which are intended for this use.</p><p>HTTP-CONNECT secrets consist of a url string and optional additional secrets associated with that URL. Requiring the url to be part of the secret prevents credentials from being easily hijacked via an HTTPCALL to an arbitrary location. Instead the credentials are explicitly associated with the provided url.</p><p>Besides the URL values can currently be set for proxy (trusted for keeping these secrets), username, and password.</p><h2 id="creating-the-http-connect-secrets" tabindex="-1">Creating the HTTP-CONNECT Secrets <a class="header-anchor" href="#creating-the-http-connect-secrets" aria-label="Permalink to &quot;Creating the HTTP-CONNECT Secrets&quot;">​</a></h2><h2 id="create-example-vault-secret" tabindex="-1">Create example vault secret: <a class="header-anchor" href="#create-example-vault-secret" aria-label="Permalink to &quot;Create example vault secret:&quot;">​</a></h2><p>Create example vault &#39;ecl&#39; secrets:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vault</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> put</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret/ecl/http-connect-vaultsecret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> url=@examples/secrets/url-basic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username=@examples/secrets/username</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password=@examples/secrets/password</span></span></code></pre></div><h2 id="installing-the-hpcc-with-the-secrets-added-to-ecl-components" tabindex="-1">Installing the HPCC with the secrets added to ECL components <a class="header-anchor" href="#installing-the-hpcc-with-the-secrets-added-to-ecl-components" aria-label="Permalink to &quot;Installing the HPCC with the secrets added to ECL components&quot;">​</a></h2><p>Install the HPCC helm chart with the secrets just defined added to all components that run ECL.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhpcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/values-secrets-client-cert-auth.yaml</span></span></code></pre></div><p>Use kubectl to check the status of the deployed pods. Wait until all pods are running before continuing.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span></span></code></pre></div><hr><p>If you don&#39;t already have the HPCC client tools installed please install them now:</p><p><a href="https://hpccsystems.com/download#HPCC-Platform" target="_blank" rel="noreferrer">https://hpccsystems.com/download#HPCC-Platform</a></p><h2 id="using-the-created-ecluser-category-secrets-directly-in-ecl-code" tabindex="-1">Using the created &#39;eclUser&#39; category secrets directly in ECL code <a class="header-anchor" href="#using-the-created-ecluser-category-secrets-directly-in-ecl-code" aria-label="Permalink to &quot;Using the created &#39;eclUser&#39; category secrets directly in ECL code&quot;">​</a></h2><p>The following ecl command will run the example ECL file that demonstrates accessing a vault secret directly from ECL code.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ecl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hthor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/crypto_vault_secret.ecl</span></span></code></pre></div><p>The expected result would be:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vault_message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vault_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;For your eyes only&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vault_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="using-the-created-ecl-category-secrets-via-httpcall-from-within-ecl-code" tabindex="-1">Using the created &#39;ecl&#39; category secrets via HTTPCALL from within ECL code <a class="header-anchor" href="#using-the-created-ecl-category-secrets-via-httpcall-from-within-ecl-code" aria-label="Permalink to &quot;Using the created &#39;ecl&#39; category secrets via HTTPCALL from within ECL code&quot;">​</a></h2><p>If you don&#39;t already have the HPCC client tools installed please install them now:</p><p><a href="https://hpccsystems.com/download#HPCC-Platform" target="_blank" rel="noreferrer">https://hpccsystems.com/download#HPCC-Platform</a></p><hr><p>The following ecl command will run the example ECL file that demonstrates an HTTPCALL that uses a vault secret for connection and authentication.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ecl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hthor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/httpcall_vault.ecl</span></span></code></pre></div><p>For each job the expected result would be:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Result 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">authenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">authenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,71)]))}const g=a(l,[["render",n]]);export{d as __pageData,g as default};
