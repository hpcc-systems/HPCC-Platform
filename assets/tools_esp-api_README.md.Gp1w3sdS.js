import{_ as o,a as t,o as s,ag as r}from"./chunks/framework.Do1Zayaf.js";const h=JSON.parse('{"title":"Developer README for ESP API Command Line Tool","description":"","frontmatter":{},"headers":[],"relativePath":"tools/esp-api/README.md","filePath":"tools/esp-api/README.md","lastUpdated":1761843274000}'),a={name:"tools/esp-api/README.md"};function i(n,e,l,d,p,c){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="developer-readme-for-esp-api-command-line-tool" tabindex="-1">Developer README for ESP API Command Line Tool <a class="header-anchor" href="#developer-readme-for-esp-api-command-line-tool" aria-label="Permalink to &quot;Developer README for ESP API Command Line Tool&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>This tool is designed to interact with HPCC ESP services, providing four commands: <code>describe</code>, <code>test</code>, <code>list-services</code>, and <code>list-methods</code>.</p><ul><li><p><strong><code>describe</code>:</strong> Allows users to explore available services, methods, and their request-response structures.</p></li><li><p><strong><code>test</code>:</strong> Enables sending requests in various formats (XML, JSON, or form query strings) to the ESP services.</p></li><li><p><strong><code>list-services</code>:</strong> Invoked by the auto-complete script, this command provides a list of names of all ESP services.</p></li><li><p><strong><code>list-methods</code>:</strong> Invoked by the auto-complete script, this command provides a list of names of all methods within an ESP service.</p></li></ul><h2 id="usage-notes" tabindex="-1">Usage Notes <a class="header-anchor" href="#usage-notes" aria-label="Permalink to &quot;Usage Notes&quot;">​</a></h2><ul><li><p><strong>ESDL Directory Location:</strong> The tool gathers the directory of the ESDL files from an environment configuration variable; gets the install path from jutil library and appends /componentfiles/esdl_files/.</p></li><li><p><strong>Server and Port Defaults:</strong> When using the <code>test</code> command, if the server and port are not specified, the tool defaults to interacting with an ESP instance located at <code>http://127.0.0.1:8010</code>.</p></li></ul><h2 id="ideas-for-expansion" tabindex="-1">Ideas for Expansion <a class="header-anchor" href="#ideas-for-expansion" aria-label="Permalink to &quot;Ideas for Expansion&quot;">​</a></h2><ul><li><p><strong>Custom ESDL Directory Argument:</strong> An additional argument could be introduced to allow users to specify the directory of the ESDL files directly in the command.</p></li><li><p><strong>Template Request Generation:</strong> A feature could be added to generate template XML or JSON requests. This would simplify the process of filling out requests by providing a pre-structured template.</p></li><li><p><strong>Credential Prompts:</strong> The tool could be expanded to prompt for the username and password upon a 401 Unauthorized response.</p></li><li><p><strong>Selective Response Extraction:</strong> Another potential feature is to allow extraction of specific tags from the response using XPath expressions. This would make it easier to parse and analyze responses.</p></li></ul>',8)]))}const u=o(a,[["render",i]]);export{h as __pageData,u as default};
