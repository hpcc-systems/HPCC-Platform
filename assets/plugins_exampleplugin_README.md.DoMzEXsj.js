import{_ as s,a as i,o as e,ag as n}from"./chunks/framework.Do1Zayaf.js";const g=JSON.parse('{"title":"ECL Example Plugin","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/exampleplugin/README.md","filePath":"plugins/exampleplugin/README.md","lastUpdated":1761843274000}'),t={name:"plugins/exampleplugin/README.md"};function l(p,a,h,d,k,r){return e(),i("div",null,a[0]||(a[0]=[n(`<h1 id="ecl-example-plugin" tabindex="-1">ECL Example Plugin <a class="header-anchor" href="#ecl-example-plugin" aria-label="Permalink to &quot;ECL Example Plugin&quot;">​</a></h1><p>This is the ECL plugin to utilize the (add plugin name). It utilizes the (Add related API details).</p><h2 id="installation-and-dependencies" tabindex="-1">Installation and Dependencies <a class="header-anchor" href="#installation-and-dependencies" aria-label="Permalink to &quot;Installation and Dependencies&quot;">​</a></h2><p>To build the &lt;plugin name&gt; plugin with the HPCC-Platform, &lt;dependency&gt; is required.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install \\&lt;dependency\\&gt;</span></span></code></pre></div><p><em>Note:</em> Add notes such as min versions etc.</p><h2 id="getting-started" tabindex="-1">Getting started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting started&quot;">​</a></h2><p>(Add relevant content)</p><h2 id="the-actual-plugin" tabindex="-1">The Actual Plugin <a class="header-anchor" href="#the-actual-plugin" aria-label="Permalink to &quot;The Actual Plugin&quot;">​</a></h2><p>(Add relevant content)</p><p>###Sub Section</p><p>(Add details)</p><p>###An ECL Example</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IMPORT example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin FROM lib_example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IMPORT Wrapper FROM lib_example</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myWrapper :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Wrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;param1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;param2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UNSIGNED4 param3 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example1 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myWrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">func1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param3);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">example2 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> myWrapper.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">func2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MaKEALLlOWeRCASe&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OUTPUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(example1);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OUTPUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(example2);</span></span></code></pre></div><p>Yields the results &#39;8&#39; and &#39;makealllowercase&#39;</p><p>etc etc.</p><h2 id="behaviour-and-implementation-details" tabindex="-1">Behaviour and Implementation Details <a class="header-anchor" href="#behaviour-and-implementation-details" aria-label="Permalink to &quot;Behaviour and Implementation Details&quot;">​</a></h2><p>(Add relevant content)</p>`,18)]))}const o=s(t,[["render",l]]);export{g as __pageData,o as default};
