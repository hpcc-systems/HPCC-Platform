import{_ as i,a,o as n,ag as t}from"./chunks/framework.Do1Zayaf.js";const g=JSON.parse('{"title":"NLP Plugin","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/nlp/README.md","filePath":"plugins/nlp/README.md","lastUpdated":1761843274000}'),l={name:"plugins/nlp/README.md"};function e(h,s,p,k,E,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="nlp-plugin" tabindex="-1">NLP Plugin <a class="header-anchor" href="#nlp-plugin" aria-label="Permalink to &quot;NLP Plugin&quot;">​</a></h1><p>This plugin exposes nlp-engine to ECL. It is a wrapper around VisualText&#39;s nlp-engine:</p><ul><li><a href="https://github.com/VisualText/nlp-engine" target="_blank" rel="noreferrer">NLP-Engine GitHub</a></li><li><a href="https://visualtext.org" target="_blank" rel="noreferrer">VisualText open source software website</a></li></ul><h2 id="installation-and-dependencies" tabindex="-1">Installation and Dependencies <a class="header-anchor" href="#installation-and-dependencies" aria-label="Permalink to &quot;Installation and Dependencies&quot;">​</a></h2><p>The nlp plugin has a dependency on <a href="https://github.com/VisualText/nlp-engine" target="_blank" rel="noreferrer">https://github.com/VisualText/nlp-engine</a> which has been added to the HPCC-Platform repository as a git submodule. To install:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git submodule update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">recursive</span></span></code></pre></div><h2 id="analyzer-functions" tabindex="-1">Analyzer Functions <a class="header-anchor" href="#analyzer-functions" aria-label="Permalink to &quot;Analyzer Functions&quot;">​</a></h2><p>The NLP plugin functions take the analyzer name and text and returns text. One simple way of returning text to be stored in ECL record structures is by using XML. The first time an analyzer is called, it is initialized and subsequent calls to that analyzer will run with the analyzer already in memory.</p><p>It is required that the output in NLP++ be piped to <a href="http://visualtext.org/help/cbuf.htm" target="_blank" rel="noreferrer">cbuff();</a></p><h3 id="analyzetext" tabindex="-1">AnalyzeText <a class="header-anchor" href="#analyzetext" aria-label="Permalink to &quot;AnalyzeText&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STRING </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CONST VARSTRING </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">analyzerName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, CONST VARSTRING </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">textToAnalyze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="unicode-analyzetext" tabindex="-1">Unicode AnalyzeText <a class="header-anchor" href="#unicode-analyzetext" aria-label="Permalink to &quot;Unicode AnalyzeText&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STRING </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnicodeAnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CONST VARSTRING </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">analyzerName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, CONST VARUNICODE </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">textToAnalyze</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="calling-example-analyzers" tabindex="-1">Calling Example Analyzers <a class="header-anchor" href="#calling-example-analyzers" aria-label="Permalink to &quot;Calling Example Analyzers&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IMPORT nlp from lib_nlp; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;The quick brown fox jumped over the lazy boy.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;parse-en-us&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text01);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext01);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text02 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TAI has bought the American Medical Records Processing for more than $130 million dollars.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext02 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;corporate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text02);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext02);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text03 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Right middle lobe consolidation compatible with acute pneumonitis.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext03 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;parse-en-us&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text03);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext03);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text04 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;TAI</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">s stock is up 4% from $58.33 a share to $60.66.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext04 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;corporate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text04);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext04);</span></span></code></pre></div><h3 id="unicode-version" tabindex="-1">Unicode Version <a class="header-anchor" href="#unicode-version" aria-label="Permalink to &quot;Unicode Version&quot;">​</a></h3><p>There is a unicode version of the NLP plugin function:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IMPORT nlp from lib_nlp; </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Sugar Loaf Mountain is Pão de Açúcar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnicodeAnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;parse-en-us&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text01);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext01);</span></span></code></pre></div><h3 id="passing-data" tabindex="-1">Passing Data <a class="header-anchor" href="#passing-data" aria-label="Permalink to &quot;Passing Data&quot;">​</a></h3><p>This example passes data from the NLP Plugin to ECL using XML:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import nlp from lib_nlp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">import Visualizer;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;The quick brown fox jumped over the lazy boy.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsedtext01 :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AnalyzeText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;parse-en-us&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,text01);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parsedtext01);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DATASET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([parsedtext01] ,{string line});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vertice :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RECORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string id :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XMLTEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string label :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XMLTEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;label&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">END;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">edge :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RECORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string source :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XMLTEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;source&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    string target :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> XMLTEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;target&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">END;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vertices :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PARSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, line, vertice, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vertice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_vertices :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vertices, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAMED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;graph_vertice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">edges :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PARSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (p, line, edge, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;edge&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_edges :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(edges, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAMED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;graph_edges&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parsetree :</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Visualizer.Relational.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;graph&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;graph_vertices&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,,,,, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;graph_edges&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,,,,);</span></span></code></pre></div>`,21)]))}const y=i(l,[["render",e]]);export{g as __pageData,y as default};
