import{_ as e,a,o as i,ag as t}from"./chunks/framework.Do1Zayaf.js";const o=JSON.parse('{"title":"Containerized HPCC Systems Secrets","description":"","frontmatter":{},"headers":[],"relativePath":"helm/examples/secrets/README-kubernetessecrets.md","filePath":"helm/examples/secrets/README-kubernetessecrets.md","lastUpdated":1761843274000}'),l={name:"helm/examples/secrets/README-kubernetessecrets.md"};function n(h,s,r,p,c,k){return i(),a("div",null,s[0]||(s[0]=[t(`<h1 id="containerized-hpcc-systems-secrets" tabindex="-1">Containerized HPCC Systems Secrets <a class="header-anchor" href="#containerized-hpcc-systems-secrets" aria-label="Permalink to &quot;Containerized HPCC Systems Secrets&quot;">​</a></h1><p>This example demonstrates HPCC use use of Kubernetes secrets.</p><p>This example assumes you are starting from a linux command shell in the HPCC-Platform/helm directory. From there you will find the example files and this README file in the examples/secrets directory.</p><h2 id="ecluser-category-secrets" tabindex="-1">&#39;eclUser&#39; category secrets <a class="header-anchor" href="#ecluser-category-secrets" aria-label="Permalink to &quot;&#39;eclUser&#39; category secrets&quot;">​</a></h2><p>Create example &#39;eclUser&#39; secret:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k8s-example</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-file=crypt.key=examples/secrets/crypt.key</span></span></code></pre></div><h2 id="ecl-category-secrets" tabindex="-1">&#39;ecl&#39; category secrets <a class="header-anchor" href="#ecl-category-secrets" aria-label="Permalink to &quot;&#39;ecl&#39; category secrets&quot;">​</a></h2><p>Secrets in the &#39;ecl&#39; category are not accessible by ECL code directly and therefore not visible to ECL users. They can be used by internal ECL feartures and commands. For example:</p><h2 id="http-connect-secrets" tabindex="-1">HTTP-CONNECT Secrets: <a class="header-anchor" href="#http-connect-secrets" aria-label="Permalink to &quot;HTTP-CONNECT Secrets:&quot;">​</a></h2><p>This example focuses on ECL secrets to provide HTTP connection strings and credentials for ECL SOAPCALL and HTTPCALL commands.</p><p>These secrets are prefixed with the string &quot;http-connect-&quot; requiring this prefix ensures that HTTPCALL/SOAPCALL only accesses secrets which are intended for this use.</p><p>HTTP-CONNECT secrets consist of a url string and optional additional secrets associated with that URL. Requiring the url to be part of the secret prevents credentials from being easily hijacked via an HTTPCALL to an arbitrary location. Instead the credentials are explicitly associated with the provided url.</p><p>Besides the URL values can currently be set for proxy (trusted for keeping these secrets), username, and password.</p><h2 id="creating-the-http-connect-secrets" tabindex="-1">Creating the HTTP-CONNECT Secrets <a class="header-anchor" href="#creating-the-http-connect-secrets" aria-label="Permalink to &quot;Creating the HTTP-CONNECT Secrets&quot;">​</a></h2><p>Create example kubernetes secret:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> secret</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http-connect-basicsecret</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-file=url=examples/secrets/url-basic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-file=examples/secrets/username</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-file=examples/secrets/password</span></span></code></pre></div><h2 id="installing-the-hpcc-with-the-secrets-added-to-ecl-components" tabindex="-1">Installing the HPCC with the secrets added to ECL components <a class="header-anchor" href="#installing-the-hpcc-with-the-secrets-added-to-ecl-components" aria-label="Permalink to &quot;Installing the HPCC with the secrets added to ECL components&quot;">​</a></h2><p>Install the HPCC helm chart with the secrets just defined added to all components that run ECL.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhpcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hpcc/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global.image.version=latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/values-secrets.yaml</span></span></code></pre></div><p>Use kubectl to check the status of the deployed pods. Wait until all pods are running before continuing.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span></span></code></pre></div><hr><p>If you don&#39;t already have the HPCC client tools installed please install them now:</p><p><a href="https://hpccsystems.com/download#HPCC-Platform" target="_blank" rel="noreferrer">https://hpccsystems.com/download#HPCC-Platform</a></p><h2 id="using-the-created-ecluser-category-secrets-directly-in-ecl-code" tabindex="-1">Using the created &#39;eclUser&#39; category secrets directly in ECL code <a class="header-anchor" href="#using-the-created-ecluser-category-secrets-directly-in-ecl-code" aria-label="Permalink to &quot;Using the created &#39;eclUser&#39; category secrets directly in ECL code&quot;">​</a></h2><p>The following ecl commands will run the three example ECL files on hthor.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ecl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hthor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/crypto_kubernetes_secret.ecl</span></span></code></pre></div><p>The expected result would be:</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;k8s_message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">k8s_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;top secret&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">k8s_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Dataset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="using-the-created-ecl-category-secrets-via-httpcall-from-within-ecl-code" tabindex="-1">Using the created &#39;ecl&#39; category secrets via HTTPCALL from within ECL code <a class="header-anchor" href="#using-the-created-ecl-category-secrets-via-httpcall-from-within-ecl-code" aria-label="Permalink to &quot;Using the created &#39;ecl&#39; category secrets via HTTPCALL from within ECL code&quot;">​</a></h2><p>If you don&#39;t already have the HPCC client tools installed please install them now:</p><p><a href="https://hpccsystems.com/download#HPCC-Platform" target="_blank" rel="noreferrer">https://hpccsystems.com/download#HPCC-Platform</a></p><hr><p>The following ecl commands will run the three example ECL files on hthor.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ecl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hthor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/secrets/httpcall_secret.ecl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">For</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> each</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> job</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expected</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> result</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\`\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xml</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Dataset </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Result 1&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Row</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;&lt;authenticated&gt;true&lt;/authenticated&gt;&lt;/Row&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Dataset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,35)]))}const g=e(l,[["render",n]]);export{o as __pageData,g as default};
