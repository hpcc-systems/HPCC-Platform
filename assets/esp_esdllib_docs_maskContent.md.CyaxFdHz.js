import{_ as t,a as n,o as a,ag as s}from"./chunks/framework.Do1Zayaf.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"esp/esdllib/docs/maskContent.md","filePath":"esp/esdllib/docs/maskContent.md","lastUpdated":1761843274000}'),o={name:"esp/esdllib/docs/maskContent.md"};function i(r,e,d,l,c,p){return a(),n("div",null,e[0]||(e[0]=[s(`<h4 id="maskcontent" tabindex="-1">maskContent <a class="header-anchor" href="#maskcontent" aria-label="Permalink to &quot;maskContent&quot;">â€‹</a></h4><pre><code>string maskContent(content)
string maskContent(content, contentType)
</code></pre><p>Apply the currently configured data masking context to potentially mask substrings of <code>content</code> based on defined rules. The input buffer is assumed to contain contextual clues mapping substrings to be masked to profile rules. Masking only occurs if these clues are located.</p><p>For example, assume the current context defines a clue that a password value can be found between the text strings <code>&lt;Password&gt;</code> and <code>&lt;/Password&gt;</code>. Applying content masking to the buffer <code>...&lt;Password/&gt;my password&lt;/Password&gt;...</code> will mask the substring <code>my password</code>. Applying content masking to the buffer <code>...my password is &quot;my password&quot;...</code> will not mask either <code>my password</code> substring because the required clues are missing.</p><p>Managing selected rules is handled by manipulating the <strong>rule-set</strong> custom profile property. Valid values for the property include &quot;&quot; (the empty string) and other masking profile-defined identifiers that are beyond the scope of this document.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:center;">Required?</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">content</td><td style="text-align:center;">Y</td><td style="text-align:left;">The text input to be searched for embedded values. The buffer may contain any number of embedded values.</td></tr><tr><td style="text-align:left;">contentType</td><td style="text-align:center;">N</td><td style="text-align:left;">A masking profile-defined rule filter. Rules may be assigned a content type identifier. Masking with a content type limits masking to only those rules assigned a matching identifier or assigned no identifier at all.<br>Assume three rules are defined, with one applicable to serialized XML markup and with an <em>xml</em> identifier, one applicable to serialized JSON markup and with a &quot;json&quot; identifier, and one ambiguous with no identifer. A caller that understands, for example, that the text to be searched is serialized XML markup may exclude rules identified as &quot;json&quot; for improved performance.</td></tr></tbody></table>`,6)]))}const f=t(o,[["render",i]]);export{m as __pageData,f as default};
