<?xml version="1.0" encoding="utf-8"?>
<!--
################################################################################
#    Copyright (C) 2011 HPCC Systems.
#
#    All rights reserved. This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################
-->
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<section>
    <title>testing/unittests</title>

    <para>
        The testing/unittests directory contains the sources for the unittests.
    </para>
    <para>
        For internal unit tests, code the CPPUNIT test inside the CPP file that
        declares/uses it and include the library in which they end up in here,
        in unittest.cpp's loadDLLs().
    </para>
    <para>
        For API tests, functionality checks and Test-Driven-Developement, create
        a new cpp file in this directory with the set of tests and include it
        in the CMakeLists.txt.
    </para>
    <para>
        The difference between internal and API tests is that the former tests
        have access to the internal classes, and can change states that other
        classes don't, while the latter is seeing the classes as the rest of
        HPCC does. So, the API tests also serves as documentation on how to
        use the API and to expose API problems.
    </para>
    <para>
        Other binaries that include unit tests, and that ultimatelly should be
        included in this framework, are: datest, daregress, daunittest, eclagent,
        roxie. Test ncbd (which is part of both eclagent and roxie) is already in
        thorhelper.
    </para>
</section>
