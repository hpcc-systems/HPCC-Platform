<Dataset name='Result 1'>
 <Row><Result_1>Str.FilterOut(const string src, const string _within)</Result_1></Row>
</Dataset>
<Dataset name='Result 2'>
 <Row><Result_2>Str.Filter(const string src, const string _within)</Result_2></Row>
</Dataset>
<Dataset name='Result 3'>
 <Row><Result_3>Str.SubstituteIncluded(const string src, const string _within, const string _newchar)</Result_3></Row>
</Dataset>
<Dataset name='Result 4'>
 <Row><Result_4>Str.SubstituteExcluded(const string src, const string _within, const string _newchar)</Result_4></Row>
</Dataset>
<Dataset name='Result 5'>
 <Row><Result_5>StringLib.StringRepad(const string src, unsigned4 size)</Result_5></Row>
</Dataset>
<Dataset name='Result 6'>
 <Row><Result_6>Str.Find(const string src, const string tofind, unsigned4 instance )</Result_6></Row>
</Dataset>
<Dataset name='Result 7'>
 <Row><Result_7>StringLib.EbcdicStringFind(const ebcdic string src, const ebcdic string tofind , unsigned4 instance )</Result_7></Row>
</Dataset>
<Dataset name='Result 8'>
 <Row><Result_8>Str.UnboundedUnsafeFind(const string src, const string tofind )</Result_8></Row>
</Dataset>
<Dataset name='Result 9'>
 <Row><Result_9>StringLib.EbcdicStringUnboundedUnsafeFind(const ebcdic string src, const ebcdic string tofind )</Result_9></Row>
</Dataset>
<Dataset name='Result 10'>
 <Row><Result_10>Str.Extract(const string src, unsigned4 instance)</Result_10></Row>
</Dataset>
<Dataset name='Result 11'>
 <Row><Result_11>StringLib.GetDateYYYYMMDD()</Result_11></Row>
</Dataset>
<Dataset name='Result 12'>
 <Row><Result_12>StringLib.GetBuildInfo()</Result_12></Row>
</Dataset>
<Dataset name='Result 13'>
 <Row><Result_13>StringLib.Data2String(const data src)</Result_13></Row>
</Dataset>
<Dataset name='Result 14'>
 <Row><Result_14>StringLib.String2Data(const string src)</Result_14></Row>
</Dataset>
<Dataset name='Result 15'>
 <Row><Result_15>Str.ToLowerCase(const string src)</Result_15></Row>
</Dataset>
<Dataset name='Result 16'>
 <Row><Result_16>Str.ToUpperCase(const string src)</Result_16></Row>
</Dataset>
<Dataset name='Result 17'>
 <Row><Result_17>Str.ToCapitalCase(const string src)</Result_17></Row>
</Dataset>
<Dataset name='Result 18'>
 <Row><Result_18>Str.CompareIgnoreCase(const string src1, string src2)</Result_18></Row>
</Dataset>
<Dataset name='Result 19'>
 <Row><Result_19>Str.Reverse(const string src)</Result_19></Row>
</Dataset>
<Dataset name='Result 20'>
 <Row><Result_20>Str.FindReplace(const string src, const string stok, const string rtok)</Result_20></Row>
</Dataset>
<Dataset name='Result 21'>
 <Row><Result_21>Str.CleanSpaces(const string src)</Result_21></Row>
</Dataset>
<Dataset name='Result 22'>
 <Row><Result_22>Str.WildMatch(const string src, const string _pattern, boolean _noCase)</Result_22></Row>
</Dataset>
<Dataset name='Result 23'>
 <Row><Result_23>Str.Contains(const string src, const string _pattern, boolean _noCase)</Result_23></Row>
</Dataset>
<Dataset name='Result 24'>
 <Row><Result_24>Str.ExtractMultiple(commastring, bitmap)</Result_24></Row>
</Dataset>
