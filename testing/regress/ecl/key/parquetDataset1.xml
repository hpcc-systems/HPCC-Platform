<Dataset name='ghtorrent_2019_02_04'>
 <Row><actor_login>calbach</actor_login><actor_id>87112</actor_id><comment_id>273585366</comment_id><comment>nit: slightly bothersome that this value is now different from the cohort creation time</comment><repo>workbench</repo><language></language><author_login>dolbeew</author_login><author_id>44115666</author_id><pr_id>59573116</pr_id><c_id>1358455907</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>njohner</actor_login><actor_id>9058655</actor_id><comment_id>194786075</comment_id><comment>done</comment><repo>opengever.core</repo><language>Python</language><author_login>deiferni</author_login><author_id>971629</author_id><pr_id>40421364</pr_id><c_id>1038953673</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>calbach</actor_login><actor_id>87112</actor_id><comment_id>279063421</comment_id><comment>rm</comment><repo>workbench</repo><language></language><author_login>dolbeew</author_login><author_id>44115666</author_id><pr_id>60894156</pr_id><c_id>1375725662</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>michaelvidal24</actor_login><actor_id>34641709</actor_id><comment_id>270884365</comment_id><comment>Should we be catching a generic exception here? Seems like we might cover up some issues that we would want to know about and fix.</comment><repo>Fabric.Identity</repo><language>C#</language><author_login>hckenmiller</author_login><author_id>44348190</author_id><pr_id>59127871</pr_id><c_id>1348009853</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>jasiekmiko</actor_login><actor_id>3470241</actor_id><comment_id>245735843</comment_id><comment>Ah great spot - looks like they can be fully private! :)</comment><repo>beis-mspsds</repo><language></language><author_login>DWRendell</author_login><author_id>7504910</author_id><pr_id>52750526</pr_id><c_id>1258777659</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>eric-wieser</actor_login><actor_id>254520</actor_id><comment_id>239995083</comment_id><comment>This isn&apos;t really the place for this discussion, but - why are we providing a `self` argument to `__array_function__`?</comment><repo>numpy</repo><language>C</language><author_login>eric-wieser</author_login><author_id>254520</author_id><pr_id>49015705</pr_id><c_id>1230985497</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>nizhikov</actor_login><actor_id>799116</actor_id><comment_id>221691876</comment_id><comment>This brace should be on the same line as method declaration.</comment><repo>ignite</repo><language>Java</language><author_login>voropava</author_login><author_id>45748160</author_id><pr_id>44101686</pr_id><c_id>1143627711</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>charris</actor_login><actor_id>26530</actor_id><comment_id>224044200</comment_id><comment>It would be better to write this as\```\with suppress_warnings() as sup:\    sup.filter(RuntimeWarning)\```\to conform to the common usage.</comment><repo>numpy</repo><language>C</language><author_login>eric-wieser</author_login><author_id>254520</author_id><pr_id>47151508</pr_id><c_id>1161331076</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>voropava</actor_login><actor_id>45748160</actor_id><comment_id>254149181</comment_id><comment>Test was flaky so i&apos;ve increased timeout little bit according to new logic to stabilize it.</comment><repo>ignite</repo><language>Java</language><author_login>voropava</author_login><author_id>45748160</author_id><pr_id>34828012</pr_id><c_id>1292939468</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>VJalili</actor_login><actor_id>5584243</actor_id><comment_id>247631818</comment_id><comment>This function raises the following unhandled exception.\`SSLError: HTTPSConnectionPool(host=&apos;localhost&apos;, port=9000): Max retries exceeded with url: /auth/realms/master/.well-known/openid-configuration (Caused by SSLError(SSLError(\&quot;bad handshake: Error</comment><repo>galaxy</repo><language>Python</language><author_login>jmchilton</author_login><author_id>30472</author_id><pr_id>53146815</pr_id><c_id>1264075250</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ShiftyRail</actor_login><actor_id>38017858</actor_id><comment_id>251815367</comment_id><comment>This may cause problems with the guy&apos;s deletion.\Probably better to store a ckey as an indirect reference.</comment><repo>vgstation13</repo><language>DM</language><author_login>PJBot</author_login><author_id>30897510</author_id><pr_id>54453152</pr_id><c_id>1285671891</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>erasche</actor_login><actor_id>461277</actor_id><comment_id>261168791</comment_id><comment>The implementation is bad, reworking it now.</comment><repo>galaxy</repo><language>Python</language><author_login>jmchilton</author_login><author_id>30472</author_id><pr_id>30895704</pr_id><c_id>1319598235</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>DamianX</actor_login><actor_id>3625544</actor_id><comment_id>205956228</comment_id><comment>Lang lebe unser ruhmvoller F&#195;&#188;hrer!</comment><repo>vgstation13</repo><language>DM</language><author_login>PJBot</author_login><author_id>30897510</author_id><pr_id>43159599</pr_id><c_id>1084267535</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>franmolmedo</actor_login><actor_id>2794859</actor_id><comment_id>285394927</comment_id><comment>Memo is not necessary for that task</comment><repo>nocountryforgeeks.github.io</repo><language></language><author_login>carlosjdelgado</author_login><author_id>5811380</author_id><pr_id>62838407</pr_id><c_id>1400208815</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>stian-sandvold</actor_login><actor_id>5944226</actor_id><comment_id>256851279</comment_id><comment>Space in \IN (:attributeTypes )\</comment><repo>dhis2-core</repo><language>Java</language><author_login>larshelge</author_login><author_id>1569030</author_id><pr_id>55613477</pr_id><c_id>1297193099</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ddolovov</actor_login><actor_id>45048208</actor_id><comment_id>205464424</comment_id><comment>dropped</comment><repo>kotlin</repo><language>Java</language><author_login>alexey-tsvetkov</author_login><author_id>35857113</author_id><pr_id>43038226</pr_id><c_id>1082015552</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>punzki</actor_login><actor_id>8371535</actor_id><comment_id>270976464</comment_id><comment>@max-kammerer I&apos;m having trouble getting your point. Maybe you can explain in the form of the lowered for-loop?\\The original `ForLoopsLowering` implementation distinguished between closed/open bounds and [always added the additional `bound &gt; MIN_VAL</comment><repo>kotlin</repo><language>Java</language><author_login>alexey-tsvetkov</author_login><author_id>35857113</author_id><pr_id>57621110</pr_id><c_id>1343374543</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>rajumsys</actor_login><actor_id>10302521</actor_id><comment_id>231868640</comment_id><comment>can&apos;t comment in line 29. a max valid length of email address can be 254. is there any restriction in API?  also `eg.` in `placeholder` seems redundant. placeholder is already an example, no? </comment><repo>2web2ui</repo><language></language><author_login>ewandennis</author_login><author_id>6936561</author_id><pr_id>48757262</pr_id><c_id>1195953512</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>golangcibot</actor_login><actor_id>45806495</actor_id><comment_id>243912628</comment_id><comment>Error return value of `n.Communicator.Start` is not checked (from `errcheck`)</comment><repo>insolar</repo><language>Go</language><author_login>ilyapt</author_login><author_id>31222439</author_id><pr_id>52382321</pr_id><c_id>1250157273</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>rnorth</actor_login><actor_id>207436</actor_id><comment_id>288284383</comment_id><comment>Added for new test</comment><repo>testcontainers-java</repo><language>Java</language><author_login>kiview</author_login><author_id>6325387</author_id><pr_id>63712093</pr_id><c_id>1411202440</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>nosolosw</actor_login><actor_id>2890415</actor_id><comment_id>257164232</comment_id><comment>I thought about that as well. We already look up the symbol declaration in many cases to retrieve the JSDoc; not in all cases, though. It&apos;d be a nice addition, and I wonder if perhaps we should add both (export statement + symbol declaration). Undecided </comment><repo>gutenberg</repo><language>HTML</language><author_login>kidunot89</author_login><author_id>9035374</author_id><pr_id>55616158</pr_id><c_id>1297210819</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>zippy</actor_login><actor_id>282272</actor_id><comment_id>258691019</comment_id><comment>cleaned up.</comment><repo>holochain-rust</repo><language>Rust</language><author_login>lucksus</author_login><author_id>1281159</author_id><pr_id>53853862</pr_id><c_id>1304904575</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>kenchris</actor_login><actor_id>714509</actor_id><comment_id>225437456</comment_id><comment>async loadProject and then use of async/await would make the below easier to read</comment><repo>lit-element</repo><language>TypeScript</language><author_login>sorvell</author_login><author_id>100779</author_id><pr_id>47722229</pr_id><c_id>1168654069</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>VladimirZaets</actor_login><actor_id>6328919</actor_id><comment_id>230748757</comment_id><comment>According to [Magento frontend dev guide](https://devdocs.magento.com/guides/v2.0/frontend-dev-guide/responsive-web-design/rwd_css.html) we haven&apos;t breakpoint on 1640 window width. Please change it to 1440px</comment><repo>magento2</repo><language>PHP</language><author_login>StasKozar</author_login><author_id>33532876</author_id><pr_id>48483061</pr_id><c_id>1181394586</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>TomAugspurger</actor_login><actor_id>1271681</actor_id><comment_id>285745086</comment_id><comment>Added a type, hopefully I got it correct.</comment><repo>pandas</repo><language>Python</language><author_login>meeseeksmachine</author_login><author_id>43760802</author_id><pr_id>62451536</pr_id><c_id>1398183674</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>datapythonista</actor_login><actor_id>10515824</actor_id><comment_id>214513962</comment_id><comment>Two spaces after Series. Use `object` as the Python type instead of objects (like using `list of int` instead of `list of ints`.\\Can you add a description in the line after the type, on what is being returned please?</comment><repo>pandas</repo><language>Python</language><author_login>meeseeksmachine</author_login><author_id>43760802</author_id><pr_id>45027923</pr_id><c_id>1119642077</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>wedamija</actor_login><actor_id>1110502</actor_id><comment_id>246165849</comment_id><comment>What are we going to store in here?</comment><repo>sentry</repo><language>Python</language><author_login>alex-hofsteede</author_login><author_id>294183</author_id><pr_id>52998747</pr_id><c_id>1262936613</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>wedamija</actor_login><actor_id>1110502</actor_id><comment_id>241210102</comment_id><comment>Should we be increasing the amount of time we acquire the lock for? (Maybe we could capture some stats on how long this segment of code is taking and validate that this is actually the cause, and not some other bug with the lock)</comment><repo>sentry</repo><language>Python</language><author_login>alex-hofsteede</author_login><author_id>294183</author_id><pr_id>51531566</pr_id><c_id>1233300591</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>billyvg</actor_login><actor_id>62070</actor_id><comment_id>223467077</comment_id><comment>@HazAT Does this mean our fingerprints weren&apos;t working?</comment><repo>sentry</repo><language>Python</language><author_login>alex-hofsteede</author_login><author_id>294183</author_id><pr_id>47209717</pr_id><c_id>1160199869</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>lynnagara</actor_login><actor_id>415321</actor_id><comment_id>252030444</comment_id><comment>Oh yeah, didn&apos;t realise this has changed - updated</comment><repo>sentry</repo><language>Python</language><author_login>alex-hofsteede</author_login><author_id>294183</author_id><pr_id>54426084</pr_id><c_id>1285233299</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>folex</actor_login><actor_id>417523</actor_id><comment_id>224111362</comment_id><comment>Does that script call itself in a recursive way? Is that ok?</comment><repo>fluence</repo><language>Scala</language><author_login>folex</author_login><author_id>417523</author_id><pr_id>47331899</pr_id><c_id>1162427918</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>brunoabreu</actor_login><actor_id>5073908</actor_id><comment_id>196208357</comment_id><comment>Is this working? I&apos;m surprised. The user `VtexIdclientAutCookie_{account}` has no powers to do anything in masterdata.. @igorframos how is this possible?\\Maybe there is some router magic, as you&apos;re using `Authorization` instead of `Proxy-Authorizati</comment><repo>store-graphql</repo><language>TypeScript</language><author_login>jgfidelis</author_login><author_id>2200549</author_id><pr_id>40945525</pr_id><c_id>1041894245</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>salesfelipe</actor_login><actor_id>31887482</actor_id><comment_id>261711084</comment_id><comment>????</comment><repo>store-graphql</repo><language>TypeScript</language><author_login>jgfidelis</author_login><author_id>2200549</author_id><pr_id>56849026</pr_id><c_id>1319885255</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ChrisJBurns</actor_login><actor_id>45323720</actor_id><comment_id>226331715</comment_id><comment>worth making this private?</comment><repo>company-accounts.api.ch.gov.uk</repo><language></language><author_login>Mathsh</author_login><author_id>44232219</author_id><pr_id>47898561</pr_id><c_id>1171624574</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>chriseth</actor_login><actor_id>5704333</actor_id><comment_id>248080487</comment_id><comment>This looks like it would be VERY VERY bad - it creates a full copy of the assembly. This means we run the optimizer and assembler multiple times and in case it creates any different result, we will get different bytecode here.</comment><repo>solidity</repo><language>C++</language><author_login>ekpyron</author_login><author_id>288105</author_id><pr_id>53197681</pr_id><c_id>1270641509</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ekpyron</actor_login><actor_id>288105</actor_id><comment_id>282426645</comment_id><comment>Do we usually have a space before the ``:`` in range based fors? I think we don&apos;t and since you&apos;re touching those anyways ;-)...</comment><repo>solidity</repo><language>C++</language><author_login>ekpyron</author_login><author_id>288105</author_id><pr_id>62130432</pr_id><c_id>1390354821</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tanx</actor_login><actor_id>410634</actor_id><comment_id>260809052</comment_id><comment>&gt; I don&apos;t find clicking `95% on Lightning` very discoverable.\\I think we agreed to test this and get feedback from users as it&apos;s released. We can always iterate and improve on this later.\\</comment><repo>lightning-app</repo><language>JavaScript</language><author_login>valentinewallace</author_login><author_id>6774431</author_id><pr_id>55608734</pr_id><c_id>1297159780</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>chriseth</actor_login><actor_id>5704333</actor_id><comment_id>207191000</comment_id><comment>exemplary?</comment><repo>solidity</repo><language>C++</language><author_login>ekpyron</author_login><author_id>288105</author_id><pr_id>43098741</pr_id><c_id>1088866753</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>chriseth</actor_login><actor_id>5704333</actor_id><comment_id>254031768</comment_id><comment>Not needed.</comment><repo>solidity</repo><language>C++</language><author_login>ekpyron</author_login><author_id>288105</author_id><pr_id>54947418</pr_id><c_id>1293020672</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>zelitzsi</actor_login><actor_id>4935048</actor_id><comment_id>193549348</comment_id><comment>Yeah, just trying to be cautious since we added a `typeof` check.</comment><repo>shared-components</repo><language></language><author_login>lunxiao</author_login><author_id>36067165</author_id><pr_id>40507722</pr_id><c_id>1033509691</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>moofish32</actor_login><actor_id>1090174</actor_id><comment_id>211346160</comment_id><comment>I would be interested in learning where the JSII experts look to determine this. I have made the time to dig in there yet, but likely I should.</comment><repo>aws-cdk</repo><language>TypeScript</language><author_login>jogold</author_login><author_id>13565377</author_id><pr_id>43799273</pr_id><c_id>1106366104</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>desfero</actor_login><actor_id>6491242</actor_id><comment_id>261955382</comment_id><comment>????</comment><repo>platform-frontend</repo><language></language><author_login>drakkein</author_login><author_id>31193853</author_id><pr_id>56693248</pr_id><c_id>1320215502</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>rix0rrr</actor_login><actor_id>153103</actor_id><comment_id>256292939</comment_id><comment>Interfaces give us more flexibility to make implementation choices, classes lock us into a single-inheritance model that at some point is not going to fit whatever we want to do.\\I know this is wishy-washy, I don&apos;t have a hard example to convince yo</comment><repo>aws-cdk</repo><language>TypeScript</language><author_login>jogold</author_login><author_id>13565377</author_id><pr_id>55163108</pr_id><c_id>1294589643</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>fernandofleury</actor_login><actor_id>1203881</actor_id><comment_id>200098428</comment_id><comment>I&apos;m always one step ahead</comment><repo>circuit-ui</repo><language>JavaScript</language><author_login>afonsodelgado</author_login><author_id>32911760</author_id><pr_id>41873373</pr_id><c_id>1059756985</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>simonhong</actor_login><actor_id>1083827</actor_id><comment_id>288555288</comment_id><comment>AFAIK, rewards service doesn&apos;t work with incognito profile \ and `RewardsServiceFactory::GetForProfile` just return `nullptr` for incognito profile.\When user loading `brave://rewards` page in incognito, it is redirected to normal profile&apos;s window.\</comment><repo>brave-core</repo><language>C++</language><author_login>tmancey</author_login><author_id>13939851</author_id><pr_id>63767891</pr_id><c_id>1411978164</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>elharo</actor_login><actor_id>1417018</actor_id><comment_id>255923508</comment_id><comment>since we care about order (I think) we should probably declare this as ImmutableMultimap</comment><repo>cloud-opensource-java</repo><language>Java</language><author_login>suztomo</author_login><author_id>318863</author_id><pr_id>55153370</pr_id><c_id>1294481883</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>suztomo</actor_login><actor_id>318863</actor_id><comment_id>231308219</comment_id><comment>Added</comment><repo>cloud-opensource-java</repo><language>Java</language><author_login>suztomo</author_login><author_id>318863</author_id><pr_id>49132509</pr_id><c_id>1193635416</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>dougbu</actor_login><actor_id>2796966</actor_id><comment_id>256506047</comment_id><comment>Why bother import an empty file?</comment><repo>AspNetCore</repo><language></language><author_login>pranavkm</author_login><author_id>35152</author_id><pr_id>55395668</pr_id><c_id>1296041596</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ronykoz</actor_login><actor_id>42246955</actor_id><comment_id>279156575</comment_id><comment>If there are default values this will be readable + i prefer you split the `args.get(&apos;project_id&apos;, None)` to not be in the function call but rather for you to assign params for them beforehand and send the params instead.\And then you can do `query(que</comment><repo>content</repo><language>Python</language><author_login>ShahafBenYakir</author_login><author_id>47790735</author_id><pr_id>60801259</pr_id><c_id>1371774510</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>codacy-bot</actor_login><actor_id>16780017</actor_id><comment_id>252720507</comment_id><comment>![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Expected indentation of 8 spaces but found 10. (indent)](https://app.codacy.com/app/axthosarouris/authority-registry/pullRequest?prid=2967582)</comment><repo>authority-registry</repo><language></language><author_login>OBGQLLEV</author_login><author_id>46372289</author_id><pr_id>54366165</pr_id><c_id>1288346777</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>codacy-bot</actor_login><actor_id>16780017</actor_id><comment_id>249431625</comment_id><comment>![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Missing trailing comma. (comma-dangle)](https://app.codacy.com/app/axthosarouris/authority-registry/pullRequest?prid=2871809)</comment><repo>authority-registry</repo><language></language><author_login>OBGQLLEV</author_login><author_id>46372289</author_id><pr_id>53431404</pr_id><c_id>1276523760</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>Aekal</actor_login><actor_id>23811408</actor_id><comment_id>205556497</comment_id><comment>Added</comment><repo>magento2-alpaca-components</repo><language>JavaScript</language><author_login>bartdominiak</author_login><author_id>12346092</author_id><pr_id>42931591</pr_id><c_id>1080104499</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>biopete</actor_login><actor_id>7891032</actor_id><comment_id>212029021</comment_id><comment>Git merge issue</comment><repo>workbench</repo><language></language><author_login>panentheos</author_login><author_id>348420</author_id><pr_id>43250088</pr_id><c_id>1109230380</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>calbach</actor_login><actor_id>87112</actor_id><comment_id>278406406</comment_id><comment>Per offline discussion, I would definitely favor our previous approach over this. I think this convention changes the production code path too significantly to justify saving some test boilerplate. I don&apos;t see a particularly high cost in this PR to justi</comment><repo>workbench</repo><language></language><author_login>panentheos</author_login><author_id>348420</author_id><pr_id>60894156</pr_id><c_id>1373677630</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>AlexanderPrendota</actor_login><actor_id>42528496</actor_id><comment_id>265015890</comment_id><comment>also \\n</comment><repo>kotlin-web-site</repo><language>JavaScript</language><author_login>AlexanderPrendota</author_login><author_id>42528496</author_id><pr_id>57362843</pr_id><c_id>1329753670</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tdeekens</actor_login><actor_id>1038364</actor_id><comment_id>273479933</comment_id><comment>Not sure if I am overly picky with the name again. But given we tend to like the `components={{header, footer}}` pattern. How about going with `styles={ body }` here?</comment><repo>ui-kit</repo><language></language><author_login>montezume</author_login><author_id>5964235</author_id><pr_id>59854069</pr_id><c_id>1358046594</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tdeekens</actor_login><actor_id>1038364</actor_id><comment_id>253875771</comment_id><comment>Nitpick: how is UIKit&apos;s naming convention. Is it `isOpen` in this case maybe?</comment><repo>ui-kit</repo><language></language><author_login>montezume</author_login><author_id>5964235</author_id><pr_id>54699309</pr_id><c_id>1292928716</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>codacy-bot</actor_login><actor_id>16780017</actor_id><comment_id>221529578</comment_id><comment>![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Usage of get on optional type.](https://app.codacy.com/app/graphcool/prisma/pullRequest?prid=2232112)</comment><repo>prisma</repo><language>Scala</language><author_login>ejoebstl</author_login><author_id>10838807</author_id><pr_id>46158474</pr_id><c_id>1151454448</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tdeekens</actor_login><actor_id>1038364</actor_id><comment_id>249284249</comment_id><comment>I think we should use FC. SFC is deprecated in TS.</comment><repo>ui-kit</repo><language></language><author_login>montezume</author_login><author_id>5964235</author_id><pr_id>53815026</pr_id><c_id>1275579036</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tdeekens</actor_login><actor_id>1038364</actor_id><comment_id>246681232</comment_id><comment>A similar classname was built up by convention elsewhere in the file. Doing the same here shortens the `classnames` \&quot;block\&quot;.</comment><repo>ui-kit</repo><language></language><author_login>montezume</author_login><author_id>5964235</author_id><pr_id>53190688</pr_id><c_id>1264773559</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>leggetter</actor_login><actor_id>43527</actor_id><comment_id>233714716</comment_id><comment>```suggestion\title: Number Insights API\```</comment><repo>nexmo-developer</repo><language>JavaScript</language><author_login>benhayehudi</author_login><author_id>9097808</author_id><pr_id>49763343</pr_id><c_id>1203339791</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tbedford</actor_login><actor_id>3140608</actor_id><comment_id>265078172</comment_id><comment>Link looks suspect.</comment><repo>nexmo-developer</repo><language>JavaScript</language><author_login>benhayehudi</author_login><author_id>9097808</author_id><pr_id>57577003</pr_id><c_id>1329927861</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>jurgob</actor_login><actor_id>3746654</actor_id><comment_id>220603173</comment_id><comment>did it in the last commit</comment><repo>nexmo-developer</repo><language>JavaScript</language><author_login>benhayehudi</author_login><author_id>9097808</author_id><pr_id>45496322</pr_id><c_id>1132334844</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>mheap</actor_login><actor_id>123379</actor_id><comment_id>255005543</comment_id><comment>This is still expecting a list</comment><repo>nexmo-developer</repo><language>JavaScript</language><author_login>benhayehudi</author_login><author_id>9097808</author_id><pr_id>54922713</pr_id><c_id>1293095972</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>brittBarak</actor_login><actor_id>11883119</actor_id><comment_id>247159460</comment_id><comment>we made a simple web page. but will hold with it a little. I added the CLI guide link instead.</comment><repo>nexmo-developer</repo><language>JavaScript</language><author_login>benhayehudi</author_login><author_id>9097808</author_id><pr_id>52938472</pr_id><c_id>1265247779</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>damassi</actor_login><actor_id>31245</actor_id><comment_id>264433311</comment_id><comment>Can we add `// TODO&apos;s` around the icons that have been aliased so that there&apos;s a quick reference list?</comment><repo>palette</repo><language></language><author_login>damassi</author_login><author_id>31245</author_id><pr_id>56861542</pr_id><c_id>1328111745</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>dblandin</actor_login><actor_id>63705</actor_id><comment_id>248870240</comment_id><comment>Updated</comment><repo>palette</repo><language></language><author_login>damassi</author_login><author_id>31245</author_id><pr_id>53699177</pr_id><c_id>1273189677</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>cooltey</actor_login><actor_id>2354559</actor_id><comment_id>289492144</comment_id><comment>To reduce `constructors` and to avoid creating new `init()` method, you can see `SwipeableListView.kt` for more example.</comment><repo>apps-android-wikipedia</repo><language>Java</language><author_login>AOYPXJMI</author_login><author_id>1243916</author_id><pr_id>63285545</pr_id><c_id>1414970091</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>millmanorama</actor_login><actor_id>890655</actor_id><comment_id>269471211</comment_id><comment>please cleanup after the merge</comment><repo>autopsy</repo><language>Java</language><author_login>YKMXQUJG</author_login><author_id>31810882</author_id><pr_id>58539291</pr_id><c_id>1342013177</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>Kh4L</actor_login><actor_id>2807229</actor_id><comment_id>254763590</comment_id><comment>Done</comment><repo>DALI</repo><language>C++</language><author_login>jantonguirao</author_login><author_id>1741623</author_id><pr_id>54237527</pr_id><c_id>1293444916</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>mzient</actor_login><actor_id>11855018</actor_id><comment_id>262927663</comment_id><comment>This function shouldn&apos;t be inline - it has loads of static data and is DLL-exported. I believe we might run into lots of trouble sooner than later with that. By the way - why do we need to have a factory per-device instead of a cache per-device?\</comment><repo>DALI</repo><language>C++</language><author_login>jantonguirao</author_login><author_id>1741623</author_id><pr_id>57152844</pr_id><c_id>1321795386</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>mzient</actor_login><actor_id>11855018</actor_id><comment_id>239542612</comment_id><comment>*Names are important*. DataType sounds like a scalar.\Suggested alternative(s):\```\using InputSet = std::unique_ptr&lt;dali::TensorList&lt;InputBackend&gt;&gt;;\using OutputSet = std::unique_ptr&lt;dali::TensorList&lt;OutputBackend&gt;&gt;;\```\The only problem wit</comment><repo>DALI</repo><language>C++</language><author_login>jantonguirao</author_login><author_id>1741623</author_id><pr_id>50946805</pr_id><c_id>1229457494</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>monopole</actor_login><actor_id>5897910</actor_id><comment_id>255262127</comment_id><comment>//path is the right value here, but it&apos;s not easy to see that.\\Changed the test to check AbsPath(), a public method and more relevant to what actually happens.\</comment><repo>kustomize</repo><language></language><author_login>monopole</author_login><author_id>5897910</author_id><pr_id>55013426</pr_id><c_id>1293522436</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>iansan5653</actor_login><actor_id>6418836</actor_id><comment_id>277012617</comment_id><comment>@isidorn I was able to narrow down the issue to this line. At this point, `colorName` is `terminal.ansiBlack` but `theme.getColor(colorName)` returns `undefined`. This only happens in the test environment; when running in VSCode, the correct color value </comment><repo>vscode</repo><language>TypeScript</language><author_login>alexr00</author_login><author_id>42802769</author_id><pr_id>58912222</pr_id><c_id>1366939389</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>sangaman</actor_login><actor_id>34480028</actor_id><comment_id>217693191</comment_id><comment>Do we want to emit `swap.failed` every time the deal state is updated? If `state` is only used to track the error status, maybe we just rename the field to `errored` and this method to `setError`?</comment><repo>xud</repo><language>JavaScript</language><author_login>sangaman</author_login><author_id>34480028</author_id><pr_id>45646786</pr_id><c_id>1133518700</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>parthaa</actor_login><actor_id>11072</actor_id><comment_id>214469052</comment_id><comment>yeh</comment><repo>katello</repo><language>Ruby</language><author_login>jlsherrill</author_login><author_id>11352</author_id><pr_id>44819164</pr_id><c_id>1117215507</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>jreback</actor_login><actor_id>718011</actor_id><comment_id>196274318</comment_id><comment>can you move to 0.23.2</comment><repo>pandas</repo><language>Python</language><author_login>cbertinato</author_login><author_id>30239773</author_id><pr_id>39258481</pr_id><c_id>1045475124</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>druizz90</actor_login><actor_id>38896846</actor_id><comment_id>287398520</comment_id><comment>Done!</comment><repo>wazuh</repo><language>C</language><author_login>TJOSERAFAEL</author_login><author_id>11090811</author_id><pr_id>62911454</pr_id><c_id>1406534114</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>jreback</actor_login><actor_id>718011</actor_id><comment_id>209903363</comment_id><comment>There is a fixture that need to add CalendarDay, which systematically tests lots of things</comment><repo>pandas</repo><language>Python</language><author_login>cbertinato</author_login><author_id>30239773</author_id><pr_id>43905951</pr_id><c_id>1100552345</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>rianfowler</actor_login><actor_id>9084084</actor_id><comment_id>208398541</comment_id><comment>Kick off an action if there&apos;s a search term on the `formData` that doesn&apos;t match what&apos;s in the current state.</comment><repo>vets-website</repo><language>CSS</language><author_login>rianfowler</author_login><author_id>9084084</author_id><pr_id>43687557</pr_id><c_id>1094287808</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>tomekpapiernik</actor_login><actor_id>36263871</actor_id><comment_id>226970760</comment_id><comment>```suggestion\6. To expose the lambda function outside the cluster create an **Api** custom resource:\```</comment><repo>kyma</repo><language></language><author_login>sayanh</author_login><author_id>3948870</author_id><pr_id>47813131</pr_id><c_id>1175180864</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>chfivet</actor_login><actor_id>10589877</actor_id><comment_id>200058921</comment_id><comment>Oki</comment><repo>OSIS</repo><language>Python</language><author_login>albrugnetti</author_login><author_id>14292361</author_id><pr_id>41640476</pr_id><c_id>1059875267</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>zdevito</actor_login><actor_id>288090</actor_id><comment_id>202763699</comment_id><comment>This one takes at::Tensor so it works for both: In the case of an lvalue the copy constructor of tensor runs, bumping the refcount. The case of an r-value the Tensor&apos;s r-value constructor runs and move the rvalue into this function, keeping the refcount </comment><repo>pytorch</repo><language>Python</language><author_login>xkszltl</author_login><author_id>3234228</author_id><pr_id>42299126</pr_id><c_id>1068400012</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>davidmoore1</actor_login><actor_id>3118888</actor_id><comment_id>261834710</comment_id><comment>I found that I could significantly simplify this class.  It now has a first time variable so that it can set the value of the variable in the caller for the case where no selection is made initially, which is kind of what it was trying to do before with </comment><repo>appbuilder-portal</repo><language></language><author_login>davidmoore1</author_login><author_id>3118888</author_id><pr_id>56851860</pr_id><c_id>1319903330</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>aszecowka</actor_login><actor_id>1372201</actor_id><comment_id>234108983</comment_id><comment>be more specific: which configuration</comment><repo>test-infra</repo><language></language><author_login>Demonsthere</author_login><author_id>8756741</author_id><pr_id>49829964</pr_id><c_id>1204942410</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>nh3</actor_login><actor_id>7614880</actor_id><comment_id>234559161</comment_id><comment>Sure. I was just following [this](https://docs.galaxyproject.org/en/latest/dev/schema.html#tool-inputs-param) which seems to fit the intended usage scenario:\\&gt; As of 17.01, text parameters can also supply a static list of preset defaults options. Th</comment><repo>tools-iuc</repo><language>Python</language><author_login>bgruening</author_login><author_id>683027</author_id><pr_id>48616821</pr_id><c_id>1207750516</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>wgilpin</actor_login><actor_id>4575812</actor_id><comment_id>253276731</comment_id><comment>we can, but it complicated the front end that has logic based on these status. On the database keep it how you like, but the API should just pass the status</comment><repo>recruitment-ascee</repo><language>JavaScript</language><author_login>mcgibbon</author_login><author_id>8061673</author_id><pr_id>54772961</pr_id><c_id>1290623912</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>jrainville</actor_login><actor_id>7788494</actor_id><comment_id>235728742</comment_id><comment>Just curious, that&apos;s just something that might be needed in the future?</comment><repo>embark</repo><language>JavaScript</language><author_login>iurimatias</author_login><author_id>29136</author_id><pr_id>50263230</pr_id><c_id>1212475408</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>PascalPrecht</actor_login><actor_id>49123</actor_id><comment_id>222746781</comment_id><comment>Argh. Good catch! I missed that one</comment><repo>embark</repo><language>JavaScript</language><author_login>iurimatias</author_login><author_id>29136</author_id><pr_id>46885131</pr_id><c_id>1155386253</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>emizzle</actor_login><actor_id>16856918</actor_id><comment_id>200856406</comment_id><comment>use `utils.buildUrl` or `utils.buildUrlFromConfig` here to properly handle when port === false.</comment><repo>embark</repo><language>JavaScript</language><author_login>iurimatias</author_login><author_id>29136</author_id><pr_id>42119849</pr_id><c_id>1064627471</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>ImMorpheus</actor_login><actor_id>33085829</actor_id><comment_id>206992707</comment_id><comment>&gt; You&apos;re potentially changing the passed in block state, and therefor changing vanilla mechanics.\\I hope not, because `iblockstate` and `block` (`Block block = iblockstate.getBlock();`) are used here https://github.com/SpongePowered/SpongeCommon/blo</comment><repo>SpongeCommon</repo><language>Java</language><author_login>Cybermaxke</author_login><author_id>245898</author_id><pr_id>43314795</pr_id><c_id>1088120805</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>andremedeiros</actor_login><actor_id>212597</actor_id><comment_id>279428790</comment_id><comment>Must have been from updating master with a stash.</comment><repo>embark</repo><language>JavaScript</language><author_login>iurimatias</author_login><author_id>29136</author_id><pr_id>61265913</pr_id><c_id>1378631829</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>kadel</actor_login><actor_id>160609</actor_id><comment_id>218175076</comment_id><comment>please add comment explaining that this does and what arguments are</comment><repo>odo</repo><language>Go</language><author_login>mohammedzee1000</author_login><author_id>5825681</author_id><pr_id>45824221</pr_id><c_id>1136426918</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>kashmervil</actor_login><actor_id>1543296</actor_id><comment_id>219234974</comment_id><comment>settings are not likely (if it&apos;s even possible at all) to change during your completion session. so you don&apos; need to calculate and allocate objects each time.\</comment><repo>intellij-community</repo><language>Java</language><author_login>AMPivovarov</author_login><author_id>944772</author_id><pr_id>45767061</pr_id><c_id>1139002999</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>AmirGeorge</actor_login><actor_id>3478047</actor_id><comment_id>281024510</comment_id><comment>Revert this. I know autorest automatically does this change but it breaks things because for some reason, the serializedName below is not actually consumed, so it ends up trying to search for \&quot;domainName\&quot; and not finding it. Same for the changes in the</comment><repo>botbuilder-tools</repo><language>JavaScript</language><author_login>JDFJSIGS</author_login><author_id>36230999</author_id><pr_id>61575314</pr_id><c_id>1382835698</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>asmecher</actor_login><actor_id>49772</actor_id><comment_id>205503341</comment_id><comment>This looks ready to go per the testing, but I&apos;m not sure whether you saw the above comment.</comment><repo>pkp-lib</repo><language>PHP</language><author_login>NateWr</author_login><author_id>720173</author_id><pr_id>41994006</pr_id><c_id>1065617115</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>amaurymartiny</actor_login><actor_id>9282749</actor_id><comment_id>266551400</comment_id><comment>If I understood correctly, this setting is already saved in `electron-settings`. Isn&apos;t saving it in localStorage redundant?</comment><repo>fether</repo><language>JavaScript</language><author_login>ltfschoen</author_login><author_id>3166656</author_id><pr_id>56642670</pr_id><c_id>1332892843</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>Yserz</actor_login><actor_id>320577</actor_id><comment_id>206525031</comment_id><comment>I would like to keep this in order to have the internal error message in case of an error.</comment><repo>wire-webapp</repo><language>CoffeeScript</language><author_login>atomrc</author_login><author_id>6080079</author_id><pr_id>43053476</pr_id><c_id>1086687513</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>James-Burba</actor_login><actor_id>43466494</actor_id><comment_id>261351866</comment_id><comment>At the very least `{!plan.isFree &amp;&amp; &apos; emails&apos;}{!plan.isFree &amp;&amp; planVolume}` can just be `{!plan.isFree &amp;&amp; &apos; emails/month&apos;}`</comment><repo>2web2ui</repo><language></language><author_login>jonambas</author_login><author_id>7287871</author_id><pr_id>56823308</pr_id><c_id>1319705384</c_id><commit_date>2019</commit_date></Row>
 <Row><actor_login>reggieb</actor_login><actor_id>116763</actor_id><comment_id>280692172</comment_id><comment>There needs to be some consistency in how the data files are accessed. In other specs the file has been located relative to `Rails.root`. Here the files directory is being used (which will be problematic if spec is moved).\\Also, I think data files s</comment><repo>laa-apply-for-legal-aid</repo><language>Ruby</language><author_login>Obsiye</author_login><author_id>33642487</author_id><pr_id>61527213</pr_id><c_id>1382350677</c_id><commit_date>2019</commit_date></Row>
</Dataset>
<Dataset name='Result 2'>
 <Row><Result_2>1000000</Result_2></Row>
</Dataset>
