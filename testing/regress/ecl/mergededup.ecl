/*##############################################################################

    HPCC SYSTEMS software Copyright (C) 2012 HPCC Systems.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
############################################################################## */

#option ('spanMultipleCpp', true)

rec := RECORD
    UNSIGNED1 i;
    UNSIGNED1 j;
END;

ds1 := DISTRIBUTED(DATASET([{2, 1}, {8, 1}, {11, 1}, {7, 1}, {7, 1}, {0, 1}, {8, 1}, {6, 1}, {0, 1}, {18, 1}, {10, 1}, {6, 1}, {16, 1}, {5, 1}, {3, 1}, {10, 1}, {24, 1}, {25, 1}, {14, 1}, {22, 1}, {26, 1}, {22, 1}, {28, 1}, {3, 1}, {1, 1}, {3, 1}, {1, 1}, {14, 1}, {27, 1}, {36, 1}, {2, 1}, {28, 1}, {10, 1}, {39, 1}, {13, 1}, {24, 1}, {24, 1}, {5, 1}, {0, 1}, {13, 1}], rec), j);
ds2 := DISTRIBUTED(DATASET([{0, 2}, {3, 2}, {1, 2}, {0, 2}, {8, 2}, {9, 2}, {8, 2}, {14, 2}, {10, 2}, {1, 2}, {7, 2}, {1, 2}, {20, 2}, {11, 2}, {14, 2}, {1, 2}, {22, 2}, {8, 2}, {16, 2}, {3, 2}, {13, 2}, {2, 2}, {9, 2}, {32, 2}, {32, 2}, {26, 2}, {35, 2}, {22, 2}, {24, 2}, {20, 2}, {5, 2}, {11, 2}, {19, 2}, {24, 2}, {32, 2}, {10, 2}, {27, 2}, {29, 2}, {4, 2}, {46, 2}], rec), j);
ds3 := DISTRIBUTED(DATASET([{8, 3}, {5, 3}, {8, 3}, {11, 3}, {1, 3}, {0, 3}, {12, 3}, {5, 3}, {13, 3}, {4, 3}, {2, 3}, {5, 3}, {6, 3}, {12, 3}, {20, 3}, {19, 3}, {5, 3}, {18, 3}, {5, 3}, {18, 3}, {9, 3}, {12, 3}, {15, 3}, {26, 3}, {15, 3}, {18, 3}, {29, 3}, {22, 3}, {24, 3}, {28, 3}, {26, 3}, {6, 3}, {20, 3}, {42, 3}, {15, 3}, {35, 3}, {43, 3}, {11, 3}, {32, 3}, {46, 3}], rec), j);
ds4 := DISTRIBUTED(DATASET([{7, 4}, {7, 4}, {4, 4}, {10, 4}, {11, 4}, {13, 4}, {5, 4}, {15, 4}, {3, 4}, {10, 4}, {14, 4}, {7, 4}, {7, 4}, {16, 4}, {17, 4}, {1, 4}, {13, 4}, {8, 4}, {4, 4}, {25, 4}, {0, 4}, {23, 4}, {18, 4}, {23, 4}, {23, 4}, {27, 4}, {21, 4}, {13, 4}, {35, 4}, {8, 4}, {18, 4}, {1, 4}, {29, 4}, {0, 4}, {1, 4}, {22, 4}, {31, 4}, {37, 4}, {18, 4}, {45, 4}], rec), j);
ds5 := DISTRIBUTED(DATASET([{2, 5}, {10, 5}, {8, 5}, {7, 5}, {10, 5}, {13, 5}, {2, 5}, {14, 5}, {3, 5}, {10, 5}, {19, 5}, {5, 5}, {0, 5}, {11, 5}, {4, 5}, {8, 5}, {12, 5}, {3, 5}, {2, 5}, {15, 5}, {26, 5}, {17, 5}, {25, 5}, {31, 5}, {4, 5}, {27, 5}, {3, 5}, {24, 5}, {23, 5}, {22, 5}, {17, 5}, {6, 5}, {0, 5}, {14, 5}, {40, 5}, {12, 5}, {13, 5}, {31, 5}, {38, 5}, {12, 5}], rec), j);
ds6 := DISTRIBUTED(DATASET([{7, 6}, {5, 6}, {7, 6}, {7, 6}, {10, 6}, {13, 6}, {7, 6}, {6, 6}, {7, 6}, {13, 6}, {5, 6}, {16, 6}, {12, 6}, {19, 6}, {3, 6}, {17, 6}, {19, 6}, {21, 6}, {16, 6}, {15, 6}, {1, 6}, {23, 6}, {31, 6}, {21, 6}, {28, 6}, {3, 6}, {19, 6}, {31, 6}, {35, 6}, {9, 6}, {32, 6}, {19, 6}, {8, 6}, {2, 6}, {22, 6}, {40, 6}, {15, 6}, {24, 6}, {32, 6}, {0, 6}], rec), j);
ds7 := DISTRIBUTED(DATASET([{4, 7}, {3, 7}, {10, 7}, {4, 7}, {2, 7}, {10, 7}, {11, 7}, {7, 7}, {4, 7}, {6, 7}, {19, 7}, {18, 7}, {10, 7}, {11, 7}, {15, 7}, {0, 7}, {22, 7}, {3, 7}, {12, 7}, {11, 7}, {27, 7}, {16, 7}, {8, 7}, {24, 7}, {12, 7}, {1, 7}, {25, 7}, {0, 7}, {32, 7}, {36, 7}, {26, 7}, {34, 7}, {4, 7}, {34, 7}, {6, 7}, {35, 7}, {17, 7}, {3, 7}, {47, 7}, {32, 7}], rec), j);
ds8 := DISTRIBUTED(DATASET([{5, 8}, {7, 8}, {2, 8}, {11, 8}, {6, 8}, {7, 8}, {4, 8}, {8, 8}, {1, 8}, {9, 8}, {5, 8}, {18, 8}, {2, 8}, {13, 8}, {2, 8}, {11, 8}, {0, 8}, {18, 8}, {11, 8}, {15, 8}, {14, 8}, {4, 8}, {18, 8}, {12, 8}, {33, 8}, {20, 8}, {23, 8}, {0, 8}, {24, 8}, {9, 8}, {21, 8}, {30, 8}, {11, 8}, {1, 8}, {24, 8}, {38, 8}, {23, 8}, {30, 8}, {10, 8}, {31, 8}], rec), j);
ds9 := DISTRIBUTED(DATASET([{7, 9}, {8, 9}, {8, 9}, {8, 9}, {6, 9}, {4, 9}, {15, 9}, {3, 9}, {5, 9}, {14, 9}, {0, 9}, {10, 9}, {1, 9}, {16, 9}, {11, 9}, {5, 9}, {11, 9}, {12, 9}, {9, 9}, {6, 9}, {13, 9}, {2, 9}, {6, 9}, {10, 9}, {30, 9}, {2, 9}, {5, 9}, {27, 9}, {17, 9}, {34, 9}, {35, 9}, {14, 9}, {0, 9}, {4, 9}, {23, 9}, {24, 9}, {9, 9}, {9, 9}, {24, 9}, {6, 9}], rec), j);
ds10 := DISTRIBUTED(DATASET([{3, 10}, {4, 10}, {9, 10}, {10, 10}, {7, 10}, {6, 10}, {9, 10}, {16, 10}, {12, 10}, {10, 10}, {18, 10}, {8, 10}, {4, 10}, {19, 10}, {1, 10}, {19, 10}, {1, 10}, {2, 10}, {17, 10}, {23, 10}, {18, 10}, {30, 10}, {26, 10}, {19, 10}, {2, 10}, {2, 10}, {14, 10}, {19, 10}, {3, 10}, {25, 10}, {9, 10}, {4, 10}, {26, 10}, {26, 10}, {11, 10}, {11, 10}, {4, 10}, {15, 10}, {5, 10}, {46, 10}], rec), j);
ds11 := DISTRIBUTED(DATASET([{8, 11}, {3, 11}, {5, 11}, {1, 11}, {0, 11}, {3, 11}, {10, 11}, {6, 11}, {7, 11}, {8, 11}, {17, 11}, {18, 11}, {18, 11}, {13, 11}, {7, 11}, {5, 11}, {19, 11}, {19, 11}, {15, 11}, {25, 11}, {29, 11}, {24, 11}, {17, 11}, {10, 11}, {0, 11}, {23, 11}, {9, 11}, {9, 11}, {30, 11}, {3, 11}, {16, 11}, {10, 11}, {27, 11}, {38, 11}, {9, 11}, {20, 11}, {16, 11}, {16, 11}, {13, 11}, {17, 11}], rec), j);
ds12 := DISTRIBUTED(DATASET([{6, 12}, {6, 12}, {2, 12}, {12, 12}, {11, 12}, {3, 12}, {3, 12}, {13, 12}, {3, 12}, {13, 12}, {16, 12}, {17, 12}, {17, 12}, {6, 12}, {23, 12}, {16, 12}, {18, 12}, {9, 12}, {24, 12}, {2, 12}, {15, 12}, {10, 12}, {22, 12}, {6, 12}, {10, 12}, {32, 12}, {4, 12}, {11, 12}, {22, 12}, {13, 12}, {19, 12}, {30, 12}, {11, 12}, {26, 12}, {5, 12}, {1, 12}, {31, 12}, {20, 12}, {0, 12}, {8, 12}], rec), j);
ds13 := DISTRIBUTED(DATASET([{8, 13}, {7, 13}, {7, 13}, {0, 13}, {0, 13}, {8, 13}, {5, 13}, {9, 13}, {3, 13}, {11, 13}, {10, 13}, {3, 13}, {6, 13}, {22, 13}, {10, 13}, {19, 13}, {11, 13}, {23, 13}, {7, 13}, {27, 13}, {22, 13}, {9, 13}, {16, 13}, {2, 13}, {14, 13}, {15, 13}, {6, 13}, {28, 13}, {31, 13}, {24, 13}, {36, 13}, {18, 13}, {34, 13}, {31, 13}, {42, 13}, {43, 13}, {1, 13}, {8, 13}, {27, 13}, {17, 13}], rec), j);
ds14 := DISTRIBUTED(DATASET([{4, 14}, {2, 14}, {6, 14}, {4, 14}, {8, 14}, {1, 14}, {14, 14}, {8, 14}, {6, 14}, {8, 14}, {11, 14}, {18, 14}, {16, 14}, {0, 14}, {2, 14}, {4, 14}, {9, 14}, {4, 14}, {21, 14}, {2, 14}, {21, 14}, {24, 14}, {22, 14}, {15, 14}, {11, 14}, {29, 14}, {14, 14}, {21, 14}, {14, 14}, {4, 14}, {19, 14}, {23, 14}, {21, 14}, {16, 14}, {10, 14}, {23, 14}, {13, 14}, {33, 14}, {15, 14}, {12, 14}], rec), j);
ds15 := DISTRIBUTED(DATASET([{9, 15}, {7, 15}, {1, 15}, {0, 15}, {10, 15}, {7, 15}, {1, 15}, {6, 15}, {2, 15}, {5, 15}, {15, 15}, {11, 15}, {4, 15}, {6, 15}, {1, 15}, {13, 15}, {8, 15}, {19, 15}, {6, 15}, {27, 15}, {23, 15}, {16, 15}, {13, 15}, {14, 15}, {30, 15}, {15, 15}, {11, 15}, {25, 15}, {28, 15}, {21, 15}, {29, 15}, {26, 15}, {11, 15}, {42, 15}, {24, 15}, {8, 15}, {38, 15}, {30, 15}, {16, 15}, {40, 15}], rec), j);
ds16 := DISTRIBUTED(DATASET([{6, 16}, {0, 16}, {1, 16}, {12, 16}, {10, 16}, {8, 16}, {0, 16}, {2, 16}, {5, 16}, {11, 16}, {14, 16}, {17, 16}, {2, 16}, {19, 16}, {20, 16}, {3, 16}, {4, 16}, {1, 16}, {1, 16}, {11, 16}, {0, 16}, {10, 16}, {1, 16}, {11, 16}, {30, 16}, {10, 16}, {32, 16}, {21, 16}, {19, 16}, {31, 16}, {38, 16}, {29, 16}, {21, 16}, {36, 16}, {21, 16}, {12, 16}, {11, 16}, {15, 16}, {41, 16}, {16, 16}], rec), j);
ds17 := DISTRIBUTED(DATASET([{3, 17}, {1, 17}, {1, 17}, {4, 17}, {13, 17}, {7, 17}, {8, 17}, {14, 17}, {15, 17}, {14, 17}, {16, 17}, {1, 17}, {16, 17}, {5, 17}, {16, 17}, {20, 17}, {5, 17}, {20, 17}, {10, 17}, {0, 17}, {14, 17}, {7, 17}, {0, 17}, {8, 17}, {22, 17}, {15, 17}, {18, 17}, {13, 17}, {20, 17}, {5, 17}, {24, 17}, {24, 17}, {23, 17}, {24, 17}, {11, 17}, {32, 17}, {14, 17}, {20, 17}, {0, 17}, {45, 17}], rec), j);
ds18 := DISTRIBUTED(DATASET([{3, 18}, {4, 18}, {0, 18}, {2, 18}, {0, 18}, {9, 18}, {12, 18}, {2, 18}, {3, 18}, {7, 18}, {2, 18}, {2, 18}, {8, 18}, {11, 18}, {3, 18}, {8, 18}, {22, 18}, {7, 18}, {11, 18}, {16, 18}, {20, 18}, {28, 18}, {28, 18}, {5, 18}, {23, 18}, {28, 18}, {15, 18}, {35, 18}, {34, 18}, {17, 18}, {18, 18}, {10, 18}, {7, 18}, {2, 18}, {36, 18}, {32, 18}, {28, 18}, {22, 18}, {40, 18}, {1, 18}], rec), j);
ds19 := DISTRIBUTED(DATASET([{3, 19}, {9, 19}, {6, 19}, {11, 19}, {7, 19}, {12, 19}, {8, 19}, {7, 19}, {7, 19}, {17, 19}, {1, 19}, {4, 19}, {18, 19}, {14, 19}, {18, 19}, {16, 19}, {21, 19}, {0, 19}, {5, 19}, {19, 19}, {11, 19}, {27, 19}, {25, 19}, {23, 19}, {28, 19}, {7, 19}, {10, 19}, {22, 19}, {17, 19}, {16, 19}, {32, 19}, {16, 19}, {0, 19}, {32, 19}, {14, 19}, {28, 19}, {8, 19}, {19, 19}, {35, 19}, {41, 19}], rec), j);
ds20 := DISTRIBUTED(DATASET([{2, 20}, {3, 20}, {5, 20}, {1, 20}, {1, 20}, {11, 20}, {15, 20}, {8, 20}, {4, 20}, {15, 20}, {8, 20}, {18, 20}, {7, 20}, {9, 20}, {9, 20}, {13, 20}, {17, 20}, {6, 20}, {16, 20}, {15, 20}, {20, 20}, {28, 20}, {21, 20}, {21, 20}, {18, 20}, {2, 20}, {31, 20}, {34, 20}, {6, 20}, {29, 20}, {35, 20}, {17, 20}, {22, 20}, {42, 20}, {29, 20}, {39, 20}, {31, 20}, {20, 20}, {10, 20}, {30, 20}], rec), j);
ds21 := DISTRIBUTED(DATASET([{7, 21}, {0, 21}, {1, 21}, {10, 21}, {3, 21}, {2, 21}, {14, 21}, {0, 21}, {0, 21}, {15, 21}, {13, 21}, {13, 21}, {9, 21}, {1, 21}, {15, 21}, {15, 21}, {13, 21}, {10, 21}, {17, 21}, {6, 21}, {6, 21}, {21, 21}, {21, 21}, {14, 21}, {13, 21}, {24, 21}, {3, 21}, {7, 21}, {2, 21}, {30, 21}, {1, 21}, {19, 21}, {30, 21}, {15, 21}, {24, 21}, {39, 21}, {10, 21}, {41, 21}, {30, 21}, {10, 21}], rec), j);
ds22 := DISTRIBUTED(DATASET([{1, 22}, {0, 22}, {4, 22}, {11, 22}, {8, 22}, {1, 22}, {9, 22}, {7, 22}, {8, 22}, {18, 22}, {0, 22}, {10, 22}, {3, 22}, {16, 22}, {21, 22}, {20, 22}, {12, 22}, {13, 22}, {9, 22}, {28, 22}, {26, 22}, {5, 22}, {16, 22}, {29, 22}, {20, 22}, {13, 22}, {7, 22}, {18, 22}, {14, 22}, {8, 22}, {3, 22}, {29, 22}, {32, 22}, {23, 22}, {42, 22}, {32, 22}, {14, 22}, {16, 22}, {21, 22}, {42, 22}], rec), j);
ds23 := DISTRIBUTED(DATASET([{4, 23}, {8, 23}, {9, 23}, {2, 23}, {0, 23}, {11, 23}, {8, 23}, {0, 23}, {7, 23}, {3, 23}, {5, 23}, {9, 23}, {3, 23}, {20, 23}, {12, 23}, {4, 23}, {24, 23}, {9, 23}, {4, 23}, {3, 23}, {10, 23}, {17, 23}, {5, 23}, {17, 23}, {15, 23}, {30, 23}, {7, 23}, {1, 23}, {35, 23}, {29, 23}, {10, 23}, {25, 23}, {9, 23}, {13, 23}, {2, 23}, {24, 23}, {32, 23}, {23, 23}, {27, 23}, {42, 23}], rec), j);
ds24 := DISTRIBUTED(DATASET([{2, 24}, {7, 24}, {9, 24}, {2, 24}, {11, 24}, {7, 24}, {0, 24}, {10, 24}, {14, 24}, {7, 24}, {16, 24}, {1, 24}, {9, 24}, {15, 24}, {7, 24}, {2, 24}, {8, 24}, {0, 24}, {8, 24}, {5, 24}, {12, 24}, {23, 24}, {24, 24}, {2, 24}, {18, 24}, {12, 24}, {19, 24}, {7, 24}, {36, 24}, {6, 24}, {18, 24}, {39, 24}, {14, 24}, {16, 24}, {27, 24}, {1, 24}, {18, 24}, {17, 24}, {36, 24}, {32, 24}], rec), j);
ds25 := DISTRIBUTED(DATASET([{9, 25}, {8, 25}, {7, 25}, {9, 25}, {9, 25}, {10, 25}, {9, 25}, {6, 25}, {8, 25}, {13, 25}, {12, 25}, {20, 25}, {0, 25}, {13, 25}, {14, 25}, {5, 25}, {25, 25}, {17, 25}, {7, 25}, {28, 25}, {8, 25}, {14, 25}, {30, 25}, {11, 25}, {1, 25}, {13, 25}, {2, 25}, {25, 25}, {25, 25}, {18, 25}, {39, 25}, {20, 25}, {8, 25}, {8, 25}, {38, 25}, {27, 25}, {32, 25}, {21, 25}, {16, 25}, {1, 25}], rec), j);

dsb1 := DISTRIBUTED(DATASET([{8, 1}, {14, 1}, {4, 1}, {19, 1}, {15, 1}, {16, 1}, {29, 1}, {44, 1}, {38, 1}, {6, 1}, {4, 1}, {1, 1}, {21, 1}, {43, 1}, {68, 1}, {15, 1}, {52, 1}, {9, 1}, {8, 1}, {44, 1}, {7, 1}, {53, 1}, {11, 1}, {65, 1}, {122, 1}, {71, 1}, {111, 1}, {112, 1}, {107, 1}, {57, 1}, {50, 1}, {86, 1}, {27, 1}, {66, 1}, {159, 1}, {58, 1}, {52, 1}, {104, 1}, {23, 1}, {11, 1}], rec), j);
dsb2 := DISTRIBUTED(DATASET([{9, 2}, {9, 2}, {3, 2}, {13, 2}, {29, 2}, {21, 2}, {2, 2}, {24, 2}, {32, 2}, {13, 2}, {6, 2}, {14, 2}, {37, 2}, {68, 2}, {6, 2}, {0, 2}, {88, 2}, {76, 2}, {7, 2}, {43, 2}, {75, 2}, {16, 2}, {39, 2}, {98, 2}, {115, 2}, {58, 2}, {38, 2}, {52, 2}, {98, 2}, {108, 2}, {13, 2}, {10, 2}, {107, 2}, {150, 2}, {79, 2}, {6, 2}, {91, 2}, {83, 2}, {160, 2}, {138, 2}], rec), j);
dsb3 := DISTRIBUTED(DATASET([{3, 3}, {1, 3}, {19, 3}, {23, 3}, {23, 3}, {29, 3}, {34, 3}, {12, 3}, {13, 3}, {11, 3}, {34, 3}, {24, 3}, {61, 3}, {1, 3}, {71, 3}, {11, 3}, {9, 3}, {70, 3}, {56, 3}, {70, 3}, {107, 3}, {27, 3}, {2, 3}, {60, 3}, {92, 3}, {13, 3}, {79, 3}, {127, 3}, {12, 3}, {9, 3}, {119, 3}, {136, 3}, {147, 3}, {57, 3}, {106, 3}, {151, 3}, {64, 3}, {172, 3}, {113, 3}, {7, 3}], rec), j);
dsb4 := DISTRIBUTED(DATASET([{8, 4}, {9, 4}, {5, 4}, {1, 4}, {9, 4}, {22, 4}, {25, 4}, {39, 4}, {26, 4}, {39, 4}, {51, 4}, {12, 4}, {5, 4}, {48, 4}, {48, 4}, {73, 4}, {79, 4}, {30, 4}, {57, 4}, {78, 4}, {77, 4}, {1, 4}, {45, 4}, {51, 4}, {9, 4}, {45, 4}, {105, 4}, {17, 4}, {135, 4}, {40, 4}, {89, 4}, {60, 4}, {131, 4}, {21, 4}, {39, 4}, {115, 4}, {100, 4}, {27, 4}, {92, 4}, {80, 4}], rec), j);
dsb5 := DISTRIBUTED(DATASET([{4, 5}, {11, 5}, {15, 5}, {2, 5}, {12, 5}, {31, 5}, {17, 5}, {27, 5}, {1, 5}, {13, 5}, {16, 5}, {8, 5}, {43, 5}, {10, 5}, {30, 5}, {40, 5}, {88, 5}, {66, 5}, {66, 5}, {87, 5}, {82, 5}, {102, 5}, {108, 5}, {109, 5}, {12, 5}, {105, 5}, {30, 5}, {67, 5}, {29, 5}, {62, 5}, {38, 5}, {161, 5}, {66, 5}, {46, 5}, {163, 5}, {5, 5}, {53, 5}, {157, 5}, {27, 5}, {116, 5}], rec), j);
dsb6 := DISTRIBUTED(DATASET([{0, 6}, {8, 6}, {18, 6}, {6, 6}, {29, 6}, {20, 6}, {16, 6}, {4, 6}, {15, 6}, {46, 6}, {42, 6}, {47, 6}, {26, 6}, {68, 6}, {63, 6}, {77, 6}, {26, 6}, {39, 6}, {21, 6}, {83, 6}, {9, 6}, {91, 6}, {21, 6}, {118, 6}, {15, 6}, {127, 6}, {51, 6}, {45, 6}, {77, 6}, {98, 6}, {98, 6}, {7, 6}, {159, 6}, {100, 6}, {153, 6}, {4, 6}, {89, 6}, {74, 6}, {92, 6}, {50, 6}], rec), j);
dsb7 := DISTRIBUTED(DATASET([{4, 7}, {5, 7}, {14, 7}, {14, 7}, {0, 7}, {24, 7}, {12, 7}, {18, 7}, {2, 7}, {31, 7}, {50, 7}, {51, 7}, {12, 7}, {46, 7}, {78, 7}, {36, 7}, {33, 7}, {24, 7}, {39, 7}, {22, 7}, {47, 7}, {94, 7}, {119, 7}, {73, 7}, {66, 7}, {9, 7}, {85, 7}, {21, 7}, {103, 7}, {138, 7}, {93, 7}, {116, 7}, {99, 7}, {68, 7}, {69, 7}, {150, 7}, {75, 7}, {58, 7}, {16, 7}, {171, 7}], rec), j);
dsb8 := DISTRIBUTED(DATASET([{5, 8}, {13, 8}, {11, 8}, {5, 8}, {26, 8}, {34, 8}, {24, 8}, {17, 8}, {42, 8}, {52, 8}, {2, 8}, {8, 8}, {15, 8}, {0, 8}, {45, 8}, {14, 8}, {87, 8}, {32, 8}, {89, 8}, {50, 8}, {86, 8}, {13, 8}, {36, 8}, {43, 8}, {40, 8}, {84, 8}, {125, 8}, {39, 8}, {86, 8}, {46, 8}, {28, 8}, {109, 8}, {140, 8}, {58, 8}, {58, 8}, {42, 8}, {133, 8}, {70, 8}, {196, 8}, {89, 8}], rec), j);
dsb9 := DISTRIBUTED(DATASET([{0, 9}, {10, 9}, {16, 9}, {0, 9}, {13, 9}, {3, 9}, {17, 9}, {8, 9}, {6, 9}, {29, 9}, {0, 9}, {32, 9}, {52, 9}, {60, 9}, {18, 9}, {37, 9}, {13, 9}, {54, 9}, {8, 9}, {52, 9}, {83, 9}, {12, 9}, {7, 9}, {6, 9}, {31, 9}, {77, 9}, {30, 9}, {130, 9}, {113, 9}, {83, 9}, {38, 9}, {118, 9}, {25, 9}, {161, 9}, {104, 9}, {132, 9}, {52, 9}, {152, 9}, {31, 9}, {180, 9}], rec), j);
dsb10 := DISTRIBUTED(DATASET([{8, 10}, {4, 10}, {3, 10}, {22, 10}, {27, 10}, {10, 10}, {19, 10}, {21, 10}, {35, 10}, {14, 10}, {48, 10}, {1, 10}, {16, 10}, {58, 10}, {61, 10}, {4, 10}, {34, 10}, {9, 10}, {7, 10}, {87, 10}, {99, 10}, {49, 10}, {106, 10}, {85, 10}, {19, 10}, {94, 10}, {19, 10}, {41, 10}, {64, 10}, {128, 10}, {31, 10}, {68, 10}, {154, 10}, {83, 10}, {66, 10}, {75, 10}, {35, 10}, {74, 10}, {69, 10}, {170, 10}], rec), j);
dsb11 := DISTRIBUTED(DATASET([{8, 11}, {3, 11}, {9, 11}, {5, 11}, {15, 11}, {5, 11}, {39, 11}, {40, 11}, {5, 11}, {38, 11}, {15, 11}, {32, 11}, {51, 11}, {5, 11}, {37, 11}, {84, 11}, {56, 11}, {81, 11}, {31, 11}, {47, 11}, {18, 11}, {8, 11}, {35, 11}, {71, 11}, {61, 11}, {68, 11}, {132, 11}, {98, 11}, {71, 11}, {102, 11}, {89, 11}, {12, 11}, {49, 11}, {16, 11}, {10, 11}, {28, 11}, {52, 11}, {97, 11}, {90, 11}, {201, 11}], rec), j);
dsb12 := DISTRIBUTED(DATASET([{6, 12}, {8, 12}, {15, 12}, {16, 12}, {1, 12}, {20, 12}, {12, 12}, {6, 12}, {37, 12}, {3, 12}, {42, 12}, {9, 12}, {2, 12}, {8, 12}, {42, 12}, {6, 12}, {33, 12}, {43, 12}, {83, 12}, {52, 12}, {88, 12}, {10, 12}, {117, 12}, {14, 12}, {45, 12}, {16, 12}, {54, 12}, {7, 12}, {120, 12}, {97, 12}, {58, 12}, {133, 12}, {57, 12}, {141, 12}, {14, 12}, {92, 12}, {39, 12}, {65, 12}, {123, 12}, {71, 12}], rec), j);
dsb13 := DISTRIBUTED(DATASET([{4, 13}, {4, 13}, {15, 13}, {20, 13}, {8, 13}, {21, 13}, {21, 13}, {16, 13}, {45, 13}, {47, 13}, {32, 13}, {60, 13}, {49, 13}, {0, 13}, {72, 13}, {73, 13}, {7, 13}, {64, 13}, {63, 13}, {73, 13}, {3, 13}, {47, 13}, {112, 13}, {79, 13}, {27, 13}, {65, 13}, {131, 13}, {141, 13}, {22, 13}, {147, 13}, {101, 13}, {22, 13}, {8, 13}, {13, 13}, {123, 13}, {45, 13}, {89, 13}, {85, 13}, {43, 13}, {42, 13}], rec), j);
dsb14 := DISTRIBUTED(DATASET([{3, 14}, {5, 14}, {12, 14}, {21, 14}, {6, 14}, {8, 14}, {27, 14}, {40, 14}, {27, 14}, {33, 14}, {8, 14}, {29, 14}, {7, 14}, {51, 14}, {0, 14}, {16, 14}, {72, 14}, {15, 14}, {17, 14}, {69, 14}, {12, 14}, {81, 14}, {38, 14}, {19, 14}, {119, 14}, {34, 14}, {85, 14}, {106, 14}, {63, 14}, {50, 14}, {122, 14}, {100, 14}, {161, 14}, {38, 14}, {42, 14}, {89, 14}, {19, 14}, {161, 14}, {197, 14}, {114, 14}], rec), j);
dsb15 := DISTRIBUTED(DATASET([{5, 15}, {4, 15}, {13, 15}, {5, 15}, {19, 15}, {26, 15}, {35, 15}, {44, 15}, {31, 15}, {2, 15}, {23, 15}, {60, 15}, {69, 15}, {47, 15}, {74, 15}, {60, 15}, {82, 15}, {49, 15}, {58, 15}, {4, 15}, {57, 15}, {45, 15}, {6, 15}, {81, 15}, {118, 15}, {16, 15}, {92, 15}, {22, 15}, {144, 15}, {115, 15}, {63, 15}, {7, 15}, {50, 15}, {171, 15}, {125, 15}, {16, 15}, {95, 15}, {26, 15}, {32, 15}, {142, 15}], rec), j);
dsb16 := DISTRIBUTED(DATASET([{4, 16}, {5, 16}, {10, 16}, {17, 16}, {16, 16}, {0, 16}, {6, 16}, {23, 16}, {44, 16}, {22, 16}, {53, 16}, {53, 16}, {28, 16}, {14, 16}, {26, 16}, {51, 16}, {60, 16}, {30, 16}, {35, 16}, {18, 16}, {26, 16}, {24, 16}, {85, 16}, {120, 16}, {110, 16}, {44, 16}, {55, 16}, {120, 16}, {16, 16}, {142, 16}, {122, 16}, {26, 16}, {139, 16}, {133, 16}, {64, 16}, {59, 16}, {38, 16}, {133, 16}, {50, 16}, {36, 16}], rec), j);
dsb17 := DISTRIBUTED(DATASET([{4, 17}, {0, 17}, {1, 17}, {9, 17}, {25, 17}, {21, 17}, {17, 17}, {41, 17}, {45, 17}, {13, 17}, {0, 17}, {64, 17}, {13, 17}, {7, 17}, {35, 17}, {71, 17}, {24, 17}, {65, 17}, {44, 17}, {8, 17}, {44, 17}, {51, 17}, {0, 17}, {65, 17}, {119, 17}, {54, 17}, {7, 17}, {31, 17}, {86, 17}, {91, 17}, {86, 17}, {150, 17}, {95, 17}, {86, 17}, {77, 17}, {61, 17}, {22, 17}, {52, 17}, {40, 17}, {118, 17}], rec), j);
dsb18 := DISTRIBUTED(DATASET([{3, 18}, {10, 18}, {12, 18}, {7, 18}, {27, 18}, {30, 18}, {6, 18}, {7, 18}, {24, 18}, {26, 18}, {33, 18}, {29, 18}, {31, 18}, {41, 18}, {70, 18}, {76, 18}, {0, 18}, {44, 18}, {49, 18}, {63, 18}, {79, 18}, {29, 18}, {11, 18}, {119, 18}, {4, 18}, {94, 18}, {10, 18}, {54, 18}, {85, 18}, {138, 18}, {52, 18}, {45, 18}, {34, 18}, {37, 18}, {18, 18}, {101, 18}, {37, 18}, {114, 18}, {175, 18}, {69, 18}], rec), j);
dsb19 := DISTRIBUTED(DATASET([{1, 19}, {0, 19}, {0, 19}, {7, 19}, {11, 19}, {1, 19}, {13, 19}, {7, 19}, {8, 19}, {27, 19}, {32, 19}, {58, 19}, {11, 19}, {37, 19}, {59, 19}, {18, 19}, {23, 19}, {5, 19}, {53, 19}, {1, 19}, {72, 19}, {4, 19}, {65, 19}, {118, 19}, {104, 19}, {109, 19}, {98, 19}, {56, 19}, {68, 19}, {81, 19}, {72, 19}, {17, 19}, {13, 19}, {134, 19}, {134, 19}, {71, 19}, {59, 19}, {189, 19}, {154, 19}, {87, 19}], rec), j);
dsb20 := DISTRIBUTED(DATASET([{3, 20}, {8, 20}, {7, 20}, {7, 20}, {13, 20}, {34, 20}, {6, 20}, {29, 20}, {2, 20}, {38, 20}, {0, 20}, {29, 20}, {10, 20}, {59, 20}, {23, 20}, {12, 20}, {55, 20}, {67, 20}, {88, 20}, {50, 20}, {54, 20}, {89, 20}, {117, 20}, {2, 20}, {39, 20}, {125, 20}, {60, 20}, {21, 20}, {54, 20}, {129, 20}, {87, 20}, {61, 20}, {142, 20}, {142, 20}, {98, 20}, {180, 20}, {114, 20}, {28, 20}, {70, 20}, {175, 20}], rec), j);
dsb21 := DISTRIBUTED(DATASET([{0, 21}, {4, 21}, {18, 21}, {8, 21}, {24, 21}, {33, 21}, {20, 21}, {34, 21}, {18, 21}, {36, 21}, {8, 21}, {14, 21}, {26, 21}, {38, 21}, {1, 21}, {25, 21}, {31, 21}, {40, 21}, {22, 21}, {5, 21}, {80, 21}, {92, 21}, {89, 21}, {60, 21}, {53, 21}, {79, 21}, {20, 21}, {72, 21}, {23, 21}, {115, 21}, {46, 21}, {63, 21}, {119, 21}, {100, 21}, {79, 21}, {141, 21}, {68, 21}, {32, 21}, {6, 21}, {139, 21}], rec), j);
dsb22 := DISTRIBUTED(DATASET([{9, 22}, {2, 22}, {5, 22}, {24, 22}, {1, 22}, {8, 22}, {4, 22}, {32, 22}, {48, 22}, {12, 22}, {27, 22}, {23, 22}, {66, 22}, {65, 22}, {66, 22}, {15, 22}, {37, 22}, {90, 22}, {72, 22}, {89, 22}, {108, 22}, {2, 22}, {100, 22}, {36, 22}, {101, 22}, {45, 22}, {138, 22}, {2, 22}, {110, 22}, {52, 22}, {29, 22}, {88, 22}, {166, 22}, {61, 22}, {72, 22}, {10, 22}, {37, 22}, {124, 22}, {185, 22}, {185, 22}], rec), j);
dsb23 := DISTRIBUTED(DATASET([{5, 23}, {2, 23}, {19, 23}, {1, 23}, {1, 23}, {29, 23}, {28, 23}, {26, 23}, {26, 23}, {50, 23}, {22, 23}, {44, 23}, {49, 23}, {31, 23}, {64, 23}, {31, 23}, {33, 23}, {33, 23}, {88, 23}, {75, 23}, {78, 23}, {25, 23}, {107, 23}, {81, 23}, {16, 23}, {87, 23}, {113, 23}, {33, 23}, {110, 23}, {79, 23}, {119, 23}, {115, 23}, {112, 23}, {153, 23}, {53, 23}, {40, 23}, {17, 23}, {87, 23}, {125, 23}, {99, 23}], rec), j);
dsb24 := DISTRIBUTED(DATASET([{9, 24}, {13, 24}, {7, 24}, {2, 24}, {0, 24}, {26, 24}, {17, 24}, {31, 24}, {18, 24}, {30, 24}, {6, 24}, {41, 24}, {63, 24}, {23, 24}, {75, 24}, {5, 24}, {77, 24}, {14, 24}, {22, 24}, {12, 24}, {63, 24}, {29, 24}, {73, 24}, {115, 24}, {122, 24}, {76, 24}, {111, 24}, {67, 24}, {50, 24}, {30, 24}, {54, 24}, {109, 24}, {104, 24}, {156, 24}, {51, 24}, {149, 24}, {80, 24}, {39, 24}, {180, 24}, {156, 24}], rec), j);
dsb25 := DISTRIBUTED(DATASET([{5, 25}, {3, 25}, {16, 25}, {21, 25}, {29, 25}, {23, 25}, {35, 25}, {24, 25}, {47, 25}, {49, 25}, {50, 25}, {63, 25}, {5, 25}, {28, 25}, {61, 25}, {9, 25}, {13, 25}, {58, 25}, {37, 25}, {99, 25}, {0, 25}, {41, 25}, {40, 25}, {78, 25}, {79, 25}, {12, 25}, {39, 25}, {95, 25}, {6, 25}, {70, 25}, {40, 25}, {157, 25}, {34, 25}, {63, 25}, {79, 25}, {132, 25}, {64, 25}, {53, 25}, {186, 25}, {170, 25}], rec), j);

srt1 := SORT(ds1, i, LOCAL);
ddp1 := DEDUP(srt1, i, LOCAL);
srt2 := SORT(ds2, i, LOCAL);
ddp2 := DEDUP(srt2, i, LOCAL);
srt3 := SORT(ds3, i, LOCAL);
ddp3 := DEDUP(srt3, i, LOCAL);
srt4 := SORT(ds4, i, LOCAL);
ddp4 := DEDUP(srt4, i, LOCAL);
srt5 := SORT(ds5, i, LOCAL);
ddp5 := DEDUP(srt5, i, LOCAL);
srt6 := SORT(ds6, i, LOCAL);
ddp6 := DEDUP(srt6, i, LOCAL);
srt7 := SORT(ds7, i, LOCAL);
ddp7 := DEDUP(srt7, i, LOCAL);
srt8 := SORT(ds8, i, LOCAL);
ddp8 := DEDUP(srt8, i, LOCAL);
srt9 := SORT(ds9, i, LOCAL);
ddp9 := DEDUP(srt9, i, LOCAL);
srt10 := SORT(ds10, i, LOCAL);
ddp10 := DEDUP(srt10, i, LOCAL);
srt11 := SORT(ds11, i, LOCAL);
ddp11 := DEDUP(srt11, i, LOCAL);
srt12 := SORT(ds12, i, LOCAL);
ddp12 := DEDUP(srt12, i, LOCAL);
srt13 := SORT(ds13, i, LOCAL);
ddp13 := DEDUP(srt13, i, LOCAL);
srt14 := SORT(ds14, i, LOCAL);
ddp14 := DEDUP(srt14, i, LOCAL);
srt15 := SORT(ds15, i, LOCAL);
ddp15 := DEDUP(srt15, i, LOCAL);
srt16 := SORT(ds16, i, LOCAL);
ddp16 := DEDUP(srt16, i, LOCAL);
srt17 := SORT(ds17, i, LOCAL);
ddp17 := DEDUP(srt17, i, LOCAL);
srt18 := SORT(ds18, i, LOCAL);
ddp18 := DEDUP(srt18, i, LOCAL);
srt19 := SORT(ds19, i, LOCAL);
ddp19 := DEDUP(srt19, i, LOCAL);
srt20 := SORT(ds20, i, LOCAL);
ddp20 := DEDUP(srt20, i, LOCAL);
srt21 := SORT(ds21, i, LOCAL);
ddp21 := DEDUP(srt21, i, LOCAL);
srt22 := SORT(ds22, i, LOCAL);
ddp22 := DEDUP(srt22, i, LOCAL);
srt23 := SORT(ds23, i, LOCAL);
ddp23 := DEDUP(srt23, i, LOCAL);
srt24 := SORT(ds24, i, LOCAL);
ddp24 := DEDUP(srt24, i, LOCAL);
srt25 := SORT(ds25, i, LOCAL);
ddp25 := DEDUP(srt25, i, LOCAL);

rec diff(rec l, rec r) := TRANSFORM
    SELF.i := l.i - r.i;
    SELF.j := l.j - r.j;
END;

srtb1 := SORT(dsb1, i, LOCAL);
ddpb1 := DEDUP(srtb1, i, LOCAL);
srtb2 := SORT(dsb2, i, LOCAL);
ddpb2 := DEDUP(srtb2, i, LOCAL);
srtb3 := SORT(dsb3, i, LOCAL);
ddpb3 := DEDUP(srtb3, i, LOCAL);
srtb4 := SORT(dsb4, i, LOCAL);
ddpb4 := DEDUP(srtb4, i, LOCAL);
srtb5 := SORT(dsb5, i, LOCAL);
ddpb5 := DEDUP(srtb5, i, LOCAL);
srtb6 := SORT(dsb6, i, LOCAL);
ddpb6 := DEDUP(srtb6, i, LOCAL);
srtb7 := SORT(dsb7, i, LOCAL);
ddpb7 := DEDUP(srtb7, i, LOCAL);
srtb8 := SORT(dsb8, i, LOCAL);
ddpb8 := DEDUP(srtb8, i, LOCAL);
srtb9 := SORT(dsb9, i, LOCAL);
ddpb9 := DEDUP(srtb9, i, LOCAL);
srtb10 := SORT(dsb10, i, LOCAL);
ddpb10 := DEDUP(srtb10, i, LOCAL);
srtb11 := SORT(dsb11, i, LOCAL);
ddpb11 := DEDUP(srtb11, i, LOCAL);
srtb12 := SORT(dsb12, i, LOCAL);
ddpb12 := DEDUP(srtb12, i, LOCAL);
srtb13 := SORT(dsb13, i, LOCAL);
ddpb13 := DEDUP(srtb13, i, LOCAL);
srtb14 := SORT(dsb14, i, LOCAL);
ddpb14 := DEDUP(srtb14, i, LOCAL);
srtb15 := SORT(dsb15, i, LOCAL);
ddpb15 := DEDUP(srtb15, i, LOCAL);
srtb16 := SORT(dsb16, i, LOCAL);
ddpb16 := DEDUP(srtb16, i, LOCAL);
srtb17 := SORT(dsb17, i, LOCAL);
ddpb17 := DEDUP(srtb17, i, LOCAL);
srtb18 := SORT(dsb18, i, LOCAL);
ddpb18 := DEDUP(srtb18, i, LOCAL);
srtb19 := SORT(dsb19, i, LOCAL);
ddpb19 := DEDUP(srtb19, i, LOCAL);
srtb20 := SORT(dsb20, i, LOCAL);
ddpb20 := DEDUP(srtb20, i, LOCAL);
srtb21 := SORT(dsb21, i, LOCAL);
ddpb21 := DEDUP(srtb21, i, LOCAL);
srtb22 := SORT(dsb22, i, LOCAL);
ddpb22 := DEDUP(srtb22, i, LOCAL);
srtb23 := SORT(dsb23, i, LOCAL);
ddpb23 := DEDUP(srtb23, i, LOCAL);
srtb24 := SORT(dsb24, i, LOCAL);
ddpb24 := DEDUP(srtb24, i, LOCAL);
srtb25 := SORT(dsb25, i, LOCAL);
ddpb25 := DEDUP(srtb25, i, LOCAL);

srtfnl := SORT(ds1 + ds2 + ds3 + ds4 + ds5 + ds6 + ds7 + ds8 + ds9 + ds10 + ds11 + ds12 + ds13 + ds14 + ds15 + ds16 + ds17 + ds18 + ds19 + ds20 + ds21 + ds22 + ds23 + ds24 + ds25, i, j, LOCAL);
mrgsrt := MERGE(srt1, srt2, srt3, srt4, srt5, srt6, srt7, srt8, srt9, srt10, srt11, srt12, srt13, srt14, srt15, srt16, srt17, srt18, srt19, srt20, srt21, srt22, srt23, srt24, srt25, sorted(i) ,LOCAL);
subcnt1 := COUNT(srtfnl) - COUNT(mrgsrt);
ok1 := IF(subcnt1=0, 'counts okay', 'counts wrong');

recseq := RECORD
    rec;
        UNSIGNED4 k;
END;

recseq AddSeq(rec l, UNSIGNED4 c) := TRANSFORM
SELF.k := c;
SELF := l;
END;



diff1 := IF(subcnt1=0, COUNT(JOIN(PROJECT(srtfnl,AddSeq(LEFT,COUNTER)), PROJECT(DISTRIBUTED(mrgsrt,j),AddSeq(LEFT,COUNTER)),(LEFT.k=RIGHT.k)AND(LEFT.i=RIGHT.i)AND(LEFT.j=RIGHT.j), LEFT ONLY, LOCAL)), subcnt1);
//diff1 := IF(subcnt1=0, COUNT(COMBINE(srtfnl, mrgsrt, diff(LEFT, RIGHT))((i != 0) OR (j != 0))), subcnt1);

ddpfnl := DEDUP(srtfnl, i, LOCAL);
mrgddp := MERGE(ddp1, ddp2, ddp3, ddp4, ddp5, ddp6, ddp7, ddp8, ddp9, ddp10, ddp11, ddp12, ddp13, ddp14, ddp15, ddp16, ddp17, ddp18, ddp19, ddp20, ddp21, ddp22, ddp23, ddp24, ddp25, DEDUP, sorted(i),LOCAL);
subcnt2 := COUNT(ddpfnl) - COUNT(mrgddp);
ok2 := IF(subcnt2=0, 'counts okay', 'counts wrong');
diff2 := IF(subcnt2=0, COUNT(JOIN(PROJECT(ddpfnl,AddSeq(LEFT,COUNTER)), PROJECT(DISTRIBUTED(mrgddp,j),AddSeq(LEFT,COUNTER)),(LEFT.k=RIGHT.k)AND(LEFT.i=RIGHT.i)AND(LEFT.j=RIGHT.j), LEFT ONLY, LOCAL)), subcnt2);
//diff2 := IF(subcnt2=0, COUNT(COMBINE(ddpfnl, mrgddp, diff(LEFT, RIGHT))((i != 0) OR (j != 0))), subcnt2);

srtbfnl := SORT(dsb1 + dsb2 + dsb3 + dsb4 + dsb5 + dsb6 + dsb7 + dsb8 + dsb9 + dsb10 + dsb11 + dsb12 + dsb13 + dsb14 + dsb15 + dsb16 + dsb17 + dsb18 + dsb19 + dsb20 + dsb21 + dsb22 + dsb23 + dsb24 + dsb25, i, j, LOCAL);
mrgsrtb := MERGE(srtb1, srtb2, srtb3, srtb4, srtb5, srtb6, srtb7, srtb8, srtb9, srtb10, srtb11, srtb12, srtb13, srtb14, srtb15, srtb16, srtb17, srtb18, srtb19, srtb20, srtb21, srtb22, srtb23, srtb24, srtb25, sorted(i),LOCAL);
subcnt3 := COUNT(srtbfnl) - COUNT(mrgsrtb);
ok3 := IF(subcnt3=0, 'counts okay', 'counts wrong');
diff3 := IF(subcnt3=0, COUNT(JOIN(PROJECT(srtbfnl,AddSeq(LEFT,COUNTER)), PROJECT(DISTRIBUTED(mrgsrtb,j),AddSeq(LEFT,COUNTER)),(LEFT.k=RIGHT.k)AND(LEFT.i=RIGHT.i)AND(LEFT.j=RIGHT.j), LEFT ONLY, LOCAL)), subcnt3);
//diff3 := IF(subcnt3=0, COUNT(COMBINE(srtbfnl, mrgsrtb, diff(LEFT, RIGHT))((i != 0) OR (j != 0))), subcnt3);

ddpbfnl := DEDUP(srtbfnl, i, LOCAL);
mrgddpb := MERGE(ddpb1, ddpb2, ddpb3, ddpb4, ddpb5, ddpb6, ddpb7, ddpb8, ddpb9, ddpb10, ddpb11, ddpb12, ddpb13, ddpb14, ddpb15, ddpb16, ddpb17, ddpb18, ddpb19, ddpb20, ddpb21, ddpb22, ddpb23, ddpb24, ddpb25, DEDUP, sorted(i),LOCAL);
subcnt4 := COUNT(ddpbfnl) - COUNT(mrgddpb);
ok4 := IF(subcnt4=0, 'counts okay', 'counts wrong');
diff4 := IF(subcnt4=0, COUNT(JOIN(PROJECT(ddpbfnl,AddSeq(LEFT,COUNTER)), PROJECT(DISTRIBUTED(mrgddpb,j),AddSeq(LEFT,COUNTER)),(LEFT.k=RIGHT.k)AND(LEFT.i=RIGHT.i)AND(LEFT.j=RIGHT.j), LEFT ONLY, LOCAL)), subcnt4);
//diff4 := IF(subcnt4=0, COUNT(COMBINE(ddpbfnl, mrgddpb, diff(LEFT, RIGHT))((i != 0) OR (j != 0))), subcnt4);

output(JOIN(PROJECT(srtfnl,AddSeq(LEFT,COUNTER)), PROJECT(mrgsrt,AddSeq(LEFT,COUNTER)),(LEFT.k=RIGHT.k)AND(LEFT.i=RIGHT.i)AND(LEFT.j=RIGHT.j), LEFT ONLY));
SEQUENTIAL(OUTPUT(ok1), OUTPUT(diff1), OUTPUT(ok2), OUTPUT(diff2), OUTPUT(ok3), OUTPUT(diff3), OUTPUT(ok4), OUTPUT(diff4));


// Global tests for Thor
unsigned numrecs := 1000 : stored('numrecs');

trec := record
         unsigned4 seq;
         unsigned4 strm;
         unsigned4 nodenum;
         unsigned4 key;
       end;

seed1 := dataset([{0, 1, 0, 0}], trec);
seed2 := dataset([{0, 2, 0, 0}], trec);
seed3 := dataset([{0, 3, 0, 0}], trec);
seed4 := dataset([{0, 4, 0, 0}], trec);
seed5 := dataset([{0, 5, 0, 0}], trec);

trec addNodeNum(trec L, unsigned4 c) := transform
    SELF.nodenum := c-1;
    SELF := L;
  END;

dataset one_per_node(dataset(trec) seed) := distribute(normalize(seed, CLUSTERSIZE, addNodeNum(LEFT, COUNTER)), nodenum);

trec generatePseudoRandom(trec L, unsigned4 c) := transform
    SELF.seq := c;   
    SELF.key := (RANDOM()%900);
    SELF := L;
  END;

dataset bigstream(dataset(trec) seed) := NORMALIZE(one_per_node(seed), numrecs, generatePseudoRandom(LEFT, counter)); 
dataset sortedrecs(dataset(trec) seed) := sort(bigstream(seed), key); 
mergedrecs :=      merge(sortedrecs(seed1),sortedrecs(seed2),sortedrecs(seed3),sortedrecs(seed4),sortedrecs(seed5), sorted(key));
mergeddeduprecs := merge(sortedrecs(seed1),sortedrecs(seed2),sortedrecs(seed3),sortedrecs(seed4),sortedrecs(seed5),dedup , sorted(key));

trec checksort(trec l, trec r) := TRANSFORM
    SELF.key := if (l.key <= r.key, 
                r.key, 
                ERROR('ERROR - records not in order!'));
    SELF.seq := if ((l.key != r.key) or (l.strm <= r.strm),
                r.seq, 
                    ERROR('ERROR - records not in sequence!'));
    SELF := L;
END;


checksorted := NOFOLD(iterate(distributed(mergedrecs,nodenum), checksort(LEFT, RIGHT), local)); // local for speed

if(count(checksorted) = CLUSTERSIZE*5*numrecs, output('Merge succeeded'), FAIL('ERROR (1) - count did not match expected'));

trec checkdedup(trec l, trec r) := TRANSFORM
    SELF.key := if (l.key <= r.key, 
                r.key, 
                ERROR('ERROR - records not in order!'));
    SELF.seq := if ((l.key != r.key)or(l.strm = r.strm)or(l.strm = 0),  // can only have duplicates from the same stream 
                    r.seq, 
                    ERROR('ERROR - records not deduped correctly! ' 
                  + l.key + ', ' + r.key + ', ' + l.strm + ', ' + r.strm));
    SELF := L;
END;

checkdeduped := NOFOLD(iterate(distributed(mergeddeduprecs,nodenum), checkdedup(LEFT, RIGHT) , local));

if(count(checkdeduped) <= CLUSTERSIZE*5*numrecs, output('Dedup succeeded'), FAIL('ERROR (2) - count did not match expected'));
